{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":91715,"databundleVersionId":11351736,"sourceType":"competition"}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:43.407073Z","iopub.execute_input":"2025-04-02T09:55:43.407444Z","iopub.status.idle":"2025-04-02T09:55:43.430428Z","shell.execute_reply.started":"2025-04-02T09:55:43.407404Z","shell.execute_reply":"2025-04-02T09:55:43.429242Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s5e4/sample_submission.csv\n/kaggle/input/playground-series-s5e4/train.csv\n/kaggle/input/playground-series-s5e4/test.csv\n","output_type":"stream"}],"execution_count":15},{"cell_type":"code","source":"from sklearn.preprocessing import OrdinalEncoder","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T10:22:43.618513Z","iopub.execute_input":"2025-04-02T10:22:43.618997Z","iopub.status.idle":"2025-04-02T10:22:43.669408Z","shell.execute_reply.started":"2025-04-02T10:22:43.618954Z","shell.execute_reply":"2025-04-02T10:22:43.668128Z"}},"outputs":[],"execution_count":30},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/playground-series-s5e4/train.csv')\nres_df = df.copy()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:43.431941Z","iopub.execute_input":"2025-04-02T09:55:43.432486Z","iopub.status.idle":"2025-04-02T09:55:44.772430Z","shell.execute_reply.started":"2025-04-02T09:55:43.432432Z","shell.execute_reply":"2025-04-02T09:55:44.771074Z"}},"outputs":[],"execution_count":16},{"cell_type":"code","source":"df.sample(3)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:44.773931Z","iopub.execute_input":"2025-04-02T09:55:44.774249Z","iopub.status.idle":"2025-04-02T09:55:44.828224Z","shell.execute_reply.started":"2025-04-02T09:55:44.774222Z","shell.execute_reply":"2025-04-02T09:55:44.826240Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"            id     Podcast_Name Episode_Title  Episode_Length_minutes  \\\n585720  585720       Tech Talks    Episode 82                   24.86   \n20605    20605  Fashion Forward    Episode 75                     NaN   \n45973    45973      Sound Waves    Episode 35                   36.82   \n\n             Genre  Host_Popularity_percentage Publication_Day  \\\n585720  Technology                       73.05         Tuesday   \n20605    Lifestyle                       39.99          Sunday   \n45973        Music                       49.94         Tuesday   \n\n       Publication_Time  Guest_Popularity_percentage  Number_of_Ads  \\\n585720          Evening                        62.76            1.0   \n20605             Night                        81.91            0.0   \n45973         Afternoon                        58.09            2.0   \n\n       Episode_Sentiment  Listening_Time_minutes  \n585720          Negative                10.59434  \n20605           Negative                61.66912  \n45973           Negative                28.86129  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Podcast_Name</th>\n      <th>Episode_Title</th>\n      <th>Episode_Length_minutes</th>\n      <th>Genre</th>\n      <th>Host_Popularity_percentage</th>\n      <th>Publication_Day</th>\n      <th>Publication_Time</th>\n      <th>Guest_Popularity_percentage</th>\n      <th>Number_of_Ads</th>\n      <th>Episode_Sentiment</th>\n      <th>Listening_Time_minutes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>585720</th>\n      <td>585720</td>\n      <td>Tech Talks</td>\n      <td>Episode 82</td>\n      <td>24.86</td>\n      <td>Technology</td>\n      <td>73.05</td>\n      <td>Tuesday</td>\n      <td>Evening</td>\n      <td>62.76</td>\n      <td>1.0</td>\n      <td>Negative</td>\n      <td>10.59434</td>\n    </tr>\n    <tr>\n      <th>20605</th>\n      <td>20605</td>\n      <td>Fashion Forward</td>\n      <td>Episode 75</td>\n      <td>NaN</td>\n      <td>Lifestyle</td>\n      <td>39.99</td>\n      <td>Sunday</td>\n      <td>Night</td>\n      <td>81.91</td>\n      <td>0.0</td>\n      <td>Negative</td>\n      <td>61.66912</td>\n    </tr>\n    <tr>\n      <th>45973</th>\n      <td>45973</td>\n      <td>Sound Waves</td>\n      <td>Episode 35</td>\n      <td>36.82</td>\n      <td>Music</td>\n      <td>49.94</td>\n      <td>Tuesday</td>\n      <td>Afternoon</td>\n      <td>58.09</td>\n      <td>2.0</td>\n      <td>Negative</td>\n      <td>28.86129</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:44.829637Z","iopub.execute_input":"2025-04-02T09:55:44.830039Z","iopub.status.idle":"2025-04-02T09:55:45.095094Z","shell.execute_reply.started":"2025-04-02T09:55:44.830005Z","shell.execute_reply":"2025-04-02T09:55:45.093777Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 750000 entries, 0 to 749999\nData columns (total 12 columns):\n #   Column                       Non-Null Count   Dtype  \n---  ------                       --------------   -----  \n 0   id                           750000 non-null  int64  \n 1   Podcast_Name                 750000 non-null  object \n 2   Episode_Title                750000 non-null  object \n 3   Episode_Length_minutes       662907 non-null  float64\n 4   Genre                        750000 non-null  object \n 5   Host_Popularity_percentage   750000 non-null  float64\n 6   Publication_Day              750000 non-null  object \n 7   Publication_Time             750000 non-null  object \n 8   Guest_Popularity_percentage  603970 non-null  float64\n 9   Number_of_Ads                749999 non-null  float64\n 10  Episode_Sentiment            750000 non-null  object \n 11  Listening_Time_minutes       750000 non-null  float64\ndtypes: float64(5), int64(1), object(6)\nmemory usage: 68.7+ MB\n","output_type":"stream"}],"execution_count":18},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:45.099309Z","iopub.execute_input":"2025-04-02T09:55:45.099667Z","iopub.status.idle":"2025-04-02T09:55:45.345571Z","shell.execute_reply.started":"2025-04-02T09:55:45.099635Z","shell.execute_reply":"2025-04-02T09:55:45.344394Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"id                                  0\nPodcast_Name                        0\nEpisode_Title                       0\nEpisode_Length_minutes          87093\nGenre                               0\nHost_Popularity_percentage          0\nPublication_Day                     0\nPublication_Time                    0\nGuest_Popularity_percentage    146030\nNumber_of_Ads                       1\nEpisode_Sentiment                   0\nListening_Time_minutes              0\ndtype: int64"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"146030/df.shape[0]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:45.346948Z","iopub.execute_input":"2025-04-02T09:55:45.347251Z","iopub.status.idle":"2025-04-02T09:55:45.353670Z","shell.execute_reply.started":"2025-04-02T09:55:45.347226Z","shell.execute_reply":"2025-04-02T09:55:45.352458Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"0.19470666666666667"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"df.Episode_Length_minutes.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:45.354946Z","iopub.execute_input":"2025-04-02T09:55:45.355251Z","iopub.status.idle":"2025-04-02T09:55:45.417515Z","shell.execute_reply.started":"2025-04-02T09:55:45.355224Z","shell.execute_reply":"2025-04-02T09:55:45.416317Z"}},"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"count    662907.000000\nmean         64.504738\nstd          32.969603\nmin           0.000000\n25%          35.730000\n50%          63.840000\n75%          94.070000\nmax         325.240000\nName: Episode_Length_minutes, dtype: float64"},"metadata":{}}],"execution_count":21},{"cell_type":"code","source":"df.Episode_Length_minutes = df.Episode_Length_minutes.fillna(df.Episode_Length_minutes.mean()).mean()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:45.418495Z","iopub.execute_input":"2025-04-02T09:55:45.418799Z","iopub.status.idle":"2025-04-02T09:55:45.444434Z","shell.execute_reply.started":"2025-04-02T09:55:45.418775Z","shell.execute_reply":"2025-04-02T09:55:45.443270Z"}},"outputs":[],"execution_count":22},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:45.445270Z","iopub.execute_input":"2025-04-02T09:55:45.445547Z","iopub.status.idle":"2025-04-02T09:55:45.688075Z","shell.execute_reply.started":"2025-04-02T09:55:45.445523Z","shell.execute_reply":"2025-04-02T09:55:45.686825Z"}},"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"id                                  0\nPodcast_Name                        0\nEpisode_Title                       0\nEpisode_Length_minutes              0\nGenre                               0\nHost_Popularity_percentage          0\nPublication_Day                     0\nPublication_Time                    0\nGuest_Popularity_percentage    146030\nNumber_of_Ads                       1\nEpisode_Sentiment                   0\nListening_Time_minutes              0\ndtype: int64"},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"df.select_dtypes(include=['float']).corr()['Listening_Time_minutes']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:45.689191Z","iopub.execute_input":"2025-04-02T09:55:45.689574Z","iopub.status.idle":"2025-04-02T09:55:45.796802Z","shell.execute_reply.started":"2025-04-02T09:55:45.689536Z","shell.execute_reply":"2025-04-02T09:55:45.795549Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"Episode_Length_minutes              NaN\nHost_Popularity_percentage     0.050870\nGuest_Popularity_percentage   -0.016014\nNumber_of_Ads                 -0.118337\nListening_Time_minutes         1.000000\nName: Listening_Time_minutes, dtype: float64"},"metadata":{}}],"execution_count":24},{"cell_type":"code","source":"df.Episode_Title = df.Episode_Title.apply(lambda x: int(x.split(' ')[1]))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:45.798078Z","iopub.execute_input":"2025-04-02T09:55:45.798485Z","iopub.status.idle":"2025-04-02T09:55:46.343533Z","shell.execute_reply.started":"2025-04-02T09:55:45.798445Z","shell.execute_reply":"2025-04-02T09:55:46.342479Z"}},"outputs":[],"execution_count":25},{"cell_type":"code","source":"df.Podcast_Name.value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:46.344531Z","iopub.execute_input":"2025-04-02T09:55:46.344871Z","iopub.status.idle":"2025-04-02T09:55:46.408407Z","shell.execute_reply.started":"2025-04-02T09:55:46.344834Z","shell.execute_reply":"2025-04-02T09:55:46.406418Z"}},"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"Podcast_Name\nTech Talks             22847\nSports Weekly          20053\nFunny Folks            19635\nTech Trends            19549\nFitness First          19488\nBusiness Insights      19480\nStyle Guide            19364\nGame Day               19272\nMelody Mix             18889\nCriminal Minds         17735\nFinance Focus          17628\nDetective Diaries      17452\nCrime Chronicles       17374\nAthlete's Arena        17327\nFashion Forward        17280\nTune Time              17254\nBusiness Briefs        17012\nLifestyle Lounge       16661\nTrue Crime Stories     16373\nSports Central         16191\nDigital Digest         16171\nHumor Hub              16144\nMystery Matters        16002\nComedy Corner          15927\nJoke Junction          15074\nWellness Wave          15009\nSport Spot             14778\nGadget Geek            14770\nHome & Living          14686\nLaugh Line             14673\nLife Lessons           14464\nWorld Watch            14043\nSound Waves            13928\nGlobal News            13649\nMind & Body            13639\nDaily Digest           13391\nMoney Matters          13380\nCurrent Affairs        13138\nMarket Masters         13092\nStudy Sessions         13053\nInnovators             12913\nMusic Matters          12652\nLearning Lab           12291\nEducational Nuggets    12245\nHealthy Living         12198\nBrain Boost            11543\nHealth Hour            11114\nNews Roundup            9169\nName: count, dtype: int64"},"metadata":{}}],"execution_count":26},{"cell_type":"code","source":"df.Publication_Time.value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T09:55:46.409406Z","iopub.execute_input":"2025-04-02T09:55:46.409680Z","iopub.status.idle":"2025-04-02T09:55:46.489561Z","shell.execute_reply.started":"2025-04-02T09:55:46.409658Z","shell.execute_reply":"2025-04-02T09:55:46.488201Z"}},"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"Publication_Time\nNight        196849\nEvening      195778\nAfternoon    179460\nMorning      177913\nName: count, dtype: int64"},"metadata":{}}],"execution_count":27},{"cell_type":"code","source":"target = 'Listening_Time_minutes'\nX = df.drop(columns=[target])\ny = df[target]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T10:25:36.099028Z","iopub.execute_input":"2025-04-02T10:25:36.099495Z","iopub.status.idle":"2025-04-02T10:25:36.159312Z","shell.execute_reply.started":"2025-04-02T10:25:36.099461Z","shell.execute_reply":"2025-04-02T10:25:36.156697Z"}},"outputs":[],"execution_count":32},{"cell_type":"markdown","source":"### Encoding columns","metadata":{}},{"cell_type":"code","source":"genre_encoder = OrdinalEncoder()\nGenre_encoded = genre_encoder.fit_transform(X[['Genre']])\n\nPublication_Day_encoder = OrdinalEncoder()\nPublication_Day_encoded = Publication_Day_encoder.fit_transform(X[['Publication_Day']])\n\nPublication_Time_encoder = OrdinalEncoder()\nPublication_Time_encoded = Publication_Time_encoder.fit_transform(X[['Publication_Time']])\n\nEpisode_Sentiment_encoder = OrdinalEncoder()\nEpisode_Sentiment_encoded = Episode_Sentiment_encoder.fit_transform(X[['Episode_Sentiment']])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T10:30:00.739644Z","iopub.execute_input":"2025-04-02T10:30:00.740184Z","iopub.status.idle":"2025-04-02T10:30:01.587493Z","shell.execute_reply.started":"2025-04-02T10:30:00.740132Z","shell.execute_reply":"2025-04-02T10:30:01.585932Z"}},"outputs":[],"execution_count":37},{"cell_type":"code","source":"df.Genre = Genre_encoded\ndf.Publication_Day = Publication_Day_encoded\ndf.Publication_Time = Publication_Time_encoded\ndf.Episode_Sentiment = Episode_Sentiment_encoded\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T10:33:45.684151Z","iopub.execute_input":"2025-04-02T10:33:45.684648Z","iopub.status.idle":"2025-04-02T10:33:45.702932Z","shell.execute_reply.started":"2025-04-02T10:33:45.684609Z","shell.execute_reply":"2025-04-02T10:33:45.701659Z"}},"outputs":[],"execution_count":39},{"cell_type":"code","source":"df.sample(3)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T10:34:15.803785Z","iopub.execute_input":"2025-04-02T10:34:15.804389Z","iopub.status.idle":"2025-04-02T10:34:15.874842Z","shell.execute_reply.started":"2025-04-02T10:34:15.804338Z","shell.execute_reply":"2025-04-02T10:34:15.873363Z"}},"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"            id    Podcast_Name  Episode_Title  Episode_Length_minutes  Genre  \\\n6398      6398  Healthy Living             16               64.504738    3.0   \n232240  232240  Digital Digest             42               64.504738    8.0   \n403539  403539    Learning Lab             96               64.504738    2.0   \n\n        Host_Popularity_percentage  Publication_Day  Publication_Time  \\\n6398                         93.31              5.0               2.0   \n232240                       61.52              3.0               1.0   \n403539                       95.85              6.0               3.0   \n\n        Guest_Popularity_percentage  Number_of_Ads  Episode_Sentiment  \\\n6398                          75.56            3.0                1.0   \n232240                        42.54            1.0                1.0   \n403539                        96.64            0.0                2.0   \n\n        Listening_Time_minutes  \n6398                  39.83178  \n232240                39.20586  \n403539                 7.16492  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Podcast_Name</th>\n      <th>Episode_Title</th>\n      <th>Episode_Length_minutes</th>\n      <th>Genre</th>\n      <th>Host_Popularity_percentage</th>\n      <th>Publication_Day</th>\n      <th>Publication_Time</th>\n      <th>Guest_Popularity_percentage</th>\n      <th>Number_of_Ads</th>\n      <th>Episode_Sentiment</th>\n      <th>Listening_Time_minutes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>6398</th>\n      <td>6398</td>\n      <td>Healthy Living</td>\n      <td>16</td>\n      <td>64.504738</td>\n      <td>3.0</td>\n      <td>93.31</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>75.56</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>39.83178</td>\n    </tr>\n    <tr>\n      <th>232240</th>\n      <td>232240</td>\n      <td>Digital Digest</td>\n      <td>42</td>\n      <td>64.504738</td>\n      <td>8.0</td>\n      <td>61.52</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>42.54</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>39.20586</td>\n    </tr>\n    <tr>\n      <th>403539</th>\n      <td>403539</td>\n      <td>Learning Lab</td>\n      <td>96</td>\n      <td>64.504738</td>\n      <td>2.0</td>\n      <td>95.85</td>\n      <td>6.0</td>\n      <td>3.0</td>\n      <td>96.64</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>7.16492</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":41},{"cell_type":"code","source":"df.select_dtypes(include=['float']).corr()['Listening_Time_minutes']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-02T10:34:18.643270Z","iopub.execute_input":"2025-04-02T10:34:18.643784Z","iopub.status.idle":"2025-04-02T10:34:19.241743Z","shell.execute_reply.started":"2025-04-02T10:34:18.643744Z","shell.execute_reply":"2025-04-02T10:34:19.240547Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"Episode_Length_minutes              NaN\nGenre                          0.004940\nHost_Popularity_percentage     0.050870\nPublication_Day                0.004030\nPublication_Time               0.013225\nGuest_Popularity_percentage   -0.016014\nNumber_of_Ads                 -0.118337\nEpisode_Sentiment              0.039470\nListening_Time_minutes         1.000000\nName: Listening_Time_minutes, dtype: float64"},"metadata":{}}],"execution_count":42},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}