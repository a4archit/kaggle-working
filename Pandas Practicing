{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "600668a6",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:32.088446Z",
     "iopub.status.busy": "2025-10-04T11:32:32.088049Z",
     "iopub.status.idle": "2025-10-04T11:32:33.909453Z",
     "shell.execute_reply": "2025-10-04T11:32:33.908510Z"
    },
    "papermill": {
     "duration": 1.832019,
     "end_time": "2025-10-04T11:32:33.910932",
     "exception": false,
     "start_time": "2025-10-04T11:32:32.078913",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/amazon-sales-dataset/amazon.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4edf0e49",
   "metadata": {
    "papermill": {
     "duration": 0.003978,
     "end_time": "2025-10-04T11:32:33.920009",
     "exception": false,
     "start_time": "2025-10-04T11:32:33.916031",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# <center style=\"padding: 15px; background-color: #000; color:#fff\">Fundamentals</center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e56cd8ed",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:33.929679Z",
     "iopub.status.busy": "2025-10-04T11:32:33.928981Z",
     "iopub.status.idle": "2025-10-04T11:32:34.150946Z",
     "shell.execute_reply": "2025-10-04T11:32:34.150154Z"
    },
    "papermill": {
     "duration": 0.228498,
     "end_time": "2025-10-04T11:32:34.152560",
     "exception": false,
     "start_time": "2025-10-04T11:32:33.924062",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv(r\"/kaggle/input/amazon-sales-dataset/amazon.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5de2af60",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.161851Z",
     "iopub.status.busy": "2025-10-04T11:32:34.161584Z",
     "iopub.status.idle": "2025-10-04T11:32:34.187549Z",
     "shell.execute_reply": "2025-10-04T11:32:34.186694Z"
    },
    "papermill": {
     "duration": 0.032048,
     "end_time": "2025-10-04T11:32:34.188885",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.156837",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>product_id</th>\n",
       "      <th>product_name</th>\n",
       "      <th>category</th>\n",
       "      <th>discounted_price</th>\n",
       "      <th>actual_price</th>\n",
       "      <th>discount_percentage</th>\n",
       "      <th>rating</th>\n",
       "      <th>rating_count</th>\n",
       "      <th>about_product</th>\n",
       "      <th>user_id</th>\n",
       "      <th>user_name</th>\n",
       "      <th>review_id</th>\n",
       "      <th>review_title</th>\n",
       "      <th>review_content</th>\n",
       "      <th>img_link</th>\n",
       "      <th>product_link</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>B07JW9H4J1</td>\n",
       "      <td>Wayona Nylon Braided USB to Lightning Fast Cha...</td>\n",
       "      <td>Computers&amp;Accessories|Accessories&amp;Peripherals|...</td>\n",
       "      <td>₹399</td>\n",
       "      <td>₹1,099</td>\n",
       "      <td>64%</td>\n",
       "      <td>4.2</td>\n",
       "      <td>24,269</td>\n",
       "      <td>High Compatibility : Compatible With iPhone 12...</td>\n",
       "      <td>AG3D6O4STAQKAY2UVGEUV46KN35Q,AHMY5CWJMMK5BJRBB...</td>\n",
       "      <td>Manav,Adarsh gupta,Sundeep,S.Sayeed Ahmed,jasp...</td>\n",
       "      <td>R3HXWT0LRP0NMF,R2AJM3LFTLZHFO,R6AQJGUP6P86,R1K...</td>\n",
       "      <td>Satisfied,Charging is really fast,Value for mo...</td>\n",
       "      <td>Looks durable Charging is fine tooNo complains...</td>\n",
       "      <td>https://m.media-amazon.com/images/W/WEBP_40237...</td>\n",
       "      <td>https://www.amazon.in/Wayona-Braided-WN3LG1-Sy...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>B098NS6PVG</td>\n",
       "      <td>Ambrane Unbreakable 60W / 3A Fast Charging 1.5...</td>\n",
       "      <td>Computers&amp;Accessories|Accessories&amp;Peripherals|...</td>\n",
       "      <td>₹199</td>\n",
       "      <td>₹349</td>\n",
       "      <td>43%</td>\n",
       "      <td>4.0</td>\n",
       "      <td>43,994</td>\n",
       "      <td>Compatible with all Type C enabled devices, be...</td>\n",
       "      <td>AECPFYFQVRUWC3KGNLJIOREFP5LQ,AGYYVPDD7YG7FYNBX...</td>\n",
       "      <td>ArdKn,Nirbhay kumar,Sagar Viswanathan,Asp,Plac...</td>\n",
       "      <td>RGIQEG07R9HS2,R1SMWZQ86XIN8U,R2J3Y1WL29GWDE,RY...</td>\n",
       "      <td>A Good Braided Cable for Your Type C Device,Go...</td>\n",
       "      <td>I ordered this cable to connect my phone to An...</td>\n",
       "      <td>https://m.media-amazon.com/images/W/WEBP_40237...</td>\n",
       "      <td>https://www.amazon.in/Ambrane-Unbreakable-Char...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>B096MSW6CT</td>\n",
       "      <td>Sounce Fast Phone Charging Cable &amp; Data Sync U...</td>\n",
       "      <td>Computers&amp;Accessories|Accessories&amp;Peripherals|...</td>\n",
       "      <td>₹199</td>\n",
       "      <td>₹1,899</td>\n",
       "      <td>90%</td>\n",
       "      <td>3.9</td>\n",
       "      <td>7,928</td>\n",
       "      <td>【 Fast Charger&amp; Data Sync】-With built-in safet...</td>\n",
       "      <td>AGU3BBQ2V2DDAMOAKGFAWDDQ6QHA,AESFLDV2PT363T2AQ...</td>\n",
       "      <td>Kunal,Himanshu,viswanath,sai niharka,saqib mal...</td>\n",
       "      <td>R3J3EQQ9TZI5ZJ,R3E7WBGK7ID0KV,RWU79XKQ6I1QF,R2...</td>\n",
       "      <td>Good speed for earlier versions,Good Product,W...</td>\n",
       "      <td>Not quite durable and sturdy,https://m.media-a...</td>\n",
       "      <td>https://m.media-amazon.com/images/W/WEBP_40237...</td>\n",
       "      <td>https://www.amazon.in/Sounce-iPhone-Charging-C...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   product_id                                       product_name  \\\n",
       "0  B07JW9H4J1  Wayona Nylon Braided USB to Lightning Fast Cha...   \n",
       "1  B098NS6PVG  Ambrane Unbreakable 60W / 3A Fast Charging 1.5...   \n",
       "2  B096MSW6CT  Sounce Fast Phone Charging Cable & Data Sync U...   \n",
       "\n",
       "                                            category discounted_price  \\\n",
       "0  Computers&Accessories|Accessories&Peripherals|...             ₹399   \n",
       "1  Computers&Accessories|Accessories&Peripherals|...             ₹199   \n",
       "2  Computers&Accessories|Accessories&Peripherals|...             ₹199   \n",
       "\n",
       "  actual_price discount_percentage rating rating_count  \\\n",
       "0       ₹1,099                 64%    4.2       24,269   \n",
       "1         ₹349                 43%    4.0       43,994   \n",
       "2       ₹1,899                 90%    3.9        7,928   \n",
       "\n",
       "                                       about_product  \\\n",
       "0  High Compatibility : Compatible With iPhone 12...   \n",
       "1  Compatible with all Type C enabled devices, be...   \n",
       "2  【 Fast Charger& Data Sync】-With built-in safet...   \n",
       "\n",
       "                                             user_id  \\\n",
       "0  AG3D6O4STAQKAY2UVGEUV46KN35Q,AHMY5CWJMMK5BJRBB...   \n",
       "1  AECPFYFQVRUWC3KGNLJIOREFP5LQ,AGYYVPDD7YG7FYNBX...   \n",
       "2  AGU3BBQ2V2DDAMOAKGFAWDDQ6QHA,AESFLDV2PT363T2AQ...   \n",
       "\n",
       "                                           user_name  \\\n",
       "0  Manav,Adarsh gupta,Sundeep,S.Sayeed Ahmed,jasp...   \n",
       "1  ArdKn,Nirbhay kumar,Sagar Viswanathan,Asp,Plac...   \n",
       "2  Kunal,Himanshu,viswanath,sai niharka,saqib mal...   \n",
       "\n",
       "                                           review_id  \\\n",
       "0  R3HXWT0LRP0NMF,R2AJM3LFTLZHFO,R6AQJGUP6P86,R1K...   \n",
       "1  RGIQEG07R9HS2,R1SMWZQ86XIN8U,R2J3Y1WL29GWDE,RY...   \n",
       "2  R3J3EQQ9TZI5ZJ,R3E7WBGK7ID0KV,RWU79XKQ6I1QF,R2...   \n",
       "\n",
       "                                        review_title  \\\n",
       "0  Satisfied,Charging is really fast,Value for mo...   \n",
       "1  A Good Braided Cable for Your Type C Device,Go...   \n",
       "2  Good speed for earlier versions,Good Product,W...   \n",
       "\n",
       "                                      review_content  \\\n",
       "0  Looks durable Charging is fine tooNo complains...   \n",
       "1  I ordered this cable to connect my phone to An...   \n",
       "2  Not quite durable and sturdy,https://m.media-a...   \n",
       "\n",
       "                                            img_link  \\\n",
       "0  https://m.media-amazon.com/images/W/WEBP_40237...   \n",
       "1  https://m.media-amazon.com/images/W/WEBP_40237...   \n",
       "2  https://m.media-amazon.com/images/W/WEBP_40237...   \n",
       "\n",
       "                                        product_link  \n",
       "0  https://www.amazon.in/Wayona-Braided-WN3LG1-Sy...  \n",
       "1  https://www.amazon.in/Ambrane-Unbreakable-Char...  \n",
       "2  https://www.amazon.in/Sounce-iPhone-Charging-C...  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "66db55cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.199023Z",
     "iopub.status.busy": "2025-10-04T11:32:34.198720Z",
     "iopub.status.idle": "2025-10-04T11:32:34.208061Z",
     "shell.execute_reply": "2025-10-04T11:32:34.207322Z"
    },
    "papermill": {
     "duration": 0.015944,
     "end_time": "2025-10-04T11:32:34.209446",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.193502",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# removing unwanted features\n",
    "df = df.drop(columns=['product_name','product_id','about_product','user_id','review_id','user_name','review_title','review_content','img_link','product_link'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7400caf2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.219564Z",
     "iopub.status.busy": "2025-10-04T11:32:34.219260Z",
     "iopub.status.idle": "2025-10-04T11:32:34.230083Z",
     "shell.execute_reply": "2025-10-04T11:32:34.229321Z"
    },
    "papermill": {
     "duration": 0.017366,
     "end_time": "2025-10-04T11:32:34.231418",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.214052",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>category</th>\n",
       "      <th>discounted_price</th>\n",
       "      <th>actual_price</th>\n",
       "      <th>discount_percentage</th>\n",
       "      <th>rating</th>\n",
       "      <th>rating_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1396</th>\n",
       "      <td>Home&amp;Kitchen|Kitchen&amp;HomeAppliances|SmallKitch...</td>\n",
       "      <td>₹499</td>\n",
       "      <td>₹1,299</td>\n",
       "      <td>62%</td>\n",
       "      <td>3.9</td>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>624</th>\n",
       "      <td>Electronics|WearableTechnology|SmartWatches</td>\n",
       "      <td>₹2,998</td>\n",
       "      <td>₹5,999</td>\n",
       "      <td>50%</td>\n",
       "      <td>4.1</td>\n",
       "      <td>5,179</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1150</th>\n",
       "      <td>Home&amp;Kitchen|Heating,Cooling&amp;AirQuality|WaterH...</td>\n",
       "      <td>₹2,599</td>\n",
       "      <td>₹4,400</td>\n",
       "      <td>41%</td>\n",
       "      <td>4.1</td>\n",
       "      <td>14,947</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               category discounted_price  \\\n",
       "1396  Home&Kitchen|Kitchen&HomeAppliances|SmallKitch...             ₹499   \n",
       "624         Electronics|WearableTechnology|SmartWatches           ₹2,998   \n",
       "1150  Home&Kitchen|Heating,Cooling&AirQuality|WaterH...           ₹2,599   \n",
       "\n",
       "     actual_price discount_percentage rating rating_count  \n",
       "1396       ₹1,299                 62%    3.9           65  \n",
       "624        ₹5,999                 50%    4.1        5,179  \n",
       "1150       ₹4,400                 41%    4.1       14,947  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1a270e10",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.241457Z",
     "iopub.status.busy": "2025-10-04T11:32:34.241163Z",
     "iopub.status.idle": "2025-10-04T11:32:34.262503Z",
     "shell.execute_reply": "2025-10-04T11:32:34.261324Z"
    },
    "papermill": {
     "duration": 0.027793,
     "end_time": "2025-10-04T11:32:34.263767",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.235974",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1465 entries, 0 to 1464\n",
      "Data columns (total 6 columns):\n",
      " #   Column               Non-Null Count  Dtype \n",
      "---  ------               --------------  ----- \n",
      " 0   category             1465 non-null   object\n",
      " 1   discounted_price     1465 non-null   object\n",
      " 2   actual_price         1465 non-null   object\n",
      " 3   discount_percentage  1465 non-null   object\n",
      " 4   rating               1465 non-null   object\n",
      " 5   rating_count         1463 non-null   object\n",
      "dtypes: object(6)\n",
      "memory usage: 68.8+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "08906f07",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.275229Z",
     "iopub.status.busy": "2025-10-04T11:32:34.274650Z",
     "iopub.status.idle": "2025-10-04T11:32:34.281378Z",
     "shell.execute_reply": "2025-10-04T11:32:34.280631Z"
    },
    "papermill": {
     "duration": 0.014244,
     "end_time": "2025-10-04T11:32:34.282687",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.268443",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "category               0\n",
       "discounted_price       0\n",
       "actual_price           0\n",
       "discount_percentage    0\n",
       "rating                 0\n",
       "rating_count           2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "87cf89e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.293083Z",
     "iopub.status.busy": "2025-10-04T11:32:34.292555Z",
     "iopub.status.idle": "2025-10-04T11:32:34.300127Z",
     "shell.execute_reply": "2025-10-04T11:32:34.299368Z"
    },
    "papermill": {
     "duration": 0.014238,
     "end_time": "2025-10-04T11:32:34.301662",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.287424",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "135"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "da25cfa7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.313075Z",
     "iopub.status.busy": "2025-10-04T11:32:34.312301Z",
     "iopub.status.idle": "2025-10-04T11:32:34.317453Z",
     "shell.execute_reply": "2025-10-04T11:32:34.316737Z"
    },
    "papermill": {
     "duration": 0.011932,
     "end_time": "2025-10-04T11:32:34.318682",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.306750",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1465, 6)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "16ffa26f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.329013Z",
     "iopub.status.busy": "2025-10-04T11:32:34.328774Z",
     "iopub.status.idle": "2025-10-04T11:32:34.334905Z",
     "shell.execute_reply": "2025-10-04T11:32:34.334219Z"
    },
    "papermill": {
     "duration": 0.01269,
     "end_time": "2025-10-04T11:32:34.336107",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.323417",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['category_all'] = df.category.apply(lambda x: x.split('|'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "17d5955d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.347503Z",
     "iopub.status.busy": "2025-10-04T11:32:34.346827Z",
     "iopub.status.idle": "2025-10-04T11:32:34.351978Z",
     "shell.execute_reply": "2025-10-04T11:32:34.351421Z"
    },
    "papermill": {
     "duration": 0.012182,
     "end_time": "2025-10-04T11:32:34.353148",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.340966",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['cat_counts'] = df.category_all.apply(lambda l: len(l))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4816be29",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.363704Z",
     "iopub.status.busy": "2025-10-04T11:32:34.363213Z",
     "iopub.status.idle": "2025-10-04T11:32:34.369985Z",
     "shell.execute_reply": "2025-10-04T11:32:34.369243Z"
    },
    "papermill": {
     "duration": 0.013303,
     "end_time": "2025-10-04T11:32:34.371266",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.357963",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([5, 4, 3, 7, 2, 6])"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.cat_counts.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e948fac7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.382053Z",
     "iopub.status.busy": "2025-10-04T11:32:34.381796Z",
     "iopub.status.idle": "2025-10-04T11:32:34.392048Z",
     "shell.execute_reply": "2025-10-04T11:32:34.391407Z"
    },
    "papermill": {
     "duration": 0.01705,
     "end_time": "2025-10-04T11:32:34.393263",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.376213",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>category</th>\n",
       "      <th>discounted_price</th>\n",
       "      <th>actual_price</th>\n",
       "      <th>discount_percentage</th>\n",
       "      <th>rating</th>\n",
       "      <th>rating_count</th>\n",
       "      <th>category_all</th>\n",
       "      <th>cat_counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Computers&amp;Accessories|Accessories&amp;Peripherals|...</td>\n",
       "      <td>₹399</td>\n",
       "      <td>₹1,099</td>\n",
       "      <td>64%</td>\n",
       "      <td>4.2</td>\n",
       "      <td>24,269</td>\n",
       "      <td>[Computers&amp;Accessories, Accessories&amp;Peripheral...</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Computers&amp;Accessories|Accessories&amp;Peripherals|...</td>\n",
       "      <td>₹199</td>\n",
       "      <td>₹349</td>\n",
       "      <td>43%</td>\n",
       "      <td>4.0</td>\n",
       "      <td>43,994</td>\n",
       "      <td>[Computers&amp;Accessories, Accessories&amp;Peripheral...</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Computers&amp;Accessories|Accessories&amp;Peripherals|...</td>\n",
       "      <td>₹199</td>\n",
       "      <td>₹1,899</td>\n",
       "      <td>90%</td>\n",
       "      <td>3.9</td>\n",
       "      <td>7,928</td>\n",
       "      <td>[Computers&amp;Accessories, Accessories&amp;Peripheral...</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            category discounted_price  \\\n",
       "0  Computers&Accessories|Accessories&Peripherals|...             ₹399   \n",
       "1  Computers&Accessories|Accessories&Peripherals|...             ₹199   \n",
       "2  Computers&Accessories|Accessories&Peripherals|...             ₹199   \n",
       "\n",
       "  actual_price discount_percentage rating rating_count  \\\n",
       "0       ₹1,099                 64%    4.2       24,269   \n",
       "1         ₹349                 43%    4.0       43,994   \n",
       "2       ₹1,899                 90%    3.9        7,928   \n",
       "\n",
       "                                        category_all  cat_counts  \n",
       "0  [Computers&Accessories, Accessories&Peripheral...           5  \n",
       "1  [Computers&Accessories, Accessories&Peripheral...           5  \n",
       "2  [Computers&Accessories, Accessories&Peripheral...           5  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[:3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "86c999c5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.404293Z",
     "iopub.status.busy": "2025-10-04T11:32:34.404004Z",
     "iopub.status.idle": "2025-10-04T11:32:34.413776Z",
     "shell.execute_reply": "2025-10-04T11:32:34.413016Z"
    },
    "papermill": {
     "duration": 0.016628,
     "end_time": "2025-10-04T11:32:34.415030",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.398402",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cat_counts</th>\n",
       "      <th>category_all</th>\n",
       "      <th>rating_count</th>\n",
       "      <th>rating</th>\n",
       "      <th>discount_percentage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>[Computers&amp;Accessories, Accessories&amp;Peripheral...</td>\n",
       "      <td>94,363</td>\n",
       "      <td>4.2</td>\n",
       "      <td>53%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>[Computers&amp;Accessories, Accessories&amp;Peripheral...</td>\n",
       "      <td>16,905</td>\n",
       "      <td>4.2</td>\n",
       "      <td>61%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>[Computers&amp;Accessories, Accessories&amp;Peripheral...</td>\n",
       "      <td>24,871</td>\n",
       "      <td>3.9</td>\n",
       "      <td>85%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cat_counts                                       category_all rating_count  \\\n",
       "3           5  [Computers&Accessories, Accessories&Peripheral...       94,363   \n",
       "4           5  [Computers&Accessories, Accessories&Peripheral...       16,905   \n",
       "5           5  [Computers&Accessories, Accessories&Peripheral...       24,871   \n",
       "\n",
       "  rating discount_percentage  \n",
       "3    4.2                 53%  \n",
       "4    4.2                 61%  \n",
       "5    3.9                 85%  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[3:6,:2:-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "37e3ef16",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.426140Z",
     "iopub.status.busy": "2025-10-04T11:32:34.425883Z",
     "iopub.status.idle": "2025-10-04T11:32:34.440758Z",
     "shell.execute_reply": "2025-10-04T11:32:34.440028Z"
    },
    "papermill": {
     "duration": 0.021634,
     "end_time": "2025-10-04T11:32:34.441967",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.420333",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>category</th>\n",
       "      <th>discounted_price</th>\n",
       "      <th>actual_price</th>\n",
       "      <th>discount_percentage</th>\n",
       "      <th>rating</th>\n",
       "      <th>rating_count</th>\n",
       "      <th>category_all</th>\n",
       "      <th>cat_counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1279</th>\n",
       "      <td>Home&amp;Kitchen|Kitchen&amp;HomeAppliances|Vacuum,Cle...</td>\n",
       "      <td>₹2,099</td>\n",
       "      <td>₹2,499</td>\n",
       "      <td>16%</td>\n",
       "      <td>|</td>\n",
       "      <td>992</td>\n",
       "      <td>[Home&amp;Kitchen, Kitchen&amp;HomeAppliances, Vacuum,...</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>750</th>\n",
       "      <td>Electronics|GeneralPurposeBatteries&amp;BatteryCha...</td>\n",
       "      <td>₹159</td>\n",
       "      <td>₹180</td>\n",
       "      <td>12%</td>\n",
       "      <td>4.3</td>\n",
       "      <td>989</td>\n",
       "      <td>[Electronics, GeneralPurposeBatteries&amp;BatteryC...</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>977</th>\n",
       "      <td>Electronics|Headphones,Earbuds&amp;Accessories|Hea...</td>\n",
       "      <td>₹1,490</td>\n",
       "      <td>₹1,990</td>\n",
       "      <td>25%</td>\n",
       "      <td>4.1</td>\n",
       "      <td>98,250</td>\n",
       "      <td>[Electronics, Headphones,Earbuds&amp;Accessories, ...</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1059</th>\n",
       "      <td>Home&amp;Kitchen|Kitchen&amp;HomeAppliances|SmallKitch...</td>\n",
       "      <td>₹809</td>\n",
       "      <td>₹1,545</td>\n",
       "      <td>48%</td>\n",
       "      <td>3.7</td>\n",
       "      <td>976</td>\n",
       "      <td>[Home&amp;Kitchen, Kitchen&amp;HomeAppliances, SmallKi...</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>151</th>\n",
       "      <td>Computers&amp;Accessories|Accessories&amp;Peripherals|...</td>\n",
       "      <td>₹339</td>\n",
       "      <td>₹1,099</td>\n",
       "      <td>69%</td>\n",
       "      <td>4.3</td>\n",
       "      <td>974</td>\n",
       "      <td>[Computers&amp;Accessories, Accessories&amp;Peripheral...</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1273</th>\n",
       "      <td>Home&amp;Kitchen|Kitchen&amp;HomeAppliances|Vacuum,Cle...</td>\n",
       "      <td>₹299</td>\n",
       "      <td>₹499</td>\n",
       "      <td>40%</td>\n",
       "      <td>3.9</td>\n",
       "      <td>1,015</td>\n",
       "      <td>[Home&amp;Kitchen, Kitchen&amp;HomeAppliances, Vacuum,...</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1376</th>\n",
       "      <td>Home&amp;Kitchen|Kitchen&amp;HomeAppliances|WaterPurif...</td>\n",
       "      <td>₹215</td>\n",
       "      <td>₹1,499</td>\n",
       "      <td>86%</td>\n",
       "      <td>3.9</td>\n",
       "      <td>1,004</td>\n",
       "      <td>[Home&amp;Kitchen, Kitchen&amp;HomeAppliances, WaterPu...</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>286</th>\n",
       "      <td>Electronics|HomeTheater,TV&amp;Video|Televisions|S...</td>\n",
       "      <td>₹18,999</td>\n",
       "      <td>₹35,000</td>\n",
       "      <td>46%</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1,001</td>\n",
       "      <td>[Electronics, HomeTheater,TV&amp;Video, Television...</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>282</th>\n",
       "      <td>Computers&amp;Accessories|Accessories&amp;Peripherals|...</td>\n",
       "      <td>₹199</td>\n",
       "      <td>₹999</td>\n",
       "      <td>80%</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[Computers&amp;Accessories, Accessories&amp;Peripheral...</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>324</th>\n",
       "      <td>Computers&amp;Accessories|Accessories&amp;Peripherals|...</td>\n",
       "      <td>₹249</td>\n",
       "      <td>₹999</td>\n",
       "      <td>75%</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[Computers&amp;Accessories, Accessories&amp;Peripheral...</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1465 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               category discounted_price  \\\n",
       "1279  Home&Kitchen|Kitchen&HomeAppliances|Vacuum,Cle...           ₹2,099   \n",
       "750   Electronics|GeneralPurposeBatteries&BatteryCha...             ₹159   \n",
       "977   Electronics|Headphones,Earbuds&Accessories|Hea...           ₹1,490   \n",
       "1059  Home&Kitchen|Kitchen&HomeAppliances|SmallKitch...             ₹809   \n",
       "151   Computers&Accessories|Accessories&Peripherals|...             ₹339   \n",
       "...                                                 ...              ...   \n",
       "1273  Home&Kitchen|Kitchen&HomeAppliances|Vacuum,Cle...             ₹299   \n",
       "1376  Home&Kitchen|Kitchen&HomeAppliances|WaterPurif...             ₹215   \n",
       "286   Electronics|HomeTheater,TV&Video|Televisions|S...          ₹18,999   \n",
       "282   Computers&Accessories|Accessories&Peripherals|...             ₹199   \n",
       "324   Computers&Accessories|Accessories&Peripherals|...             ₹249   \n",
       "\n",
       "     actual_price discount_percentage rating rating_count  \\\n",
       "1279       ₹2,499                 16%      |          992   \n",
       "750          ₹180                 12%    4.3          989   \n",
       "977        ₹1,990                 25%    4.1       98,250   \n",
       "1059       ₹1,545                 48%    3.7          976   \n",
       "151        ₹1,099                 69%    4.3          974   \n",
       "...           ...                 ...    ...          ...   \n",
       "1273         ₹499                 40%    3.9        1,015   \n",
       "1376       ₹1,499                 86%    3.9        1,004   \n",
       "286       ₹35,000                 46%    4.0        1,001   \n",
       "282          ₹999                 80%    3.0          NaN   \n",
       "324          ₹999                 75%    5.0          NaN   \n",
       "\n",
       "                                           category_all  cat_counts  \n",
       "1279  [Home&Kitchen, Kitchen&HomeAppliances, Vacuum,...           6  \n",
       "750   [Electronics, GeneralPurposeBatteries&BatteryC...           3  \n",
       "977   [Electronics, Headphones,Earbuds&Accessories, ...           4  \n",
       "1059  [Home&Kitchen, Kitchen&HomeAppliances, SmallKi...           5  \n",
       "151   [Computers&Accessories, Accessories&Peripheral...           5  \n",
       "...                                                 ...         ...  \n",
       "1273  [Home&Kitchen, Kitchen&HomeAppliances, Vacuum,...           5  \n",
       "1376  [Home&Kitchen, Kitchen&HomeAppliances, WaterPu...           4  \n",
       "286   [Electronics, HomeTheater,TV&Video, Television...           4  \n",
       "282   [Computers&Accessories, Accessories&Peripheral...           5  \n",
       "324   [Computers&Accessories, Accessories&Peripheral...           5  \n",
       "\n",
       "[1465 rows x 8 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sort_values(by='rating_count', ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3c701048",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.453804Z",
     "iopub.status.busy": "2025-10-04T11:32:34.453341Z",
     "iopub.status.idle": "2025-10-04T11:32:34.462676Z",
     "shell.execute_reply": "2025-10-04T11:32:34.461743Z"
    },
    "papermill": {
     "duration": 0.016405,
     "end_time": "2025-10-04T11:32:34.463794",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.447389",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1465 entries, 0 to 1464\n",
      "Data columns (total 8 columns):\n",
      " #   Column               Non-Null Count  Dtype \n",
      "---  ------               --------------  ----- \n",
      " 0   category             1465 non-null   object\n",
      " 1   discounted_price     1465 non-null   object\n",
      " 2   actual_price         1465 non-null   object\n",
      " 3   discount_percentage  1465 non-null   object\n",
      " 4   rating               1465 non-null   object\n",
      " 5   rating_count         1463 non-null   object\n",
      " 6   category_all         1465 non-null   object\n",
      " 7   cat_counts           1465 non-null   int64 \n",
      "dtypes: int64(1), object(7)\n",
      "memory usage: 91.7+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "856dd0c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.475953Z",
     "iopub.status.busy": "2025-10-04T11:32:34.475401Z",
     "iopub.status.idle": "2025-10-04T11:32:34.483392Z",
     "shell.execute_reply": "2025-10-04T11:32:34.482600Z"
    },
    "papermill": {
     "duration": 0.015457,
     "end_time": "2025-10-04T11:32:34.484671",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.469214",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf = df.copy()\n",
    "\n",
    "for col in tdf.iloc[:,1:3]:\n",
    "    tdf[col] = tdf[col].apply(lambda x: float(x.replace('₹','').replace(',','')))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "92a6a63e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.496122Z",
     "iopub.status.busy": "2025-10-04T11:32:34.495895Z",
     "iopub.status.idle": "2025-10-04T11:32:34.501154Z",
     "shell.execute_reply": "2025-10-04T11:32:34.500493Z"
    },
    "papermill": {
     "duration": 0.012524,
     "end_time": "2025-10-04T11:32:34.502535",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.490011",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf['discount_percentage'] = tdf['discount_percentage'].apply(lambda x: int(x.replace('%','')))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "4fa33b77",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.514403Z",
     "iopub.status.busy": "2025-10-04T11:32:34.514108Z",
     "iopub.status.idle": "2025-10-04T11:32:34.519611Z",
     "shell.execute_reply": "2025-10-04T11:32:34.518941Z"
    },
    "papermill": {
     "duration": 0.012788,
     "end_time": "2025-10-04T11:32:34.520774",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.507986",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf['category'] = tdf['category'].apply(lambda x: x.split('|')[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e0916673",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.532705Z",
     "iopub.status.busy": "2025-10-04T11:32:34.532257Z",
     "iopub.status.idle": "2025-10-04T11:32:34.537112Z",
     "shell.execute_reply": "2025-10-04T11:32:34.536482Z"
    },
    "papermill": {
     "duration": 0.012242,
     "end_time": "2025-10-04T11:32:34.538419",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.526177",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf = tdf.iloc[:,:-2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "9a605bf4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.550416Z",
     "iopub.status.busy": "2025-10-04T11:32:34.549814Z",
     "iopub.status.idle": "2025-10-04T11:32:34.596252Z",
     "shell.execute_reply": "2025-10-04T11:32:34.595446Z"
    },
    "papermill": {
     "duration": 0.053768,
     "end_time": "2025-10-04T11:32:34.597642",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.543874",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_13/1595886823.py:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  tx[('actual_price','weightage')] = (tx[('actual_price','sum')] / tx[('actual_price','sum')].sum()) * 100\n"
     ]
    }
   ],
   "source": [
    "x = tdf.groupby(by=['category']).agg({'actual_price':['count','mean','sum','median','min','max']})\n",
    "tx = x[x[('actual_price','count')] > 400]\n",
    "tx[('actual_price','weightage')] = (tx[('actual_price','sum')] / tx[('actual_price','sum')].sum()) * 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "74f14cc4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-04T11:32:34.609667Z",
     "iopub.status.busy": "2025-10-04T11:32:34.609404Z",
     "iopub.status.idle": "2025-10-04T11:32:34.621956Z",
     "shell.execute_reply": "2025-10-04T11:32:34.621315Z"
    },
    "papermill": {
     "duration": 0.019955,
     "end_time": "2025-10-04T11:32:34.623153",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.603198",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"7\" halign=\"left\">actual_price</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>sum</th>\n",
       "      <th>median</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>weightage</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>category</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Computers&amp;Accessories</th>\n",
       "      <td>453</td>\n",
       "      <td>1683.623135</td>\n",
       "      <td>762681.28</td>\n",
       "      <td>999.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>59890.0</td>\n",
       "      <td>9.588342</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Electronics</th>\n",
       "      <td>526</td>\n",
       "      <td>10127.311787</td>\n",
       "      <td>5326966.00</td>\n",
       "      <td>3199.5</td>\n",
       "      <td>171.0</td>\n",
       "      <td>139900.0</td>\n",
       "      <td>66.970007</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Home&amp;Kitchen</th>\n",
       "      <td>448</td>\n",
       "      <td>4162.073661</td>\n",
       "      <td>1864609.00</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>75990.0</td>\n",
       "      <td>23.441651</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      actual_price                                           \\\n",
       "                             count          mean         sum  median    min   \n",
       "category                                                                      \n",
       "Computers&Accessories          453   1683.623135   762681.28   999.0   39.0   \n",
       "Electronics                    526  10127.311787  5326966.00  3199.5  171.0   \n",
       "Home&Kitchen                   448   4162.073661  1864609.00  2000.0   79.0   \n",
       "\n",
       "                                            \n",
       "                            max  weightage  \n",
       "category                                    \n",
       "Computers&Accessories   59890.0   9.588342  \n",
       "Electronics            139900.0  66.970007  \n",
       "Home&Kitchen            75990.0  23.441651  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tx"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ff818fec",
   "metadata": {
    "papermill": {
     "duration": 0.00536,
     "end_time": "2025-10-04T11:32:34.634330",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.628970",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d3b0de0c",
   "metadata": {
    "papermill": {
     "duration": 0.005175,
     "end_time": "2025-10-04T11:32:34.644864",
     "exception": false,
     "start_time": "2025-10-04T11:32:34.639689",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 2818963,
     "sourceId": 4862520,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31089,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 7.960435,
   "end_time": "2025-10-04T11:32:35.168804",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-10-04T11:32:27.208369",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
