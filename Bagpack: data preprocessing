{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e970bdc3",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:16.883249Z",
     "iopub.status.busy": "2025-02-20T09:10:16.882773Z",
     "iopub.status.idle": "2025-02-20T09:10:19.598643Z",
     "shell.execute_reply": "2025-02-20T09:10:19.597236Z"
    },
    "papermill": {
     "duration": 2.726539,
     "end_time": "2025-02-20T09:10:19.600945",
     "exception": false,
     "start_time": "2025-02-20T09:10:16.874406",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/playground-series-s5e2/sample_submission.csv\n",
      "/kaggle/input/playground-series-s5e2/train.csv\n",
      "/kaggle/input/playground-series-s5e2/test.csv\n",
      "/kaggle/input/playground-series-s5e2/training_extra.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "from sklearn.preprocessing import OrdinalEncoder, LabelEncoder, OneHotEncoder\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ed1c6894",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:19.616960Z",
     "iopub.status.busy": "2025-02-20T09:10:19.616409Z",
     "iopub.status.idle": "2025-02-20T09:10:20.361831Z",
     "shell.execute_reply": "2025-02-20T09:10:20.360433Z"
    },
    "papermill": {
     "duration": 0.75517,
     "end_time": "2025-02-20T09:10:20.364139",
     "exception": false,
     "start_time": "2025-02-20T09:10:19.608969",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv(r\"/kaggle/input/playground-series-s5e2/train.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "44643aaf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:20.379065Z",
     "iopub.status.busy": "2025-02-20T09:10:20.378644Z",
     "iopub.status.idle": "2025-02-20T09:10:29.345518Z",
     "shell.execute_reply": "2025-02-20T09:10:29.344105Z"
    },
    "papermill": {
     "duration": 8.976556,
     "end_time": "2025-02-20T09:10:29.348080",
     "exception": false,
     "start_time": "2025-02-20T09:10:20.371524",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df_extra = pd.read_csv(r\"/kaggle/input/playground-series-s5e2/training_extra.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f169c5bd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:29.362517Z",
     "iopub.status.busy": "2025-02-20T09:10:29.362155Z",
     "iopub.status.idle": "2025-02-20T09:10:29.506268Z",
     "shell.execute_reply": "2025-02-20T09:10:29.504706Z"
    },
    "papermill": {
     "duration": 0.153694,
     "end_time": "2025-02-20T09:10:29.508455",
     "exception": false,
     "start_time": "2025-02-20T09:10:29.354761",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 300000 entries, 0 to 299999\n",
      "Data columns (total 11 columns):\n",
      " #   Column                Non-Null Count   Dtype  \n",
      "---  ------                --------------   -----  \n",
      " 0   id                    300000 non-null  int64  \n",
      " 1   Brand                 290295 non-null  object \n",
      " 2   Material              291653 non-null  object \n",
      " 3   Size                  293405 non-null  object \n",
      " 4   Compartments          300000 non-null  float64\n",
      " 5   Laptop Compartment    292556 non-null  object \n",
      " 6   Waterproof            292950 non-null  object \n",
      " 7   Style                 292030 non-null  object \n",
      " 8   Color                 290050 non-null  object \n",
      " 9   Weight Capacity (kg)  299862 non-null  float64\n",
      " 10  Price                 300000 non-null  float64\n",
      "dtypes: float64(3), int64(1), object(7)\n",
      "memory usage: 25.2+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d8b09b63",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:29.522792Z",
     "iopub.status.busy": "2025-02-20T09:10:29.522424Z",
     "iopub.status.idle": "2025-02-20T09:10:29.529757Z",
     "shell.execute_reply": "2025-02-20T09:10:29.528601Z"
    },
    "papermill": {
     "duration": 0.016552,
     "end_time": "2025-02-20T09:10:29.531726",
     "exception": false,
     "start_time": "2025-02-20T09:10:29.515174",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(300000, 11)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "153222d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:29.545982Z",
     "iopub.status.busy": "2025-02-20T09:10:29.545538Z",
     "iopub.status.idle": "2025-02-20T09:10:29.659740Z",
     "shell.execute_reply": "2025-02-20T09:10:29.658375Z"
    },
    "papermill": {
     "duration": 0.123324,
     "end_time": "2025-02-20T09:10:29.661678",
     "exception": false,
     "start_time": "2025-02-20T09:10:29.538354",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                         0\n",
       "Brand                   9705\n",
       "Material                8347\n",
       "Size                    6595\n",
       "Compartments               0\n",
       "Laptop Compartment      7444\n",
       "Waterproof              7050\n",
       "Style                   7970\n",
       "Color                   9950\n",
       "Weight Capacity (kg)     138\n",
       "Price                      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5dc1073b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:29.677076Z",
     "iopub.status.busy": "2025-02-20T09:10:29.676644Z",
     "iopub.status.idle": "2025-02-20T09:10:29.808551Z",
     "shell.execute_reply": "2025-02-20T09:10:29.807103Z"
    },
    "papermill": {
     "duration": 0.141859,
     "end_time": "2025-02-20T09:10:29.810979",
     "exception": false,
     "start_time": "2025-02-20T09:10:29.669120",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ce35e2cd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:29.826274Z",
     "iopub.status.busy": "2025-02-20T09:10:29.825851Z",
     "iopub.status.idle": "2025-02-20T09:10:29.922148Z",
     "shell.execute_reply": "2025-02-20T09:10:29.921088Z"
    },
    "papermill": {
     "duration": 0.105804,
     "end_time": "2025-02-20T09:10:29.924099",
     "exception": false,
     "start_time": "2025-02-20T09:10:29.818295",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9327bf43",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:29.939712Z",
     "iopub.status.busy": "2025-02-20T09:10:29.939371Z",
     "iopub.status.idle": "2025-02-20T09:10:29.973958Z",
     "shell.execute_reply": "2025-02-20T09:10:29.972644Z"
    },
    "papermill": {
     "duration": 0.045001,
     "end_time": "2025-02-20T09:10:29.975864",
     "exception": false,
     "start_time": "2025-02-20T09:10:29.930863",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Brand</th>\n",
       "      <th>Material</th>\n",
       "      <th>Size</th>\n",
       "      <th>Compartments</th>\n",
       "      <th>Laptop Compartment</th>\n",
       "      <th>Waterproof</th>\n",
       "      <th>Style</th>\n",
       "      <th>Color</th>\n",
       "      <th>Weight Capacity (kg)</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>226325</th>\n",
       "      <td>226325</td>\n",
       "      <td>Adidas</td>\n",
       "      <td>Canvas</td>\n",
       "      <td>Medium</td>\n",
       "      <td>6.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Messenger</td>\n",
       "      <td>Pink</td>\n",
       "      <td>28.754531</td>\n",
       "      <td>85.40561</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>278944</th>\n",
       "      <td>278944</td>\n",
       "      <td>Nike</td>\n",
       "      <td>Nylon</td>\n",
       "      <td>Small</td>\n",
       "      <td>5.0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Messenger</td>\n",
       "      <td>Red</td>\n",
       "      <td>9.269896</td>\n",
       "      <td>106.87458</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171530</th>\n",
       "      <td>171530</td>\n",
       "      <td>Under Armour</td>\n",
       "      <td>Nylon</td>\n",
       "      <td>Small</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Backpack</td>\n",
       "      <td>Pink</td>\n",
       "      <td>26.571942</td>\n",
       "      <td>20.36578</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            id         Brand Material    Size  Compartments  \\\n",
       "226325  226325        Adidas   Canvas  Medium           6.0   \n",
       "278944  278944          Nike    Nylon   Small           5.0   \n",
       "171530  171530  Under Armour    Nylon   Small           8.0   \n",
       "\n",
       "       Laptop Compartment Waterproof      Style Color  Weight Capacity (kg)  \\\n",
       "226325                Yes        Yes  Messenger  Pink             28.754531   \n",
       "278944                 No         No  Messenger   Red              9.269896   \n",
       "171530                Yes         No   Backpack  Pink             26.571942   \n",
       "\n",
       "            Price  \n",
       "226325   85.40561  \n",
       "278944  106.87458  \n",
       "171530   20.36578  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6b7d6c9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:29.991386Z",
     "iopub.status.busy": "2025-02-20T09:10:29.991002Z",
     "iopub.status.idle": "2025-02-20T09:10:30.131939Z",
     "shell.execute_reply": "2025-02-20T09:10:30.130724Z"
    },
    "papermill": {
     "duration": 0.150705,
     "end_time": "2025-02-20T09:10:30.133784",
     "exception": false,
     "start_time": "2025-02-20T09:10:29.983079",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                      246686\n",
       "Brand                        5\n",
       "Material                     4\n",
       "Size                         3\n",
       "Compartments                10\n",
       "Laptop Compartment           2\n",
       "Waterproof                   2\n",
       "Style                        3\n",
       "Color                        6\n",
       "Weight Capacity (kg)    152691\n",
       "Price                    47974\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "cb94d8c5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:30.149164Z",
     "iopub.status.busy": "2025-02-20T09:10:30.148669Z",
     "iopub.status.idle": "2025-02-20T09:10:30.169457Z",
     "shell.execute_reply": "2025-02-20T09:10:30.168395Z"
    },
    "papermill": {
     "duration": 0.030335,
     "end_time": "2025-02-20T09:10:30.171310",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.140975",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Tote', 'Messenger', 'Backpack'], dtype=object)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Style.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "25a453eb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:30.186963Z",
     "iopub.status.busy": "2025-02-20T09:10:30.186571Z",
     "iopub.status.idle": "2025-02-20T09:10:30.193162Z",
     "shell.execute_reply": "2025-02-20T09:10:30.191994Z"
    },
    "papermill": {
     "duration": 0.016732,
     "end_time": "2025-02-20T09:10:30.195072",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.178340",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(246686, 11)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "49510e9a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:30.210938Z",
     "iopub.status.busy": "2025-02-20T09:10:30.210544Z",
     "iopub.status.idle": "2025-02-20T09:10:30.225349Z",
     "shell.execute_reply": "2025-02-20T09:10:30.224015Z"
    },
    "papermill": {
     "duration": 0.024652,
     "end_time": "2025-02-20T09:10:30.227142",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.202490",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Brand</th>\n",
       "      <th>Material</th>\n",
       "      <th>Size</th>\n",
       "      <th>Compartments</th>\n",
       "      <th>Laptop Compartment</th>\n",
       "      <th>Waterproof</th>\n",
       "      <th>Style</th>\n",
       "      <th>Color</th>\n",
       "      <th>Weight Capacity (kg)</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Jansport</td>\n",
       "      <td>Leather</td>\n",
       "      <td>Medium</td>\n",
       "      <td>7.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Tote</td>\n",
       "      <td>Black</td>\n",
       "      <td>11.611723</td>\n",
       "      <td>112.15875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Jansport</td>\n",
       "      <td>Canvas</td>\n",
       "      <td>Small</td>\n",
       "      <td>10.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Messenger</td>\n",
       "      <td>Green</td>\n",
       "      <td>27.078537</td>\n",
       "      <td>68.88056</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id     Brand Material    Size  Compartments Laptop Compartment Waterproof  \\\n",
       "0   0  Jansport  Leather  Medium           7.0                Yes         No   \n",
       "1   1  Jansport   Canvas   Small          10.0                Yes        Yes   \n",
       "\n",
       "       Style  Color  Weight Capacity (kg)      Price  \n",
       "0       Tote  Black             11.611723  112.15875  \n",
       "1  Messenger  Green             27.078537   68.88056  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a66e0ef",
   "metadata": {
    "papermill": {
     "duration": 0.00686,
     "end_time": "2025-02-20T09:10:30.241552",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.234692",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4884a4ee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:30.257594Z",
     "iopub.status.busy": "2025-02-20T09:10:30.257062Z",
     "iopub.status.idle": "2025-02-20T09:10:30.415272Z",
     "shell.execute_reply": "2025-02-20T09:10:30.413521Z"
    },
    "papermill": {
     "duration": 0.168662,
     "end_time": "2025-02-20T09:10:30.417351",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.248689",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "brand_encoder = OneHotEncoder(sparse_output=False, drop=None)\n",
    "new_brand = brand_encoder.fit_transform(df[['Brand']])\n",
    "new_brand_feature_names = brand_encoder.get_feature_names_out()\n",
    "temp_df = pd.DataFrame(new_brand, columns=new_brand_feature_names)\n",
    "updated_df = pd.concat([temp_df, df], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "41f587d7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:30.434301Z",
     "iopub.status.busy": "2025-02-20T09:10:30.433698Z",
     "iopub.status.idle": "2025-02-20T09:10:30.579442Z",
     "shell.execute_reply": "2025-02-20T09:10:30.577994Z"
    },
    "papermill": {
     "duration": 0.157209,
     "end_time": "2025-02-20T09:10:30.581984",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.424775",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "updated_df.dropna(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c5844cc3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:30.608242Z",
     "iopub.status.busy": "2025-02-20T09:10:30.607597Z",
     "iopub.status.idle": "2025-02-20T09:10:30.615625Z",
     "shell.execute_reply": "2025-02-20T09:10:30.614390Z"
    },
    "papermill": {
     "duration": 0.026058,
     "end_time": "2025-02-20T09:10:30.617816",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.591758",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(202848, 16)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "updated_df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e6c61488",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:30.638341Z",
     "iopub.status.busy": "2025-02-20T09:10:30.637789Z",
     "iopub.status.idle": "2025-02-20T09:10:30.659988Z",
     "shell.execute_reply": "2025-02-20T09:10:30.658604Z"
    },
    "papermill": {
     "duration": 0.034934,
     "end_time": "2025-02-20T09:10:30.661838",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.626904",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "updated_df.drop(columns=['Brand','id'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "c8321c29",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:30.679175Z",
     "iopub.status.busy": "2025-02-20T09:10:30.678775Z",
     "iopub.status.idle": "2025-02-20T09:10:30.730806Z",
     "shell.execute_reply": "2025-02-20T09:10:30.729466Z"
    },
    "papermill": {
     "duration": 0.062428,
     "end_time": "2025-02-20T09:10:30.732729",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.670301",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_label.py:116: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n"
     ]
    }
   ],
   "source": [
    "material_encoder = LabelEncoder()\n",
    "updated_df.Material = Material = material_encoder.fit_transform(updated_df[['Material']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "376ebf47",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:30.748654Z",
     "iopub.status.busy": "2025-02-20T09:10:30.748318Z",
     "iopub.status.idle": "2025-02-20T09:10:30.766415Z",
     "shell.execute_reply": "2025-02-20T09:10:30.765109Z"
    },
    "papermill": {
     "duration": 0.027946,
     "end_time": "2025-02-20T09:10:30.768178",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.740232",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Medium', 'Small', 'Large'], dtype=object)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "updated_df.Size.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "df7a8e4e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:30.784655Z",
     "iopub.status.busy": "2025-02-20T09:10:30.784307Z",
     "iopub.status.idle": "2025-02-20T09:10:30.845094Z",
     "shell.execute_reply": "2025-02-20T09:10:30.843933Z"
    },
    "papermill": {
     "duration": 0.071581,
     "end_time": "2025-02-20T09:10:30.847167",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.775586",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "size_encoder = OrdinalEncoder(categories=[['Small','Medium', 'Large']])\n",
    "updated_df.Size = size_encoder.fit_transform(updated_df[['Size']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d86bc9ce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:30.864427Z",
     "iopub.status.busy": "2025-02-20T09:10:30.864056Z",
     "iopub.status.idle": "2025-02-20T09:10:30.927808Z",
     "shell.execute_reply": "2025-02-20T09:10:30.926605Z"
    },
    "papermill": {
     "duration": 0.074584,
     "end_time": "2025-02-20T09:10:30.929926",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.855342",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "laptopc_encoder = OrdinalEncoder(categories=[['No','Yes']])\n",
    "updated_df['Laptop Compartment'] = laptopc_encoder.fit_transform(updated_df[['Laptop Compartment']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "d6e21f50",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:30.946492Z",
     "iopub.status.busy": "2025-02-20T09:10:30.946151Z",
     "iopub.status.idle": "2025-02-20T09:10:31.009442Z",
     "shell.execute_reply": "2025-02-20T09:10:31.008298Z"
    },
    "papermill": {
     "duration": 0.073986,
     "end_time": "2025-02-20T09:10:31.011573",
     "exception": false,
     "start_time": "2025-02-20T09:10:30.937587",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "waterproof_encoder = OrdinalEncoder(categories=[['No','Yes']])\n",
    "updated_df['Waterproof'] = waterproof_encoder.fit_transform(updated_df[['Waterproof']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "eab58821",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:31.028950Z",
     "iopub.status.busy": "2025-02-20T09:10:31.028561Z",
     "iopub.status.idle": "2025-02-20T09:10:31.148237Z",
     "shell.execute_reply": "2025-02-20T09:10:31.147065Z"
    },
    "papermill": {
     "duration": 0.13067,
     "end_time": "2025-02-20T09:10:31.150214",
     "exception": false,
     "start_time": "2025-02-20T09:10:31.019544",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "style_encoder = OneHotEncoder(sparse_output=False, drop=None)\n",
    "new_style = style_encoder.fit_transform(df[['Style']])\n",
    "new_style_feature_names = style_encoder.get_feature_names_out()\n",
    "temp_df = pd.DataFrame(new_style, columns=new_style_feature_names)\n",
    "updated_df = pd.concat([temp_df, updated_df], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "59d1632e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:31.166738Z",
     "iopub.status.busy": "2025-02-20T09:10:31.166392Z",
     "iopub.status.idle": "2025-02-20T09:10:31.228368Z",
     "shell.execute_reply": "2025-02-20T09:10:31.227189Z"
    },
    "papermill": {
     "duration": 0.072605,
     "end_time": "2025-02-20T09:10:31.230422",
     "exception": false,
     "start_time": "2025-02-20T09:10:31.157817",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "updated_df.dropna(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "c1452ef6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:31.247091Z",
     "iopub.status.busy": "2025-02-20T09:10:31.246636Z",
     "iopub.status.idle": "2025-02-20T09:10:31.274210Z",
     "shell.execute_reply": "2025-02-20T09:10:31.272983Z"
    },
    "papermill": {
     "duration": 0.03805,
     "end_time": "2025-02-20T09:10:31.276216",
     "exception": false,
     "start_time": "2025-02-20T09:10:31.238166",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Style_Backpack</th>\n",
       "      <th>Style_Messenger</th>\n",
       "      <th>Style_Tote</th>\n",
       "      <th>Brand_Adidas</th>\n",
       "      <th>Brand_Jansport</th>\n",
       "      <th>Brand_Nike</th>\n",
       "      <th>Brand_Puma</th>\n",
       "      <th>Brand_Under Armour</th>\n",
       "      <th>Material</th>\n",
       "      <th>Size</th>\n",
       "      <th>Compartments</th>\n",
       "      <th>Laptop Compartment</th>\n",
       "      <th>Waterproof</th>\n",
       "      <th>Style</th>\n",
       "      <th>Color</th>\n",
       "      <th>Weight Capacity (kg)</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Tote</td>\n",
       "      <td>Black</td>\n",
       "      <td>11.611723</td>\n",
       "      <td>112.15875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Messenger</td>\n",
       "      <td>Green</td>\n",
       "      <td>27.078537</td>\n",
       "      <td>68.88056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Messenger</td>\n",
       "      <td>Red</td>\n",
       "      <td>16.643760</td>\n",
       "      <td>39.17320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Messenger</td>\n",
       "      <td>Green</td>\n",
       "      <td>12.937220</td>\n",
       "      <td>80.60793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Messenger</td>\n",
       "      <td>Green</td>\n",
       "      <td>17.749338</td>\n",
       "      <td>86.02312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246678</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Tote</td>\n",
       "      <td>Black</td>\n",
       "      <td>6.904652</td>\n",
       "      <td>136.02612</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246679</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Messenger</td>\n",
       "      <td>Black</td>\n",
       "      <td>27.689961</td>\n",
       "      <td>42.73371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246680</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Messenger</td>\n",
       "      <td>Red</td>\n",
       "      <td>28.836596</td>\n",
       "      <td>53.06289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246681</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Messenger</td>\n",
       "      <td>Gray</td>\n",
       "      <td>6.891444</td>\n",
       "      <td>57.91286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246682</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Backpack</td>\n",
       "      <td>Pink</td>\n",
       "      <td>12.962896</td>\n",
       "      <td>31.46289</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>202848 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Style_Backpack  Style_Messenger  Style_Tote  Brand_Adidas  \\\n",
       "0                  0.0              0.0         1.0           0.0   \n",
       "1                  0.0              1.0         0.0           0.0   \n",
       "2                  0.0              1.0         0.0           0.0   \n",
       "3                  0.0              1.0         0.0           0.0   \n",
       "4                  0.0              1.0         0.0           1.0   \n",
       "...                ...              ...         ...           ...   \n",
       "246678             0.0              1.0         0.0           1.0   \n",
       "246679             0.0              0.0         1.0           0.0   \n",
       "246680             0.0              1.0         0.0           0.0   \n",
       "246681             0.0              0.0         1.0           1.0   \n",
       "246682             0.0              0.0         1.0           0.0   \n",
       "\n",
       "        Brand_Jansport  Brand_Nike  Brand_Puma  Brand_Under Armour  Material  \\\n",
       "0                  1.0         0.0         0.0                 0.0       1.0   \n",
       "1                  1.0         0.0         0.0                 0.0       0.0   \n",
       "2                  0.0         0.0         0.0                 1.0       1.0   \n",
       "3                  0.0         1.0         0.0                 0.0       2.0   \n",
       "4                  0.0         0.0         0.0                 0.0       0.0   \n",
       "...                ...         ...         ...                 ...       ...   \n",
       "246678             0.0         0.0         0.0                 0.0       0.0   \n",
       "246679             0.0         1.0         0.0                 0.0       3.0   \n",
       "246680             0.0         0.0         0.0                 1.0       3.0   \n",
       "246681             0.0         0.0         0.0                 0.0       1.0   \n",
       "246682             1.0         0.0         0.0                 0.0       2.0   \n",
       "\n",
       "        Size  Compartments  Laptop Compartment  Waterproof      Style  Color  \\\n",
       "0        1.0           7.0                 1.0         0.0       Tote  Black   \n",
       "1        0.0          10.0                 1.0         1.0  Messenger  Green   \n",
       "2        0.0           2.0                 1.0         0.0  Messenger    Red   \n",
       "3        0.0           8.0                 1.0         0.0  Messenger  Green   \n",
       "4        1.0           1.0                 1.0         1.0  Messenger  Green   \n",
       "...      ...           ...                 ...         ...        ...    ...   \n",
       "246678   2.0           8.0                 1.0         0.0       Tote  Black   \n",
       "246679   1.0           7.0                 1.0         1.0  Messenger  Black   \n",
       "246680   1.0           9.0                 0.0         0.0  Messenger    Red   \n",
       "246681   1.0           6.0                 0.0         0.0  Messenger   Gray   \n",
       "246682   1.0           6.0                 0.0         0.0   Backpack   Pink   \n",
       "\n",
       "        Weight Capacity (kg)      Price  \n",
       "0                  11.611723  112.15875  \n",
       "1                  27.078537   68.88056  \n",
       "2                  16.643760   39.17320  \n",
       "3                  12.937220   80.60793  \n",
       "4                  17.749338   86.02312  \n",
       "...                      ...        ...  \n",
       "246678              6.904652  136.02612  \n",
       "246679             27.689961   42.73371  \n",
       "246680             28.836596   53.06289  \n",
       "246681              6.891444   57.91286  \n",
       "246682             12.962896   31.46289  \n",
       "\n",
       "[202848 rows x 17 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "updated_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "9da3aa97",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:31.293948Z",
     "iopub.status.busy": "2025-02-20T09:10:31.293560Z",
     "iopub.status.idle": "2025-02-20T09:10:31.307134Z",
     "shell.execute_reply": "2025-02-20T09:10:31.305907Z"
    },
    "papermill": {
     "duration": 0.025267,
     "end_time": "2025-02-20T09:10:31.309313",
     "exception": false,
     "start_time": "2025-02-20T09:10:31.284046",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "updated_df.drop(columns=['Color','Style'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "937acd9f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:31.326509Z",
     "iopub.status.busy": "2025-02-20T09:10:31.326139Z",
     "iopub.status.idle": "2025-02-20T09:10:31.352200Z",
     "shell.execute_reply": "2025-02-20T09:10:31.350869Z"
    },
    "papermill": {
     "duration": 0.036935,
     "end_time": "2025-02-20T09:10:31.354236",
     "exception": false,
     "start_time": "2025-02-20T09:10:31.317301",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Style_Backpack</th>\n",
       "      <th>Style_Messenger</th>\n",
       "      <th>Style_Tote</th>\n",
       "      <th>Brand_Adidas</th>\n",
       "      <th>Brand_Jansport</th>\n",
       "      <th>Brand_Nike</th>\n",
       "      <th>Brand_Puma</th>\n",
       "      <th>Brand_Under Armour</th>\n",
       "      <th>Material</th>\n",
       "      <th>Size</th>\n",
       "      <th>Compartments</th>\n",
       "      <th>Laptop Compartment</th>\n",
       "      <th>Waterproof</th>\n",
       "      <th>Weight Capacity (kg)</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.611723</td>\n",
       "      <td>112.15875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27.078537</td>\n",
       "      <td>68.88056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>16.643760</td>\n",
       "      <td>39.17320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.937220</td>\n",
       "      <td>80.60793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>17.749338</td>\n",
       "      <td>86.02312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246678</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.904652</td>\n",
       "      <td>136.02612</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246679</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27.689961</td>\n",
       "      <td>42.73371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246680</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>28.836596</td>\n",
       "      <td>53.06289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246681</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.891444</td>\n",
       "      <td>57.91286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246682</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.962896</td>\n",
       "      <td>31.46289</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>202848 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Style_Backpack  Style_Messenger  Style_Tote  Brand_Adidas  \\\n",
       "0                  0.0              0.0         1.0           0.0   \n",
       "1                  0.0              1.0         0.0           0.0   \n",
       "2                  0.0              1.0         0.0           0.0   \n",
       "3                  0.0              1.0         0.0           0.0   \n",
       "4                  0.0              1.0         0.0           1.0   \n",
       "...                ...              ...         ...           ...   \n",
       "246678             0.0              1.0         0.0           1.0   \n",
       "246679             0.0              0.0         1.0           0.0   \n",
       "246680             0.0              1.0         0.0           0.0   \n",
       "246681             0.0              0.0         1.0           1.0   \n",
       "246682             0.0              0.0         1.0           0.0   \n",
       "\n",
       "        Brand_Jansport  Brand_Nike  Brand_Puma  Brand_Under Armour  Material  \\\n",
       "0                  1.0         0.0         0.0                 0.0       1.0   \n",
       "1                  1.0         0.0         0.0                 0.0       0.0   \n",
       "2                  0.0         0.0         0.0                 1.0       1.0   \n",
       "3                  0.0         1.0         0.0                 0.0       2.0   \n",
       "4                  0.0         0.0         0.0                 0.0       0.0   \n",
       "...                ...         ...         ...                 ...       ...   \n",
       "246678             0.0         0.0         0.0                 0.0       0.0   \n",
       "246679             0.0         1.0         0.0                 0.0       3.0   \n",
       "246680             0.0         0.0         0.0                 1.0       3.0   \n",
       "246681             0.0         0.0         0.0                 0.0       1.0   \n",
       "246682             1.0         0.0         0.0                 0.0       2.0   \n",
       "\n",
       "        Size  Compartments  Laptop Compartment  Waterproof  \\\n",
       "0        1.0           7.0                 1.0         0.0   \n",
       "1        0.0          10.0                 1.0         1.0   \n",
       "2        0.0           2.0                 1.0         0.0   \n",
       "3        0.0           8.0                 1.0         0.0   \n",
       "4        1.0           1.0                 1.0         1.0   \n",
       "...      ...           ...                 ...         ...   \n",
       "246678   2.0           8.0                 1.0         0.0   \n",
       "246679   1.0           7.0                 1.0         1.0   \n",
       "246680   1.0           9.0                 0.0         0.0   \n",
       "246681   1.0           6.0                 0.0         0.0   \n",
       "246682   1.0           6.0                 0.0         0.0   \n",
       "\n",
       "        Weight Capacity (kg)      Price  \n",
       "0                  11.611723  112.15875  \n",
       "1                  27.078537   68.88056  \n",
       "2                  16.643760   39.17320  \n",
       "3                  12.937220   80.60793  \n",
       "4                  17.749338   86.02312  \n",
       "...                      ...        ...  \n",
       "246678              6.904652  136.02612  \n",
       "246679             27.689961   42.73371  \n",
       "246680             28.836596   53.06289  \n",
       "246681              6.891444   57.91286  \n",
       "246682             12.962896   31.46289  \n",
       "\n",
       "[202848 rows x 15 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "updated_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "9df0bdfa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:31.373452Z",
     "iopub.status.busy": "2025-02-20T09:10:31.372661Z",
     "iopub.status.idle": "2025-02-20T09:10:31.377454Z",
     "shell.execute_reply": "2025-02-20T09:10:31.376363Z"
    },
    "papermill": {
     "duration": 0.015911,
     "end_time": "2025-02-20T09:10:31.379482",
     "exception": false,
     "start_time": "2025-02-20T09:10:31.363571",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pickle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "f6947502",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-20T09:10:31.398301Z",
     "iopub.status.busy": "2025-02-20T09:10:31.397926Z",
     "iopub.status.idle": "2025-02-20T09:10:33.287412Z",
     "shell.execute_reply": "2025-02-20T09:10:33.286299Z"
    },
    "papermill": {
     "duration": 1.901369,
     "end_time": "2025-02-20T09:10:33.289428",
     "exception": false,
     "start_time": "2025-02-20T09:10:31.388059",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# exporting files\n",
    "\n",
    "updated_df.to_csv(\"preprocessed_data.csv\")\n",
    "\n",
    "pickle.dump(brand_encoder, open(\"brand_encoder.pkl\", 'wb'))\n",
    "pickle.dump(material_encoder, open(\"material_encoder.pkl\", 'wb'))\n",
    "pickle.dump(size_encoder, open(\"size_encoder.pkl\", 'wb'))\n",
    "pickle.dump(laptopc_encoder, open(\"laptopc_encoder.pkl\", 'wb'))\n",
    "pickle.dump(waterproof_encoder, open(\"waterproof_encoder.pkl\", 'wb'))\n",
    "pickle.dump(style_encoder, open(\"style_encoder.pkl\", 'wb'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6a766835",
   "metadata": {
    "papermill": {
     "duration": 0.011264,
     "end_time": "2025-02-20T09:10:33.311211",
     "exception": false,
     "start_time": "2025-02-20T09:10:33.299947",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 10995111,
     "sourceId": 90274,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30886,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 20.804664,
   "end_time": "2025-02-20T09:10:34.145833",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-02-20T09:10:13.341169",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
