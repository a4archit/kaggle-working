{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "30014c65",
   "metadata": {
    "papermill": {
     "duration": 0.005142,
     "end_time": "2024-12-03T10:27:03.694657",
     "exception": false,
     "start_time": "2024-12-03T10:27:03.689515",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1e42a21f",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-12-03T10:27:03.705444Z",
     "iopub.status.busy": "2024-12-03T10:27:03.705022Z",
     "iopub.status.idle": "2024-12-03T10:27:05.991586Z",
     "shell.execute_reply": "2024-12-03T10:27:05.990596Z"
    },
    "papermill": {
     "duration": 2.294011,
     "end_time": "2024-12-03T10:27:05.993601",
     "exception": false,
     "start_time": "2024-12-03T10:27:03.699590",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/playground-series-s4e12/sample_submission.csv\n",
      "/kaggle/input/playground-series-s4e12/train.csv\n",
      "/kaggle/input/playground-series-s4e12/test.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "from sklearn.impute import KNNImputer\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.preprocessing import OrdinalEncoder, OneHotEncoder\n",
    "# from sklearn.encoding import OrdinalEncoder\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e5b8c45",
   "metadata": {
    "papermill": {
     "duration": 0.005114,
     "end_time": "2024-12-03T10:27:06.003404",
     "exception": false,
     "start_time": "2024-12-03T10:27:05.998290",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Importing training data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a40b8b04",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T10:27:06.013859Z",
     "iopub.status.busy": "2024-12-03T10:27:06.013073Z",
     "iopub.status.idle": "2024-12-03T10:27:12.206146Z",
     "shell.execute_reply": "2024-12-03T10:27:12.205286Z"
    },
    "papermill": {
     "duration": 6.200705,
     "end_time": "2024-12-03T10:27:12.208491",
     "exception": false,
     "start_time": "2024-12-03T10:27:06.007786",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_df = pd.read_csv(r\"/kaggle/input/playground-series-s4e12/train.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c37a1630",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T10:27:12.220031Z",
     "iopub.status.busy": "2024-12-03T10:27:12.219101Z",
     "iopub.status.idle": "2024-12-03T10:27:12.922283Z",
     "shell.execute_reply": "2024-12-03T10:27:12.921187Z"
    },
    "papermill": {
     "duration": 0.711248,
     "end_time": "2024-12-03T10:27:12.924717",
     "exception": false,
     "start_time": "2024-12-03T10:27:12.213469",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = train_df.dropna().sample(10000)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "309f5d63",
   "metadata": {
    "papermill": {
     "duration": 0.004326,
     "end_time": "2024-12-03T10:27:12.933916",
     "exception": false,
     "start_time": "2024-12-03T10:27:12.929590",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1cfd0185",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T10:27:12.944154Z",
     "iopub.status.busy": "2024-12-03T10:27:12.943766Z",
     "iopub.status.idle": "2024-12-03T10:27:12.956364Z",
     "shell.execute_reply": "2024-12-03T10:27:12.955296Z"
    },
    "papermill": {
     "duration": 0.019933,
     "end_time": "2024-12-03T10:27:12.958281",
     "exception": false,
     "start_time": "2024-12-03T10:27:12.938348",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.drop(columns=['id'], inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c49cc0e",
   "metadata": {
    "papermill": {
     "duration": 0.004095,
     "end_time": "2024-12-03T10:27:12.966865",
     "exception": false,
     "start_time": "2024-12-03T10:27:12.962770",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Columns Transformations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "18ed4e24",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T10:27:12.976976Z",
     "iopub.status.busy": "2024-12-03T10:27:12.976396Z",
     "iopub.status.idle": "2024-12-03T10:27:13.000586Z",
     "shell.execute_reply": "2024-12-03T10:27:12.999572Z"
    },
    "papermill": {
     "duration": 0.031523,
     "end_time": "2024-12-03T10:27:13.002675",
     "exception": false,
     "start_time": "2024-12-03T10:27:12.971152",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Annual Income</th>\n",
       "      <th>Marital Status</th>\n",
       "      <th>Number of Dependents</th>\n",
       "      <th>Education Level</th>\n",
       "      <th>Occupation</th>\n",
       "      <th>Health Score</th>\n",
       "      <th>Location</th>\n",
       "      <th>Policy Type</th>\n",
       "      <th>Previous Claims</th>\n",
       "      <th>Vehicle Age</th>\n",
       "      <th>Credit Score</th>\n",
       "      <th>Insurance Duration</th>\n",
       "      <th>Policy Start Date</th>\n",
       "      <th>Customer Feedback</th>\n",
       "      <th>Smoking Status</th>\n",
       "      <th>Exercise Frequency</th>\n",
       "      <th>Property Type</th>\n",
       "      <th>Premium Amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>254356</th>\n",
       "      <td>33.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>7091.0</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>3.0</td>\n",
       "      <td>PhD</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>8.062368</td>\n",
       "      <td>Suburban</td>\n",
       "      <td>Premium</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>639.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2022-08-09 15:21:39.253660</td>\n",
       "      <td>Average</td>\n",
       "      <td>No</td>\n",
       "      <td>Monthly</td>\n",
       "      <td>Apartment</td>\n",
       "      <td>884.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>311870</th>\n",
       "      <td>55.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>27982.0</td>\n",
       "      <td>Married</td>\n",
       "      <td>0.0</td>\n",
       "      <td>High School</td>\n",
       "      <td>Employed</td>\n",
       "      <td>24.357726</td>\n",
       "      <td>Suburban</td>\n",
       "      <td>Premium</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>589.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2024-01-31 15:21:39.172097</td>\n",
       "      <td>Poor</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Monthly</td>\n",
       "      <td>Apartment</td>\n",
       "      <td>1710.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Age  Gender  Annual Income Marital Status  Number of Dependents  \\\n",
       "254356  33.0  Female         7091.0       Divorced                   3.0   \n",
       "311870  55.0    Male        27982.0        Married                   0.0   \n",
       "\n",
       "       Education Level  Occupation  Health Score  Location Policy Type  \\\n",
       "254356             PhD  Unemployed      8.062368  Suburban     Premium   \n",
       "311870     High School    Employed     24.357726  Suburban     Premium   \n",
       "\n",
       "        Previous Claims  Vehicle Age  Credit Score  Insurance Duration  \\\n",
       "254356              2.0          2.0         639.0                 4.0   \n",
       "311870              0.0         12.0         589.0                 2.0   \n",
       "\n",
       "                 Policy Start Date Customer Feedback Smoking Status  \\\n",
       "254356  2022-08-09 15:21:39.253660           Average             No   \n",
       "311870  2024-01-31 15:21:39.172097              Poor            Yes   \n",
       "\n",
       "       Exercise Frequency Property Type  Premium Amount  \n",
       "254356            Monthly     Apartment           884.0  \n",
       "311870            Monthly     Apartment          1710.0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d2506275",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T10:27:13.014076Z",
     "iopub.status.busy": "2024-12-03T10:27:13.013225Z",
     "iopub.status.idle": "2024-12-03T10:27:13.017634Z",
     "shell.execute_reply": "2024-12-03T10:27:13.016936Z"
    },
    "papermill": {
     "duration": 0.011953,
     "end_time": "2024-12-03T10:27:13.019527",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.007574",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "transformations = ColumnTransformer(transformers=[\n",
    "    ('no_trans', 'passthrough', ['Age']),\n",
    "    ('ord_encoder', OrdinalEncoder(), ['Gender','Marital Status'])\n",
    "], remainder='passthrough')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "527ad18e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T10:27:13.030940Z",
     "iopub.status.busy": "2024-12-03T10:27:13.030154Z",
     "iopub.status.idle": "2024-12-03T10:27:13.066411Z",
     "shell.execute_reply": "2024-12-03T10:27:13.065374Z"
    },
    "papermill": {
     "duration": 0.04394,
     "end_time": "2024-12-03T10:27:13.068452",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.024512",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Annual Income</th>\n",
       "      <th>Marital Status</th>\n",
       "      <th>Number of Dependents</th>\n",
       "      <th>Education Level</th>\n",
       "      <th>Occupation</th>\n",
       "      <th>Health Score</th>\n",
       "      <th>Location</th>\n",
       "      <th>Policy Type</th>\n",
       "      <th>Previous Claims</th>\n",
       "      <th>Vehicle Age</th>\n",
       "      <th>Credit Score</th>\n",
       "      <th>Insurance Duration</th>\n",
       "      <th>Policy Start Date</th>\n",
       "      <th>Customer Feedback</th>\n",
       "      <th>Smoking Status</th>\n",
       "      <th>Exercise Frequency</th>\n",
       "      <th>Property Type</th>\n",
       "      <th>Premium Amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>33.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7091.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>PhD</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>8.062368</td>\n",
       "      <td>Suburban</td>\n",
       "      <td>Premium</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>639.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2022-08-09 15:21:39.253660</td>\n",
       "      <td>Average</td>\n",
       "      <td>No</td>\n",
       "      <td>Monthly</td>\n",
       "      <td>Apartment</td>\n",
       "      <td>884.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>55.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27982.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>High School</td>\n",
       "      <td>Employed</td>\n",
       "      <td>24.357726</td>\n",
       "      <td>Suburban</td>\n",
       "      <td>Premium</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>589.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2024-01-31 15:21:39.172097</td>\n",
       "      <td>Poor</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Monthly</td>\n",
       "      <td>Apartment</td>\n",
       "      <td>1710.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>22.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5522.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>High School</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>9.530526</td>\n",
       "      <td>Suburban</td>\n",
       "      <td>Basic</td>\n",
       "      <td>4.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>511.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2021-07-28 15:21:39.225916</td>\n",
       "      <td>Good</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Monthly</td>\n",
       "      <td>Apartment</td>\n",
       "      <td>641.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Age Gender Annual Income Marital Status Number of Dependents  \\\n",
       "0  33.0    0.0           0.0         7091.0                  3.0   \n",
       "1  55.0    1.0           1.0        27982.0                  0.0   \n",
       "2  22.0    0.0           0.0         5522.0                  3.0   \n",
       "\n",
       "  Education Level  Occupation Health Score  Location Policy Type  \\\n",
       "0             PhD  Unemployed     8.062368  Suburban     Premium   \n",
       "1     High School    Employed    24.357726  Suburban     Premium   \n",
       "2     High School  Unemployed     9.530526  Suburban       Basic   \n",
       "\n",
       "  Previous Claims Vehicle Age Credit Score Insurance Duration  \\\n",
       "0             2.0         2.0        639.0                4.0   \n",
       "1             0.0        12.0        589.0                2.0   \n",
       "2             4.0        11.0        511.0                5.0   \n",
       "\n",
       "            Policy Start Date Customer Feedback Smoking Status  \\\n",
       "0  2022-08-09 15:21:39.253660           Average             No   \n",
       "1  2024-01-31 15:21:39.172097              Poor            Yes   \n",
       "2  2021-07-28 15:21:39.225916              Good            Yes   \n",
       "\n",
       "  Exercise Frequency Property Type Premium Amount  \n",
       "0            Monthly     Apartment          884.0  \n",
       "1            Monthly     Apartment         1710.0  \n",
       "2            Monthly     Apartment          641.0  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "pd.DataFrame(\n",
    "    transformations.fit_transform(df),\n",
    "    columns = df.columns\n",
    ").head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2959a227",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T10:27:13.080125Z",
     "iopub.status.busy": "2024-12-03T10:27:13.079764Z",
     "iopub.status.idle": "2024-12-03T10:27:13.091753Z",
     "shell.execute_reply": "2024-12-03T10:27:13.090768Z"
    },
    "papermill": {
     "duration": 0.01982,
     "end_time": "2024-12-03T10:27:13.093453",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.073633",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Marital Status\n",
       "Married     3368\n",
       "Single      3352\n",
       "Divorced    3280\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Marital Status'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "62475b83",
   "metadata": {
    "papermill": {
     "duration": 0.004794,
     "end_time": "2024-12-03T10:27:13.103413",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.098619",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "99fde5ff",
   "metadata": {
    "papermill": {
     "duration": 0.004461,
     "end_time": "2024-12-03T10:27:13.112764",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.108303",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "771dc5dc",
   "metadata": {
    "papermill": {
     "duration": 0.004546,
     "end_time": "2024-12-03T10:27:13.122131",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.117585",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2384555f",
   "metadata": {
    "papermill": {
     "duration": 0.00458,
     "end_time": "2024-12-03T10:27:13.131471",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.126891",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2ffb6079",
   "metadata": {
    "papermill": {
     "duration": 0.004659,
     "end_time": "2024-12-03T10:27:13.140984",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.136325",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4bfe65ab",
   "metadata": {
    "papermill": {
     "duration": 0.00464,
     "end_time": "2024-12-03T10:27:13.150303",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.145663",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "50e92678",
   "metadata": {
    "papermill": {
     "duration": 0.004606,
     "end_time": "2024-12-03T10:27:13.159685",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.155079",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d6ee1f50",
   "metadata": {
    "papermill": {
     "duration": 0.004661,
     "end_time": "2024-12-03T10:27:13.169096",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.164435",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "df520274",
   "metadata": {
    "papermill": {
     "duration": 0.00464,
     "end_time": "2024-12-03T10:27:13.178649",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.174009",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "49e82945",
   "metadata": {
    "papermill": {
     "duration": 0.004611,
     "end_time": "2024-12-03T10:27:13.188037",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.183426",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7d0f1154",
   "metadata": {
    "papermill": {
     "duration": 0.004491,
     "end_time": "2024-12-03T10:27:13.197430",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.192939",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "045dfde7",
   "metadata": {
    "papermill": {
     "duration": 0.0045,
     "end_time": "2024-12-03T10:27:13.206616",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.202116",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bf937a6e",
   "metadata": {
    "papermill": {
     "duration": 0.004601,
     "end_time": "2024-12-03T10:27:13.215979",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.211378",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dd191ee5",
   "metadata": {
    "papermill": {
     "duration": 0.004474,
     "end_time": "2024-12-03T10:27:13.225063",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.220589",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1d1d5046",
   "metadata": {
    "papermill": {
     "duration": 0.004593,
     "end_time": "2024-12-03T10:27:13.234627",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.230034",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5db918cc",
   "metadata": {
    "papermill": {
     "duration": 0.004717,
     "end_time": "2024-12-03T10:27:13.244260",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.239543",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9e02382b",
   "metadata": {
    "papermill": {
     "duration": 0.004582,
     "end_time": "2024-12-03T10:27:13.253893",
     "exception": false,
     "start_time": "2024-12-03T10:27:13.249311",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 10305135,
     "sourceId": 84896,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30804,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 12.669457,
   "end_time": "2024-12-03T10:27:13.879465",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-12-03T10:27:01.210008",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
