{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "917ed395",
   "metadata": {
    "papermill": {
     "duration": 0.006951,
     "end_time": "2024-12-03T23:22:21.134004",
     "exception": false,
     "start_time": "2024-12-03T23:22:21.127053",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "650fe5b1",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:21.147452Z",
     "iopub.status.busy": "2024-12-03T23:22:21.147065Z",
     "iopub.status.idle": "2024-12-03T23:22:23.696522Z",
     "shell.execute_reply": "2024-12-03T23:22:23.695341Z"
    },
    "papermill": {
     "duration": 2.558431,
     "end_time": "2024-12-03T23:22:23.698906",
     "exception": false,
     "start_time": "2024-12-03T23:22:21.140475",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/playground-series-s4e12/sample_submission.csv\n",
      "/kaggle/input/playground-series-s4e12/train.csv\n",
      "/kaggle/input/playground-series-s4e12/test.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "from sklearn.impute import KNNImputer\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.preprocessing import OrdinalEncoder, OneHotEncoder, Normalizer\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import r2_score\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "deb49b67",
   "metadata": {
    "papermill": {
     "duration": 0.006298,
     "end_time": "2024-12-03T23:22:23.710876",
     "exception": false,
     "start_time": "2024-12-03T23:22:23.704578",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Importing training data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "304e9dc2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:23.723256Z",
     "iopub.status.busy": "2024-12-03T23:22:23.722744Z",
     "iopub.status.idle": "2024-12-03T23:22:30.014900Z",
     "shell.execute_reply": "2024-12-03T23:22:30.013865Z"
    },
    "papermill": {
     "duration": 6.301223,
     "end_time": "2024-12-03T23:22:30.017388",
     "exception": false,
     "start_time": "2024-12-03T23:22:23.716165",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_df = pd.read_csv(r\"/kaggle/input/playground-series-s4e12/train.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "712fc0da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:30.030856Z",
     "iopub.status.busy": "2024-12-03T23:22:30.030363Z",
     "iopub.status.idle": "2024-12-03T23:22:30.748278Z",
     "shell.execute_reply": "2024-12-03T23:22:30.747168Z"
    },
    "papermill": {
     "duration": 0.727232,
     "end_time": "2024-12-03T23:22:30.750708",
     "exception": false,
     "start_time": "2024-12-03T23:22:30.023476",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = train_df.dropna().sample(10000)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1778ddd2",
   "metadata": {
    "papermill": {
     "duration": 0.005667,
     "end_time": "2024-12-03T23:22:30.761977",
     "exception": false,
     "start_time": "2024-12-03T23:22:30.756310",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "18184283",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:30.774662Z",
     "iopub.status.busy": "2024-12-03T23:22:30.774278Z",
     "iopub.status.idle": "2024-12-03T23:22:30.786763Z",
     "shell.execute_reply": "2024-12-03T23:22:30.785601Z"
    },
    "papermill": {
     "duration": 0.021539,
     "end_time": "2024-12-03T23:22:30.789067",
     "exception": false,
     "start_time": "2024-12-03T23:22:30.767528",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.drop(columns=['id','Policy Start Date','Exercise Frequency'], inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f6284be",
   "metadata": {
    "papermill": {
     "duration": 0.005481,
     "end_time": "2024-12-03T23:22:30.800396",
     "exception": false,
     "start_time": "2024-12-03T23:22:30.794915",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Columns Transformations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0f0e0cfa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:30.813495Z",
     "iopub.status.busy": "2024-12-03T23:22:30.812651Z",
     "iopub.status.idle": "2024-12-03T23:22:30.838818Z",
     "shell.execute_reply": "2024-12-03T23:22:30.837566Z"
    },
    "papermill": {
     "duration": 0.035713,
     "end_time": "2024-12-03T23:22:30.841586",
     "exception": false,
     "start_time": "2024-12-03T23:22:30.805873",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Annual Income</th>\n",
       "      <th>Marital Status</th>\n",
       "      <th>Number of Dependents</th>\n",
       "      <th>Education Level</th>\n",
       "      <th>Occupation</th>\n",
       "      <th>Health Score</th>\n",
       "      <th>Location</th>\n",
       "      <th>Policy Type</th>\n",
       "      <th>Previous Claims</th>\n",
       "      <th>Vehicle Age</th>\n",
       "      <th>Credit Score</th>\n",
       "      <th>Insurance Duration</th>\n",
       "      <th>Customer Feedback</th>\n",
       "      <th>Smoking Status</th>\n",
       "      <th>Property Type</th>\n",
       "      <th>Premium Amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>900748</th>\n",
       "      <td>24.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>23470.0</td>\n",
       "      <td>Single</td>\n",
       "      <td>2.0</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>23.261390</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Comprehensive</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>638.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>Average</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Apartment</td>\n",
       "      <td>1543.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1044612</th>\n",
       "      <td>45.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>81574.0</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>Self-Employed</td>\n",
       "      <td>21.783981</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Premium</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>557.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Poor</td>\n",
       "      <td>No</td>\n",
       "      <td>Condo</td>\n",
       "      <td>44.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>535144</th>\n",
       "      <td>19.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>28963.0</td>\n",
       "      <td>Single</td>\n",
       "      <td>3.0</td>\n",
       "      <td>High School</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>21.958477</td>\n",
       "      <td>Suburban</td>\n",
       "      <td>Basic</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>677.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Average</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Apartment</td>\n",
       "      <td>661.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Age Gender  Annual Income Marital Status  Number of Dependents  \\\n",
       "900748   24.0   Male        23470.0         Single                   2.0   \n",
       "1044612  45.0   Male        81574.0       Divorced                   0.0   \n",
       "535144   19.0   Male        28963.0         Single                   3.0   \n",
       "\n",
       "        Education Level     Occupation  Health Score  Location    Policy Type  \\\n",
       "900748       Bachelor's     Unemployed     23.261390     Urban  Comprehensive   \n",
       "1044612      Bachelor's  Self-Employed     21.783981     Urban        Premium   \n",
       "535144      High School     Unemployed     21.958477  Suburban          Basic   \n",
       "\n",
       "         Previous Claims  Vehicle Age  Credit Score  Insurance Duration  \\\n",
       "900748               2.0         10.0         638.0                 6.0   \n",
       "1044612              0.0          4.0         557.0                 8.0   \n",
       "535144               2.0          2.0         677.0                 1.0   \n",
       "\n",
       "        Customer Feedback Smoking Status Property Type  Premium Amount  \n",
       "900748            Average            Yes     Apartment          1543.0  \n",
       "1044612              Poor             No         Condo            44.0  \n",
       "535144            Average            Yes     Apartment           661.0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "221f4bcc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:30.855260Z",
     "iopub.status.busy": "2024-12-03T23:22:30.854868Z",
     "iopub.status.idle": "2024-12-03T23:22:30.861236Z",
     "shell.execute_reply": "2024-12-03T23:22:30.859848Z"
    },
    "papermill": {
     "duration": 0.016238,
     "end_time": "2024-12-03T23:22:30.863809",
     "exception": false,
     "start_time": "2024-12-03T23:22:30.847571",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "transformations = ColumnTransformer(transformers=[\n",
    "    (\n",
    "        'no_trans', \n",
    "        'passthrough', \n",
    "        ['Age']\n",
    "    ),\n",
    "    (\n",
    "        'ord_encoder', \n",
    "        OrdinalEncoder(), \n",
    "        ['Gender','Marital Status','Education Level','Occupation','Location','Policy Type',\n",
    "         'Customer Feedback','Smoking Status','Property Type']\n",
    "    ),\n",
    "    (\n",
    "        'normalizing',\n",
    "        Normalizer(),\n",
    "        []# list(df.columns)\n",
    "    )\n",
    "], remainder='passthrough')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1e34edd7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:30.877352Z",
     "iopub.status.busy": "2024-12-03T23:22:30.876930Z",
     "iopub.status.idle": "2024-12-03T23:22:30.913418Z",
     "shell.execute_reply": "2024-12-03T23:22:30.912406Z"
    },
    "papermill": {
     "duration": 0.046174,
     "end_time": "2024-12-03T23:22:30.915933",
     "exception": false,
     "start_time": "2024-12-03T23:22:30.869759",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "cleaned_data = pd.DataFrame(\n",
    "    transformations.fit_transform(df),\n",
    "    columns = df.columns\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "af8338e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:30.929585Z",
     "iopub.status.busy": "2024-12-03T23:22:30.929231Z",
     "iopub.status.idle": "2024-12-03T23:22:30.951620Z",
     "shell.execute_reply": "2024-12-03T23:22:30.950450Z"
    },
    "papermill": {
     "duration": 0.032133,
     "end_time": "2024-12-03T23:22:30.954002",
     "exception": false,
     "start_time": "2024-12-03T23:22:30.921869",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 10000 entries, 0 to 9999\n",
      "Data columns (total 18 columns):\n",
      " #   Column                Non-Null Count  Dtype  \n",
      "---  ------                --------------  -----  \n",
      " 0   Age                   10000 non-null  float64\n",
      " 1   Gender                10000 non-null  float64\n",
      " 2   Annual Income         10000 non-null  float64\n",
      " 3   Marital Status        10000 non-null  float64\n",
      " 4   Number of Dependents  10000 non-null  float64\n",
      " 5   Education Level       10000 non-null  float64\n",
      " 6   Occupation            10000 non-null  float64\n",
      " 7   Health Score          10000 non-null  float64\n",
      " 8   Location              10000 non-null  float64\n",
      " 9   Policy Type           10000 non-null  float64\n",
      " 10  Previous Claims       10000 non-null  float64\n",
      " 11  Vehicle Age           10000 non-null  float64\n",
      " 12  Credit Score          10000 non-null  float64\n",
      " 13  Insurance Duration    10000 non-null  float64\n",
      " 14  Customer Feedback     10000 non-null  float64\n",
      " 15  Smoking Status        10000 non-null  float64\n",
      " 16  Property Type         10000 non-null  float64\n",
      " 17  Premium Amount        10000 non-null  float64\n",
      "dtypes: float64(18)\n",
      "memory usage: 1.4 MB\n"
     ]
    }
   ],
   "source": [
    "cleaned_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "de1e86f2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:30.967998Z",
     "iopub.status.busy": "2024-12-03T23:22:30.967641Z",
     "iopub.status.idle": "2024-12-03T23:22:30.989095Z",
     "shell.execute_reply": "2024-12-03T23:22:30.987997Z"
    },
    "papermill": {
     "duration": 0.031462,
     "end_time": "2024-12-03T23:22:30.991398",
     "exception": false,
     "start_time": "2024-12-03T23:22:30.959936",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age                    -0.017324\n",
       "Gender                 -0.010138\n",
       "Annual Income          -0.008614\n",
       "Marital Status         -0.008851\n",
       "Number of Dependents   -0.015577\n",
       "Education Level         0.002323\n",
       "Occupation             -0.005621\n",
       "Health Score            0.017940\n",
       "Location                0.001977\n",
       "Policy Type             0.004066\n",
       "Previous Claims        -0.001992\n",
       "Vehicle Age             0.006909\n",
       "Credit Score           -0.001607\n",
       "Insurance Duration      0.051666\n",
       "Customer Feedback       0.007436\n",
       "Smoking Status         -0.017764\n",
       "Property Type           0.009014\n",
       "Premium Amount          1.000000\n",
       "Name: Premium Amount, dtype: float64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_data.corr()['Premium Amount']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "85a6ca36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:31.005375Z",
     "iopub.status.busy": "2024-12-03T23:22:31.004942Z",
     "iopub.status.idle": "2024-12-03T23:22:31.015841Z",
     "shell.execute_reply": "2024-12-03T23:22:31.014764Z"
    },
    "papermill": {
     "duration": 0.020547,
     "end_time": "2024-12-03T23:22:31.018098",
     "exception": false,
     "start_time": "2024-12-03T23:22:30.997551",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Education Level\n",
       "Master's       2525\n",
       "Bachelor's     2511\n",
       "PhD            2506\n",
       "High School    2458\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Education Level'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "45cd5796",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:31.031873Z",
     "iopub.status.busy": "2024-12-03T23:22:31.031467Z",
     "iopub.status.idle": "2024-12-03T23:22:31.041262Z",
     "shell.execute_reply": "2024-12-03T23:22:31.040250Z"
    },
    "papermill": {
     "duration": 0.019379,
     "end_time": "2024-12-03T23:22:31.043487",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.024108",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Location\n",
       "Suburban    3399\n",
       "Urban       3303\n",
       "Rural       3298\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Location'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3246b0df",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:31.057944Z",
     "iopub.status.busy": "2024-12-03T23:22:31.057554Z",
     "iopub.status.idle": "2024-12-03T23:22:31.064030Z",
     "shell.execute_reply": "2024-12-03T23:22:31.062929Z"
    },
    "papermill": {
     "duration": 0.01692,
     "end_time": "2024-12-03T23:22:31.066577",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.049657",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "target = 'Premium Amount'\n",
    "X = cleaned_data.drop(columns=[target])\n",
    "y = df[target]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "6c26f586",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:31.081717Z",
     "iopub.status.busy": "2024-12-03T23:22:31.081315Z",
     "iopub.status.idle": "2024-12-03T23:22:31.090805Z",
     "shell.execute_reply": "2024-12-03T23:22:31.089573Z"
    },
    "papermill": {
     "duration": 0.020081,
     "end_time": "2024-12-03T23:22:31.093599",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.073518",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "a85ad95f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T23:22:31.109086Z",
     "iopub.status.busy": "2024-12-03T23:22:31.108673Z",
     "iopub.status.idle": "2024-12-03T23:22:31.202232Z",
     "shell.execute_reply": "2024-12-03T23:22:31.201004Z"
    },
    "papermill": {
     "duration": 0.104629,
     "end_time": "2024-12-03T23:22:31.204551",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.099922",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.19283609272598112"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn = KNeighborsRegressor(n_neighbors=5)\n",
    "knn.fit(X_train, y_train)\n",
    "knn_pred = knn.predict(X_test)\n",
    "r2_score(y_test, knn_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c5f66cd0",
   "metadata": {
    "papermill": {
     "duration": 0.005938,
     "end_time": "2024-12-03T23:22:31.217061",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.211123",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4fd1292d",
   "metadata": {
    "papermill": {
     "duration": 0.005915,
     "end_time": "2024-12-03T23:22:31.229355",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.223440",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "94e6036f",
   "metadata": {
    "papermill": {
     "duration": 0.006026,
     "end_time": "2024-12-03T23:22:31.241789",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.235763",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "52fbd385",
   "metadata": {
    "papermill": {
     "duration": 0.005728,
     "end_time": "2024-12-03T23:22:31.253863",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.248135",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0ae3d2ce",
   "metadata": {
    "papermill": {
     "duration": 0.005962,
     "end_time": "2024-12-03T23:22:31.265992",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.260030",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b5396699",
   "metadata": {
    "papermill": {
     "duration": 0.005861,
     "end_time": "2024-12-03T23:22:31.277982",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.272121",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c3f36411",
   "metadata": {
    "papermill": {
     "duration": 0.005867,
     "end_time": "2024-12-03T23:22:31.289940",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.284073",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9cbe8283",
   "metadata": {
    "papermill": {
     "duration": 0.005924,
     "end_time": "2024-12-03T23:22:31.302163",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.296239",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9f234224",
   "metadata": {
    "papermill": {
     "duration": 0.005949,
     "end_time": "2024-12-03T23:22:31.314272",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.308323",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "626d9236",
   "metadata": {
    "papermill": {
     "duration": 0.005923,
     "end_time": "2024-12-03T23:22:31.326808",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.320885",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8c915bea",
   "metadata": {
    "papermill": {
     "duration": 0.005906,
     "end_time": "2024-12-03T23:22:31.339015",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.333109",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "97308129",
   "metadata": {
    "papermill": {
     "duration": 0.006122,
     "end_time": "2024-12-03T23:22:31.351342",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.345220",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d4d0cfb3",
   "metadata": {
    "papermill": {
     "duration": 0.005917,
     "end_time": "2024-12-03T23:22:31.363460",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.357543",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d8327543",
   "metadata": {
    "papermill": {
     "duration": 0.005858,
     "end_time": "2024-12-03T23:22:31.375566",
     "exception": false,
     "start_time": "2024-12-03T23:22:31.369708",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 10305135,
     "sourceId": 84896,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30805,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 13.677583,
   "end_time": "2024-12-03T23:22:32.104145",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-12-03T23:22:18.426562",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
