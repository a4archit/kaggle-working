{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":84896,"databundleVersionId":10305135,"sourceType":"competition"}],"dockerImageVersionId":30804,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Regression","metadata":{}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-12-03T08:42:44.754846Z","iopub.execute_input":"2024-12-03T08:42:44.755360Z","iopub.status.idle":"2024-12-03T08:42:45.882442Z","shell.execute_reply.started":"2024-12-03T08:42:44.755307Z","shell.execute_reply":"2024-12-03T08:42:45.881414Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s4e12/sample_submission.csv\n/kaggle/input/playground-series-s4e12/train.csv\n/kaggle/input/playground-series-s4e12/test.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"Importing training data","metadata":{}},{"cell_type":"code","source":"train_df = pd.read_csv(r\"/kaggle/input/playground-series-s4e12/train.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-03T08:44:14.667110Z","iopub.execute_input":"2024-12-03T08:44:14.668475Z","iopub.status.idle":"2024-12-03T08:44:20.970891Z","shell.execute_reply.started":"2024-12-03T08:44:14.668421Z","shell.execute_reply":"2024-12-03T08:44:20.969540Z"}},"outputs":[],"execution_count":2},{"cell_type":"markdown","source":"### Data cleaning","metadata":{}},{"cell_type":"markdown","source":"Handling null values","metadata":{}},{"cell_type":"code","source":"print(\"Null values with suitable columns are as follows: \\n\")\nfor column in train_df.columns:\n    null_values = train_df[column].isnull().sum()\n    if null_values > 0:\n        print(f\"{column:<20}: {null_values:,}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-03T08:51:58.376597Z","iopub.execute_input":"2024-12-03T08:51:58.377007Z","iopub.status.idle":"2024-12-03T08:51:58.990976Z","shell.execute_reply.started":"2024-12-03T08:51:58.376966Z","shell.execute_reply":"2024-12-03T08:51:58.989826Z"}},"outputs":[{"name":"stdout","text":"Null values with suitable columns are as follows: \n\nAge                 : 18,705\nAnnual Income       : 44,949\nMarital Status      : 18,529\nNumber of Dependents: 109,672\nOccupation          : 358,075\nHealth Score        : 74,076\nPrevious Claims     : 364,029\nVehicle Age         : 6\nCredit Score        : 137,882\nInsurance Duration  : 1\nCustomer Feedback   : 77,824\n","output_type":"stream"}],"execution_count":17},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}