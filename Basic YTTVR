{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6a2dc88b",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:37.709783Z",
     "iopub.status.busy": "2024-12-08T00:37:37.709358Z",
     "iopub.status.idle": "2024-12-08T00:37:40.572246Z",
     "shell.execute_reply": "2024-12-08T00:37:40.570997Z"
    },
    "papermill": {
     "duration": 2.878622,
     "end_time": "2024-12-08T00:37:40.575029",
     "exception": false,
     "start_time": "2024-12-08T00:37:37.696407",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/youtube-trending-videos-dataset/youtube.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "20f13e54",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:40.596568Z",
     "iopub.status.busy": "2024-12-08T00:37:40.596063Z",
     "iopub.status.idle": "2024-12-08T00:37:42.945542Z",
     "shell.execute_reply": "2024-12-08T00:37:42.944390Z"
    },
    "papermill": {
     "duration": 2.362688,
     "end_time": "2024-12-08T00:37:42.948097",
     "exception": false,
     "start_time": "2024-12-08T00:37:40.585409",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "data = pd.read_csv(r\"/kaggle/input/youtube-trending-videos-dataset/youtube.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "38c9c6c2",
   "metadata": {
    "papermill": {
     "duration": 0.007966,
     "end_time": "2024-12-08T00:37:42.965295",
     "exception": false,
     "start_time": "2024-12-08T00:37:42.957329",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e1e47238",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:42.985086Z",
     "iopub.status.busy": "2024-12-08T00:37:42.983900Z",
     "iopub.status.idle": "2024-12-08T00:37:42.992441Z",
     "shell.execute_reply": "2024-12-08T00:37:42.991326Z"
    },
    "papermill": {
     "duration": 0.020743,
     "end_time": "2024-12-08T00:37:42.994935",
     "exception": false,
     "start_time": "2024-12-08T00:37:42.974192",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(161470, 18)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "fdb1a5a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.013711Z",
     "iopub.status.busy": "2024-12-08T00:37:43.013314Z",
     "iopub.status.idle": "2024-12-08T00:37:43.123817Z",
     "shell.execute_reply": "2024-12-08T00:37:43.121934Z"
    },
    "papermill": {
     "duration": 0.123125,
     "end_time": "2024-12-08T00:37:43.126525",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.003400",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 161470 entries, 0 to 161469\n",
      "Data columns (total 18 columns):\n",
      " #   Column                  Non-Null Count   Dtype \n",
      "---  ------                  --------------   ----- \n",
      " 0   index                   161470 non-null  int64 \n",
      " 1   video_id                161470 non-null  object\n",
      " 2   trending_date           161470 non-null  object\n",
      " 3   title                   161470 non-null  object\n",
      " 4   channel_title           161470 non-null  object\n",
      " 5   category_id             161470 non-null  int64 \n",
      " 6   publish_date            161470 non-null  object\n",
      " 7   time_frame              161470 non-null  object\n",
      " 8   published_day_of_week   161470 non-null  object\n",
      " 9   publish_country         161470 non-null  object\n",
      " 10  tags                    161470 non-null  object\n",
      " 11  views                   161470 non-null  int64 \n",
      " 12  likes                   161470 non-null  int64 \n",
      " 13  dislikes                161470 non-null  int64 \n",
      " 14  comment_count           161470 non-null  int64 \n",
      " 15  comments_disabled       161470 non-null  bool  \n",
      " 16  ratings_disabled        161470 non-null  bool  \n",
      " 17  video_error_or_removed  161470 non-null  bool  \n",
      "dtypes: bool(3), int64(6), object(9)\n",
      "memory usage: 18.9+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4e0e15fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.151014Z",
     "iopub.status.busy": "2024-12-08T00:37:43.150162Z",
     "iopub.status.idle": "2024-12-08T00:37:43.174958Z",
     "shell.execute_reply": "2024-12-08T00:37:43.173738Z"
    },
    "papermill": {
     "duration": 0.039845,
     "end_time": "2024-12-08T00:37:43.177890",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.138045",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "xdata = data.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2bc5d898",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.201198Z",
     "iopub.status.busy": "2024-12-08T00:37:43.200794Z",
     "iopub.status.idle": "2024-12-08T00:37:43.228517Z",
     "shell.execute_reply": "2024-12-08T00:37:43.227452Z"
    },
    "papermill": {
     "duration": 0.040419,
     "end_time": "2024-12-08T00:37:43.230866",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.190447",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>video_id</th>\n",
       "      <th>trending_date</th>\n",
       "      <th>title</th>\n",
       "      <th>channel_title</th>\n",
       "      <th>category_id</th>\n",
       "      <th>publish_date</th>\n",
       "      <th>time_frame</th>\n",
       "      <th>published_day_of_week</th>\n",
       "      <th>publish_country</th>\n",
       "      <th>tags</th>\n",
       "      <th>views</th>\n",
       "      <th>likes</th>\n",
       "      <th>dislikes</th>\n",
       "      <th>comment_count</th>\n",
       "      <th>comments_disabled</th>\n",
       "      <th>ratings_disabled</th>\n",
       "      <th>video_error_or_removed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>68924</th>\n",
       "      <td>68924</td>\n",
       "      <td>8LAoB0R4S5I</td>\n",
       "      <td>18.05.04</td>\n",
       "      <td>Dr. Phil Embarrasses Lady Who Thinks She's The...</td>\n",
       "      <td>JustDestiny</td>\n",
       "      <td>24</td>\n",
       "      <td>08/03/2018</td>\n",
       "      <td>23:00 to 23:59</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>GB</td>\n",
       "      <td>JustDestiny|\"dr\"|\"phil\"|\"dr phil\"|\"danielle\"|\"...</td>\n",
       "      <td>5434025</td>\n",
       "      <td>34064</td>\n",
       "      <td>13219</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131154</th>\n",
       "      <td>131154</td>\n",
       "      <td>aBL027wEtg8</td>\n",
       "      <td>18.05.01</td>\n",
       "      <td>Mariah Carey - Live At Dick Clark's New Year's...</td>\n",
       "      <td>mariahxlambily</td>\n",
       "      <td>10</td>\n",
       "      <td>01/01/2018</td>\n",
       "      <td>5:00 to 5:59</td>\n",
       "      <td>Monday</td>\n",
       "      <td>CANADA</td>\n",
       "      <td>Mariah|\"Carey\"|\"Mariah Carey\"|\"Vocals\"|\"Vocal ...</td>\n",
       "      <td>1108364</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5063</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         index     video_id trending_date  \\\n",
       "68924    68924  8LAoB0R4S5I      18.05.04   \n",
       "131154  131154  aBL027wEtg8      18.05.01   \n",
       "\n",
       "                                                    title   channel_title  \\\n",
       "68924   Dr. Phil Embarrasses Lady Who Thinks She's The...     JustDestiny   \n",
       "131154  Mariah Carey - Live At Dick Clark's New Year's...  mariahxlambily   \n",
       "\n",
       "        category_id publish_date      time_frame published_day_of_week  \\\n",
       "68924            24   08/03/2018  23:00 to 23:59              Thursday   \n",
       "131154           10   01/01/2018    5:00 to 5:59                Monday   \n",
       "\n",
       "       publish_country                                               tags  \\\n",
       "68924               GB  JustDestiny|\"dr\"|\"phil\"|\"dr phil\"|\"danielle\"|\"...   \n",
       "131154          CANADA  Mariah|\"Carey\"|\"Mariah Carey\"|\"Vocals\"|\"Vocal ...   \n",
       "\n",
       "          views  likes  dislikes  comment_count  comments_disabled  \\\n",
       "68924   5434025  34064     13219              0               True   \n",
       "131154  1108364      0         0           5063              False   \n",
       "\n",
       "        ratings_disabled  video_error_or_removed  \n",
       "68924              False                   False  \n",
       "131154              True                   False  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.sample(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1cfba39f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.249729Z",
     "iopub.status.busy": "2024-12-08T00:37:43.249374Z",
     "iopub.status.idle": "2024-12-08T00:37:43.267358Z",
     "shell.execute_reply": "2024-12-08T00:37:43.266326Z"
    },
    "papermill": {
     "duration": 0.030273,
     "end_time": "2024-12-08T00:37:43.269824",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.239551",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "xdata = xdata[['video_id','title','views','likes','dislikes','comment_count','category_id']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f665c36b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.289368Z",
     "iopub.status.busy": "2024-12-08T00:37:43.288639Z",
     "iopub.status.idle": "2024-12-08T00:37:43.295470Z",
     "shell.execute_reply": "2024-12-08T00:37:43.294065Z"
    },
    "papermill": {
     "duration": 0.019615,
     "end_time": "2024-12-08T00:37:43.298376",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.278761",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(161470, 7)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xdata.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "87df722c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.327231Z",
     "iopub.status.busy": "2024-12-08T00:37:43.326081Z",
     "iopub.status.idle": "2024-12-08T00:37:43.371789Z",
     "shell.execute_reply": "2024-12-08T00:37:43.369951Z"
    },
    "papermill": {
     "duration": 0.061413,
     "end_time": "2024-12-08T00:37:43.374619",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.313206",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 161470 entries, 0 to 161469\n",
      "Data columns (total 7 columns):\n",
      " #   Column         Non-Null Count   Dtype \n",
      "---  ------         --------------   ----- \n",
      " 0   video_id       161470 non-null  object\n",
      " 1   title          161470 non-null  object\n",
      " 2   views          161470 non-null  int64 \n",
      " 3   likes          161470 non-null  int64 \n",
      " 4   dislikes       161470 non-null  int64 \n",
      " 5   comment_count  161470 non-null  int64 \n",
      " 6   category_id    161470 non-null  int64 \n",
      "dtypes: int64(5), object(2)\n",
      "memory usage: 8.6+ MB\n"
     ]
    }
   ],
   "source": [
    "xdata.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "af0b6d94",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.403711Z",
     "iopub.status.busy": "2024-12-08T00:37:43.402313Z",
     "iopub.status.idle": "2024-12-08T00:37:43.419489Z",
     "shell.execute_reply": "2024-12-08T00:37:43.417573Z"
    },
    "papermill": {
     "duration": 0.038383,
     "end_time": "2024-12-08T00:37:43.424111",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.385728",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "temp_df = xdata['category_id'].value_counts().reset_index().sort_values('category_id')\n",
    "temp_df = temp_df.sort_values('count').assign(new_category_id = [i+1 for i in range(temp_df.shape[0])])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7a1a048c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.450824Z",
     "iopub.status.busy": "2024-12-08T00:37:43.450433Z",
     "iopub.status.idle": "2024-12-08T00:37:43.459961Z",
     "shell.execute_reply": "2024-12-08T00:37:43.458499Z"
    },
    "papermill": {
     "duration": 0.024623,
     "end_time": "2024-12-08T00:37:43.462791",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.438168",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "xdata.category_id = xdata.category_id.map(dict(temp_df[['category_id','new_category_id']].to_numpy()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "98c7be25",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.482370Z",
     "iopub.status.busy": "2024-12-08T00:37:43.482008Z",
     "iopub.status.idle": "2024-12-08T00:37:43.498090Z",
     "shell.execute_reply": "2024-12-08T00:37:43.496845Z"
    },
    "papermill": {
     "duration": 0.028126,
     "end_time": "2024-12-08T00:37:43.500231",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.472105",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>video_id</th>\n",
       "      <th>title</th>\n",
       "      <th>views</th>\n",
       "      <th>likes</th>\n",
       "      <th>dislikes</th>\n",
       "      <th>comment_count</th>\n",
       "      <th>category_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>124282</th>\n",
       "      <td>Q_r-zRrDo28</td>\n",
       "      <td>OYABUN - Castle on the Hill</td>\n",
       "      <td>393015</td>\n",
       "      <td>4955</td>\n",
       "      <td>2932</td>\n",
       "      <td>968</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158203</th>\n",
       "      <td>cgexTg6KRsQ</td>\n",
       "      <td>Koh Chang Island - PRISTINE SEAFOOD FISHING VI...</td>\n",
       "      <td>322051</td>\n",
       "      <td>10492</td>\n",
       "      <td>303</td>\n",
       "      <td>766</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           video_id                                              title  \\\n",
       "124282  Q_r-zRrDo28                        OYABUN - Castle on the Hill   \n",
       "158203  cgexTg6KRsQ  Koh Chang Island - PRISTINE SEAFOOD FISHING VI...   \n",
       "\n",
       "         views  likes  dislikes  comment_count  category_id  \n",
       "124282  393015   4955      2932            968           17  \n",
       "158203  322051  10492       303            766            5  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xdata.sample(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "2ea14300",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.520123Z",
     "iopub.status.busy": "2024-12-08T00:37:43.519501Z",
     "iopub.status.idle": "2024-12-08T00:37:43.543225Z",
     "shell.execute_reply": "2024-12-08T00:37:43.542059Z"
    },
    "papermill": {
     "duration": 0.036244,
     "end_time": "2024-12-08T00:37:43.545511",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.509267",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "category_id\n",
       "16    4\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xdata[xdata['title'] == 'Kristen Bell Opens SAG Awards 2018'].category_id.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1765bc3f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.571427Z",
     "iopub.status.busy": "2024-12-08T00:37:43.570658Z",
     "iopub.status.idle": "2024-12-08T00:37:43.787953Z",
     "shell.execute_reply": "2024-12-08T00:37:43.786822Z"
    },
    "papermill": {
     "duration": 0.23514,
     "end_time": "2024-12-08T00:37:43.790603",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.555463",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "xd = xdata.groupby('title').agg({\n",
    "    'views':'max',\n",
    "    'likes':'max',\n",
    "    'dislikes':'max',\n",
    "    'comment_count':'max',\n",
    "    'category_id':'mean',\n",
    "    'video_id':'count'\n",
    "})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "aff7fe13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.810903Z",
     "iopub.status.busy": "2024-12-08T00:37:43.810518Z",
     "iopub.status.idle": "2024-12-08T00:37:43.820521Z",
     "shell.execute_reply": "2024-12-08T00:37:43.819404Z"
    },
    "papermill": {
     "duration": 0.023041,
     "end_time": "2024-12-08T00:37:43.823079",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.800038",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "xd = xd.assign(formula_value = (\n",
    "    (((xd.likes+1) * (xd.comment_count+1))\n",
    "     / \n",
    "     ((xd.views+1) * (xd.dislikes+1))  * xd.category_id)\n",
    "))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "18bf6f19",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.843232Z",
     "iopub.status.busy": "2024-12-08T00:37:43.842832Z",
     "iopub.status.idle": "2024-12-08T00:37:43.892580Z",
     "shell.execute_reply": "2024-12-08T00:37:43.891353Z"
    },
    "papermill": {
     "duration": 0.062596,
     "end_time": "2024-12-08T00:37:43.894944",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.832348",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>views</th>\n",
       "      <th>likes</th>\n",
       "      <th>dislikes</th>\n",
       "      <th>comment_count</th>\n",
       "      <th>category_id</th>\n",
       "      <th>video_id</th>\n",
       "      <th>formula_value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>5.690500e+04</td>\n",
       "      <td>5.690500e+04</td>\n",
       "      <td>5.690500e+04</td>\n",
       "      <td>5.690500e+04</td>\n",
       "      <td>56905.000000</td>\n",
       "      <td>56905.000000</td>\n",
       "      <td>5.690500e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>7.001585e+05</td>\n",
       "      <td>1.765650e+04</td>\n",
       "      <td>9.281776e+02</td>\n",
       "      <td>2.128135e+03</td>\n",
       "      <td>14.618355</td>\n",
       "      <td>2.837536</td>\n",
       "      <td>4.652326e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4.936086e+06</td>\n",
       "      <td>8.831881e+04</td>\n",
       "      <td>1.284170e+04</td>\n",
       "      <td>1.362057e+04</td>\n",
       "      <td>3.262413</td>\n",
       "      <td>4.865878</td>\n",
       "      <td>1.792818e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2.840000e+02</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.566638e-07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.949800e+04</td>\n",
       "      <td>4.840000e+02</td>\n",
       "      <td>2.500000e+01</td>\n",
       "      <td>8.500000e+01</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.265887e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.266320e+05</td>\n",
       "      <td>2.504000e+03</td>\n",
       "      <td>1.120000e+02</td>\n",
       "      <td>3.830000e+02</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>9.177392e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.165240e+05</td>\n",
       "      <td>1.014400e+04</td>\n",
       "      <td>3.990000e+02</td>\n",
       "      <td>1.352000e+03</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.466491e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.245389e+08</td>\n",
       "      <td>5.613827e+06</td>\n",
       "      <td>1.944971e+06</td>\n",
       "      <td>1.626501e+06</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>1.668075e+03</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              views         likes      dislikes  comment_count   category_id  \\\n",
       "count  5.690500e+04  5.690500e+04  5.690500e+04   5.690500e+04  56905.000000   \n",
       "mean   7.001585e+05  1.765650e+04  9.281776e+02   2.128135e+03     14.618355   \n",
       "std    4.936086e+06  8.831881e+04  1.284170e+04   1.362057e+04      3.262413   \n",
       "min    2.840000e+02  0.000000e+00  0.000000e+00   0.000000e+00      1.000000   \n",
       "25%    2.949800e+04  4.840000e+02  2.500000e+01   8.500000e+01     13.000000   \n",
       "50%    1.266320e+05  2.504000e+03  1.120000e+02   3.830000e+02     15.000000   \n",
       "75%    4.165240e+05  1.014400e+04  3.990000e+02   1.352000e+03     18.000000   \n",
       "max    4.245389e+08  5.613827e+06  1.944971e+06   1.626501e+06     18.000000   \n",
       "\n",
       "           video_id  formula_value  \n",
       "count  56905.000000   5.690500e+04  \n",
       "mean       2.837536   4.652326e+00  \n",
       "std        4.865878   1.792818e+01  \n",
       "min        1.000000   2.566638e-07  \n",
       "25%        1.000000   2.265887e-01  \n",
       "50%        1.000000   9.177392e-01  \n",
       "75%        2.000000   3.466491e+00  \n",
       "max       73.000000   1.668075e+03  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xd.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "c3f1e887",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.916112Z",
     "iopub.status.busy": "2024-12-08T00:37:43.915648Z",
     "iopub.status.idle": "2024-12-08T00:37:43.937922Z",
     "shell.execute_reply": "2024-12-08T00:37:43.936554Z"
    },
    "papermill": {
     "duration": 0.03617,
     "end_time": "2024-12-08T00:37:43.940697",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.904527",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "views           -0.019543\n",
       "likes            0.021281\n",
       "dislikes        -0.012389\n",
       "comment_count    0.056607\n",
       "category_id      0.018296\n",
       "video_id        -0.038211\n",
       "formula_value    1.000000\n",
       "Name: formula_value, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xd.reset_index(drop=True).corr()['formula_value']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "39172b09",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:43.961521Z",
     "iopub.status.busy": "2024-12-08T00:37:43.961130Z",
     "iopub.status.idle": "2024-12-08T00:37:44.322097Z",
     "shell.execute_reply": "2024-12-08T00:37:44.320826Z"
    },
    "papermill": {
     "duration": 0.374219,
     "end_time": "2024-12-08T00:37:44.324650",
     "exception": false,
     "start_time": "2024-12-08T00:37:43.950431",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7e6cd1a5fe20>,\n",
       " <matplotlib.lines.Line2D at 0x7e6cd1a5fdc0>,\n",
       " <matplotlib.lines.Line2D at 0x7e6cd1a5fd90>,\n",
       " <matplotlib.lines.Line2D at 0x7e6cd1a5fca0>,\n",
       " <matplotlib.lines.Line2D at 0x7e6cd1a5fbb0>,\n",
       " <matplotlib.lines.Line2D at 0x7e6cd1a5c910>,\n",
       " <matplotlib.lines.Line2D at 0x7e6cd1a5faf0>]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(xd.reset_index(drop=True))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "cdbd756d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:44.347284Z",
     "iopub.status.busy": "2024-12-08T00:37:44.346865Z",
     "iopub.status.idle": "2024-12-08T00:37:44.355522Z",
     "shell.execute_reply": "2024-12-08T00:37:44.354377Z"
    },
    "papermill": {
     "duration": 0.022536,
     "end_time": "2024-12-08T00:37:44.358011",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.335475",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "xd.reset_index(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "1a618211",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:44.380280Z",
     "iopub.status.busy": "2024-12-08T00:37:44.379879Z",
     "iopub.status.idle": "2024-12-08T00:37:44.393663Z",
     "shell.execute_reply": "2024-12-08T00:37:44.392654Z"
    },
    "papermill": {
     "duration": 0.027513,
     "end_time": "2024-12-08T00:37:44.396134",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.368621",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "xd = xd.drop_duplicates(subset=['formula_value'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d418b564",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:44.417960Z",
     "iopub.status.busy": "2024-12-08T00:37:44.417580Z",
     "iopub.status.idle": "2024-12-08T00:37:44.432313Z",
     "shell.execute_reply": "2024-12-08T00:37:44.431098Z"
    },
    "papermill": {
     "duration": 0.027921,
     "end_time": "2024-12-08T00:37:44.434455",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.406534",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>views</th>\n",
       "      <th>likes</th>\n",
       "      <th>dislikes</th>\n",
       "      <th>comment_count</th>\n",
       "      <th>category_id</th>\n",
       "      <th>video_id</th>\n",
       "      <th>formula_value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>36269</th>\n",
       "      <td>Q: The Second American Revolution is Upon Us</td>\n",
       "      <td>67643</td>\n",
       "      <td>6335</td>\n",
       "      <td>183</td>\n",
       "      <td>2178</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1</td>\n",
       "      <td>15.529352</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                              title  views  likes  dislikes  \\\n",
       "36269  Q: The Second American Revolution is Upon Us  67643   6335       183   \n",
       "\n",
       "       comment_count  category_id  video_id  formula_value  \n",
       "36269           2178         14.0         1      15.529352  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xd.sample(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "522d8663",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:44.456576Z",
     "iopub.status.busy": "2024-12-08T00:37:44.456232Z",
     "iopub.status.idle": "2024-12-08T00:37:44.463236Z",
     "shell.execute_reply": "2024-12-08T00:37:44.462075Z"
    },
    "papermill": {
     "duration": 0.02039,
     "end_time": "2024-12-08T00:37:44.465461",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.445071",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# xd.sample(1)\n",
    "xd.iloc[48318,-2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "a5648027",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:37:44.488419Z",
     "iopub.status.busy": "2024-12-08T00:37:44.488064Z",
     "iopub.status.idle": "2024-12-08T00:37:44.518921Z",
     "shell.execute_reply": "2024-12-08T00:37:44.517680Z"
    },
    "papermill": {
     "duration": 0.045805,
     "end_time": "2024-12-08T00:37:44.521399",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.475594",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>views</th>\n",
       "      <th>likes</th>\n",
       "      <th>dislikes</th>\n",
       "      <th>comment_count</th>\n",
       "      <th>category_id</th>\n",
       "      <th>video_id</th>\n",
       "      <th>formula_value</th>\n",
       "      <th>difference</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>48325</th>\n",
       "      <td>We Mastered That Shiny Dirt Ball</td>\n",
       "      <td>4227252</td>\n",
       "      <td>100981</td>\n",
       "      <td>13015</td>\n",
       "      <td>9177</td>\n",
       "      <td>16.0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.269511</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31374</th>\n",
       "      <td>Modou Mbaye ChassÃ© et MenacÃ© de Mort par Sa ...</td>\n",
       "      <td>39713</td>\n",
       "      <td>287</td>\n",
       "      <td>30</td>\n",
       "      <td>71</td>\n",
       "      <td>16.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.269488</td>\n",
       "      <td>0.000023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33953</th>\n",
       "      <td>Oru Adaar Love | Official Teaser ft Priya Prak...</td>\n",
       "      <td>11224655</td>\n",
       "      <td>235111</td>\n",
       "      <td>17671</td>\n",
       "      <td>13373</td>\n",
       "      <td>17.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.269480</td>\n",
       "      <td>0.000031</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6177</th>\n",
       "      <td>Barbara enlÃ¨ve le haut pour un cours de yoga ...</td>\n",
       "      <td>55196</td>\n",
       "      <td>523</td>\n",
       "      <td>25</td>\n",
       "      <td>40</td>\n",
       "      <td>18.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.269463</td>\n",
       "      <td>0.000048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1676</th>\n",
       "      <td>21 Savage, Offset, Metro Boomin - Ric Flair Drip</td>\n",
       "      <td>69907195</td>\n",
       "      <td>835963</td>\n",
       "      <td>30861</td>\n",
       "      <td>40903</td>\n",
       "      <td>17.0</td>\n",
       "      <td>31</td>\n",
       "      <td>0.269436</td>\n",
       "      <td>0.000074</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18493</th>\n",
       "      <td>How Noah Galvin Makes Evan Hansen His Own</td>\n",
       "      <td>1402</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.269423</td>\n",
       "      <td>0.000088</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   title     views   likes  \\\n",
       "48325                   We Mastered That Shiny Dirt Ball   4227252  100981   \n",
       "31374  Modou Mbaye ChassÃ© et MenacÃ© de Mort par Sa ...     39713     287   \n",
       "33953  Oru Adaar Love | Official Teaser ft Priya Prak...  11224655  235111   \n",
       "6177   Barbara enlÃ¨ve le haut pour un cours de yoga ...     55196     523   \n",
       "1676    21 Savage, Offset, Metro Boomin - Ric Flair Drip  69907195  835963   \n",
       "18493          How Noah Galvin Makes Evan Hansen His Own      1402      20   \n",
       "\n",
       "       dislikes  comment_count  category_id  video_id  formula_value  \\\n",
       "48325     13015           9177         16.0        10       0.269511   \n",
       "31374        30             71         16.0         1       0.269488   \n",
       "33953     17671          13373         17.0         3       0.269480   \n",
       "6177         25             40         18.0         2       0.269463   \n",
       "1676      30861          40903         17.0        31       0.269436   \n",
       "18493         0              0         18.0         1       0.269423   \n",
       "\n",
       "       difference  \n",
       "48325    0.000000  \n",
       "31374    0.000023  \n",
       "33953    0.000031  \n",
       "6177     0.000048  \n",
       "1676     0.000074  \n",
       "18493    0.000088  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_value = 0.26951083087448285\n",
    "\n",
    "\n",
    "xd['difference'] = np.abs(xd['formula_value'] - target_value)\n",
    "xd.sort_values('difference').head(6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c3850327",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-08T00:25:54.168452Z",
     "iopub.status.busy": "2024-12-08T00:25:54.168046Z",
     "iopub.status.idle": "2024-12-08T00:25:54.200990Z",
     "shell.execute_reply": "2024-12-08T00:25:54.199882Z",
     "shell.execute_reply.started": "2024-12-08T00:25:54.168410Z"
    },
    "papermill": {
     "duration": 0.010279,
     "end_time": "2024-12-08T00:37:44.542302",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.532023",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9cd3e54a",
   "metadata": {
    "papermill": {
     "duration": 0.010167,
     "end_time": "2024-12-08T00:37:44.563225",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.553058",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3edc58c2",
   "metadata": {
    "papermill": {
     "duration": 0.010282,
     "end_time": "2024-12-08T00:37:44.584603",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.574321",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "87fe17a9",
   "metadata": {
    "papermill": {
     "duration": 0.010838,
     "end_time": "2024-12-08T00:37:44.606353",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.595515",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7cd99175",
   "metadata": {
    "papermill": {
     "duration": 0.010639,
     "end_time": "2024-12-08T00:37:44.627506",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.616867",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6430e371",
   "metadata": {
    "papermill": {
     "duration": 0.010498,
     "end_time": "2024-12-08T00:37:44.649081",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.638583",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5c285d49",
   "metadata": {
    "papermill": {
     "duration": 0.0106,
     "end_time": "2024-12-08T00:37:44.670061",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.659461",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "66b3265c",
   "metadata": {
    "papermill": {
     "duration": 0.010116,
     "end_time": "2024-12-08T00:37:44.690581",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.680465",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "10b8aeac",
   "metadata": {
    "papermill": {
     "duration": 0.010244,
     "end_time": "2024-12-08T00:37:44.711195",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.700951",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d5e6422f",
   "metadata": {
    "papermill": {
     "duration": 0.009909,
     "end_time": "2024-12-08T00:37:44.731404",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.721495",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "31445c83",
   "metadata": {
    "papermill": {
     "duration": 0.010268,
     "end_time": "2024-12-08T00:37:44.752969",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.742701",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a78c3457",
   "metadata": {
    "papermill": {
     "duration": 0.009979,
     "end_time": "2024-12-08T00:37:44.773321",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.763342",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cdbff2ab",
   "metadata": {
    "papermill": {
     "duration": 0.009895,
     "end_time": "2024-12-08T00:37:44.793584",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.783689",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cc57a6bb",
   "metadata": {
    "papermill": {
     "duration": 0.010133,
     "end_time": "2024-12-08T00:37:44.813874",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.803741",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a9891846",
   "metadata": {
    "papermill": {
     "duration": 0.010004,
     "end_time": "2024-12-08T00:37:44.834123",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.824119",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "befca906",
   "metadata": {
    "papermill": {
     "duration": 0.010121,
     "end_time": "2024-12-08T00:37:44.854489",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.844368",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9e0fa995",
   "metadata": {
    "papermill": {
     "duration": 0.010067,
     "end_time": "2024-12-08T00:37:44.874835",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.864768",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "33265516",
   "metadata": {
    "papermill": {
     "duration": 0.010022,
     "end_time": "2024-12-08T00:37:44.895209",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.885187",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "028068da",
   "metadata": {
    "papermill": {
     "duration": 0.010008,
     "end_time": "2024-12-08T00:37:44.915598",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.905590",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a073c509",
   "metadata": {
    "papermill": {
     "duration": 0.009993,
     "end_time": "2024-12-08T00:37:44.935728",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.925735",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f2377d67",
   "metadata": {
    "papermill": {
     "duration": 0.009783,
     "end_time": "2024-12-08T00:37:44.955797",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.946014",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b406ea53",
   "metadata": {
    "papermill": {
     "duration": 0.010002,
     "end_time": "2024-12-08T00:37:44.975891",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.965889",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0af22f61",
   "metadata": {
    "papermill": {
     "duration": 0.010291,
     "end_time": "2024-12-08T00:37:44.996493",
     "exception": false,
     "start_time": "2024-12-08T00:37:44.986202",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "61e2f7dd",
   "metadata": {
    "papermill": {
     "duration": 0.010171,
     "end_time": "2024-12-08T00:37:45.017174",
     "exception": false,
     "start_time": "2024-12-08T00:37:45.007003",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "25a85ed2",
   "metadata": {
    "papermill": {
     "duration": 0.010235,
     "end_time": "2024-12-08T00:37:45.037602",
     "exception": false,
     "start_time": "2024-12-08T00:37:45.027367",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cac202de",
   "metadata": {
    "papermill": {
     "duration": 0.010244,
     "end_time": "2024-12-08T00:37:45.058216",
     "exception": false,
     "start_time": "2024-12-08T00:37:45.047972",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aacfbe7c",
   "metadata": {
    "papermill": {
     "duration": 0.01016,
     "end_time": "2024-12-08T00:37:45.079218",
     "exception": false,
     "start_time": "2024-12-08T00:37:45.069058",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ab6d5a5b",
   "metadata": {
    "papermill": {
     "duration": 0.013648,
     "end_time": "2024-12-08T00:37:45.103156",
     "exception": false,
     "start_time": "2024-12-08T00:37:45.089508",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cd155404",
   "metadata": {
    "papermill": {
     "duration": 0.011575,
     "end_time": "2024-12-08T00:37:45.128527",
     "exception": false,
     "start_time": "2024-12-08T00:37:45.116952",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 4188923,
     "sourceId": 7233960,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30804,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 11.046938,
   "end_time": "2024-12-08T00:37:45.865820",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-12-08T00:37:34.818882",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
