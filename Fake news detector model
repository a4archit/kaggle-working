{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "490c25e4",
   "metadata": {
    "papermill": {
     "duration": 0.003047,
     "end_time": "2025-05-02T11:05:46.373631",
     "exception": false,
     "start_time": "2025-05-02T11:05:46.370584",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# <center>Fake News Detector Model using Self-Attention Mechanism </center>\n",
    "\n",
    "***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b984d7b4",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-05-02T11:05:46.380971Z",
     "iopub.status.busy": "2025-05-02T11:05:46.380542Z",
     "iopub.status.idle": "2025-05-02T11:05:48.746053Z",
     "shell.execute_reply": "2025-05-02T11:05:48.744773Z"
    },
    "papermill": {
     "duration": 2.371381,
     "end_time": "2025-05-02T11:05:48.748096",
     "exception": false,
     "start_time": "2025-05-02T11:05:46.376715",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/fake-or-real-news/fake_or_real_news.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e2ea8087",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T11:05:48.756039Z",
     "iopub.status.busy": "2025-05-02T11:05:48.755549Z",
     "iopub.status.idle": "2025-05-02T11:05:51.097440Z",
     "shell.execute_reply": "2025-05-02T11:05:51.096124Z"
    },
    "papermill": {
     "duration": 2.348292,
     "end_time": "2025-05-02T11:05:51.099370",
     "exception": false,
     "start_time": "2025-05-02T11:05:48.751078",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "648aa321",
   "metadata": {
    "papermill": {
     "duration": 0.002544,
     "end_time": "2025-05-02T11:05:51.104861",
     "exception": false,
     "start_time": "2025-05-02T11:05:51.102317",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Understanding data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fa0ac7b8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T11:05:51.111760Z",
     "iopub.status.busy": "2025-05-02T11:05:51.111254Z",
     "iopub.status.idle": "2025-05-02T11:05:52.072388Z",
     "shell.execute_reply": "2025-05-02T11:05:52.071067Z"
    },
    "papermill": {
     "duration": 0.966617,
     "end_time": "2025-05-02T11:05:52.074127",
     "exception": false,
     "start_time": "2025-05-02T11:05:51.107510",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "data = pd.read_csv(r\"/kaggle/input/fake-or-real-news/fake_or_real_news.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2f2703f4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T11:05:52.081786Z",
     "iopub.status.busy": "2025-05-02T11:05:52.081437Z",
     "iopub.status.idle": "2025-05-02T11:05:52.088635Z",
     "shell.execute_reply": "2025-05-02T11:05:52.087672Z"
    },
    "papermill": {
     "duration": 0.013445,
     "end_time": "2025-05-02T11:05:52.090568",
     "exception": false,
     "start_time": "2025-05-02T11:05:52.077123",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6335, 4)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "de4df272",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T11:05:52.098944Z",
     "iopub.status.busy": "2025-05-02T11:05:52.098624Z",
     "iopub.status.idle": "2025-05-02T11:05:52.113653Z",
     "shell.execute_reply": "2025-05-02T11:05:52.112684Z"
    },
    "papermill": {
     "duration": 0.021814,
     "end_time": "2025-05-02T11:05:52.115272",
     "exception": false,
     "start_time": "2025-05-02T11:05:52.093458",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Unnamed: 0    0\n",
       "title         0\n",
       "text          0\n",
       "label         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "624a46ee",
   "metadata": {
    "papermill": {
     "duration": 0.002658,
     "end_time": "2025-05-02T11:05:52.120782",
     "exception": false,
     "start_time": "2025-05-02T11:05:52.118124",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "3d452a3f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T11:05:52.128527Z",
     "iopub.status.busy": "2025-05-02T11:05:52.127469Z",
     "iopub.status.idle": "2025-05-02T11:05:52.656343Z",
     "shell.execute_reply": "2025-05-02T11:05:52.654383Z"
    },
    "papermill": {
     "duration": 0.534887,
     "end_time": "2025-05-02T11:05:52.658469",
     "exception": false,
     "start_time": "2025-05-02T11:05:52.123582",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.title(\"News headings words length\")\n",
    "sns.histplot(data.title.apply(lambda x: len(x)))\n",
    "plt.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "66705161",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T11:05:52.667357Z",
     "iopub.status.busy": "2025-05-02T11:05:52.666989Z",
     "iopub.status.idle": "2025-05-02T11:05:53.304092Z",
     "shell.execute_reply": "2025-05-02T11:05:53.302853Z"
    },
    "papermill": {
     "duration": 0.64404,
     "end_time": "2025-05-02T11:05:53.306444",
     "exception": false,
     "start_time": "2025-05-02T11:05:52.662404",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.title(\"News article words limit\")\n",
    "sns.histplot(data.text.apply(lambda x: len(x)))\n",
    "plt.xlim(0,20000)\n",
    "plt.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a99b6188",
   "metadata": {
    "papermill": {
     "duration": 0.004081,
     "end_time": "2025-05-02T11:05:53.314642",
     "exception": false,
     "start_time": "2025-05-02T11:05:53.310561",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 2043034,
     "sourceId": 3388761,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31012,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 15.643231,
   "end_time": "2025-05-02T11:05:54.143218",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-05-02T11:05:38.499987",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
