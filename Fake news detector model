{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3388761,"sourceType":"datasetVersion","datasetId":2043034},{"sourceId":6641062,"sourceType":"datasetVersion","datasetId":2093157}],"dockerImageVersionId":31012,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# <center>Fake News Detector Model using Self-Attention Mechanism </center>\n\n***","metadata":{}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:57:19.538354Z","iopub.execute_input":"2025-05-05T08:57:19.538682Z","iopub.status.idle":"2025-05-05T08:57:19.561151Z","shell.execute_reply.started":"2025-05-05T08:57:19.538662Z","shell.execute_reply":"2025-05-05T08:57:19.560281Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/fake-or-real-news/fake_or_real_news.csv\n/kaggle/input/fake-news-classification/WELFake_Dataset.csv\n","output_type":"stream"}],"execution_count":174},{"cell_type":"code","source":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom tensorflow.keras.preprocessing.text import Tokenizer\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\nfrom tensorflow import keras \nfrom keras import optimizers\nfrom keras import Sequential, Model\nfrom keras.layers import Dense, LSTM, Flatten, Embedding, Input, Dropout, BatchNormalization","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:57:21.024965Z","iopub.execute_input":"2025-05-05T08:57:21.025343Z","iopub.status.idle":"2025-05-05T08:57:21.030598Z","shell.execute_reply.started":"2025-05-05T08:57:21.025320Z","shell.execute_reply":"2025-05-05T08:57:21.029664Z"}},"outputs":[],"execution_count":175},{"cell_type":"markdown","source":"## Understanding data","metadata":{}},{"cell_type":"code","source":"data = pd.read_csv(r\"/kaggle/input/fake-or-real-news/fake_or_real_news.csv\")\ndata2 = pd.read_csv(r\"/kaggle/input/fake-news-classification/WELFake_Dataset.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:57:21.416730Z","iopub.execute_input":"2025-05-05T08:57:21.417017Z","iopub.status.idle":"2025-05-05T08:57:25.120797Z","shell.execute_reply.started":"2025-05-05T08:57:21.416998Z","shell.execute_reply":"2025-05-05T08:57:25.120000Z"}},"outputs":[],"execution_count":176},{"cell_type":"code","source":"data2.sample()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:31:36.578754Z","iopub.execute_input":"2025-05-05T08:31:36.579055Z","iopub.status.idle":"2025-05-05T08:31:36.596370Z","shell.execute_reply.started":"2025-05-05T08:31:36.579021Z","shell.execute_reply":"2025-05-05T08:31:36.595551Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data.shape, data2.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:29:56.640743Z","iopub.execute_input":"2025-05-05T08:29:56.641014Z","iopub.status.idle":"2025-05-05T08:29:56.649885Z","shell.execute_reply.started":"2025-05-05T08:29:56.640994Z","shell.execute_reply":"2025-05-05T08:29:56.648905Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:29:56.650688Z","iopub.execute_input":"2025-05-05T08:29:56.650893Z","iopub.status.idle":"2025-05-05T08:29:56.681134Z","shell.execute_reply.started":"2025-05-05T08:29:56.650876Z","shell.execute_reply":"2025-05-05T08:29:56.680083Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data2.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:29:56.682688Z","iopub.execute_input":"2025-05-05T08:29:56.682935Z","iopub.status.idle":"2025-05-05T08:29:56.724458Z","shell.execute_reply.started":"2025-05-05T08:29:56.682916Z","shell.execute_reply":"2025-05-05T08:29:56.723253Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data2.dropna(inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:29:56.725396Z","iopub.execute_input":"2025-05-05T08:29:56.725617Z","iopub.status.idle":"2025-05-05T08:29:56.765703Z","shell.execute_reply.started":"2025-05-05T08:29:56.725600Z","shell.execute_reply":"2025-05-05T08:29:56.764643Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## EDA","metadata":{}},{"cell_type":"code","source":"plt.title(\"News headings words length (D1 VS D2)\")\nsns.histplot(data2.title.apply(lambda x: len(x)), label=\"Data 2\")\nsns.histplot(data.title.apply(lambda x: len(x)), label='Date 1')\nplt.xlim(0,150)\nplt.legend()\nplt.plot()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:29:57.958172Z","iopub.execute_input":"2025-05-05T08:29:57.958471Z","iopub.status.idle":"2025-05-05T08:29:59.016541Z","shell.execute_reply.started":"2025-05-05T08:29:57.958450Z","shell.execute_reply":"2025-05-05T08:29:59.015646Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.title(\"News article words limit\")\nsns.histplot(data.text.apply(lambda x: len(x)))\nplt.xlim(0,20000)\nplt.plot()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:32:04.457186Z","iopub.execute_input":"2025-05-05T08:32:04.457469Z","iopub.status.idle":"2025-05-05T08:32:04.975701Z","shell.execute_reply.started":"2025-05-05T08:32:04.457451Z","shell.execute_reply":"2025-05-05T08:32:04.974678Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.title(\"News article words limit (Data 2)\")\nsns.histplot(data2.text.apply(lambda x: len(x)))\nplt.xlim(0,10000)\nplt.plot()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:32:04.977143Z","iopub.execute_input":"2025-05-05T08:32:04.977444Z","iopub.status.idle":"2025-05-05T08:32:05.190364Z","shell.execute_reply.started":"2025-05-05T08:32:04.977418Z","shell.execute_reply":"2025-05-05T08:32:05.188938Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data.label.value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:32:05.190888Z","iopub.status.idle":"2025-05-05T08:32:05.191169Z","shell.execute_reply.started":"2025-05-05T08:32:05.191016Z","shell.execute_reply":"2025-05-05T08:32:05.191027Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data2.label.value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:32:05.192479Z","iopub.status.idle":"2025-05-05T08:32:05.192860Z","shell.execute_reply.started":"2025-05-05T08:32:05.192661Z","shell.execute_reply":"2025-05-05T08:32:05.192678Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data2.sample(3)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:32:05.721326Z","iopub.execute_input":"2025-05-05T08:32:05.721626Z","iopub.status.idle":"2025-05-05T08:32:05.733263Z","shell.execute_reply.started":"2025-05-05T08:32:05.721607Z","shell.execute_reply":"2025-05-05T08:32:05.732376Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### Tokeknizing","metadata":{}},{"cell_type":"code","source":"# Hyperparameters\nmax_words = 45000      # vocabulary size\nmax_len_title = 40     # title sequence length\n\n# Tokenizers\ntitle_tokenizer = Tokenizer(num_words=max_words, oov_token=\"<OOV>\")\n\ntitle_tokenizer.fit_on_texts(data2['title'])\ntitle_sequences = title_tokenizer.texts_to_sequences(data2['title'])\ntitle_padded = pad_sequences(title_sequences, maxlen=max_len_title, padding='post', truncating='post')\ntotal_words = len(title_tokenizer.word_index)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:32:08.581367Z","iopub.execute_input":"2025-05-05T08:32:08.581890Z","iopub.status.idle":"2025-05-05T08:32:08.609375Z","shell.execute_reply.started":"2025-05-05T08:32:08.581869Z","shell.execute_reply":"2025-05-05T08:32:08.608322Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"total_words","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:30:19.892305Z","iopub.execute_input":"2025-05-05T08:30:19.892604Z","iopub.status.idle":"2025-05-05T08:30:19.897908Z","shell.execute_reply.started":"2025-05-05T08:30:19.892582Z","shell.execute_reply":"2025-05-05T08:30:19.897168Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Convert 'real' → 1, 'fake' → 0\ndata2['label'] = data2['label'].map({'REAL': 1, 'FAKE': 0})\nlabels = data2['label'].values\n# data['label'].isnull().sum()\ndata2.sample(3)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:30:20.581300Z","iopub.execute_input":"2025-05-05T08:30:20.581611Z","iopub.status.idle":"2025-05-05T08:30:20.598428Z","shell.execute_reply.started":"2025-05-05T08:30:20.581588Z","shell.execute_reply":"2025-05-05T08:30:20.597571Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data2.sample(3)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T08:30:21.191408Z","iopub.execute_input":"2025-05-05T08:30:21.191695Z","iopub.status.idle":"2025-05-05T08:30:21.204690Z","shell.execute_reply.started":"2025-05-05T08:30:21.191674Z","shell.execute_reply":"2025-05-05T08:30:21.203691Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"title_padded.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T07:17:57.150250Z","iopub.execute_input":"2025-05-05T07:17:57.150539Z","iopub.status.idle":"2025-05-05T07:17:57.156488Z","shell.execute_reply.started":"2025-05-05T07:17:57.150521Z","shell.execute_reply":"2025-05-05T07:17:57.155608Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(\n    title_padded,  labels, test_size=0.2, random_state=42, stratify=labels)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T07:17:57.389087Z","iopub.execute_input":"2025-05-05T07:17:57.389387Z","iopub.status.idle":"2025-05-05T07:17:57.398246Z","shell.execute_reply.started":"2025-05-05T07:17:57.389366Z","shell.execute_reply":"2025-05-05T07:17:57.397172Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model = Sequential(name='mo_1')\n\n# model.add(BatchNormalization())\nmodel.add(Embedding(input_dim=max_words, output_dim=128, input_length=max_len_title, name='Embedding_1'))\n\nmodel.add(LSTM(8, name='LSTM_1', return_sequences=True, kernel_initializer='he_uniform'))\n# model.add(Dropout(0.5))\n\nmodel.add(LSTM(8, name='LSTM_2', return_sequences=True))\n# model.add(Dropout(0.5))\n\nmodel.add(LSTM(8, name='LSTM_3', return_sequences=True))\n\nmodel.add(LSTM(8, name='LSTM_4', return_sequences=True))\nmodel.add(Dropout(0.5))\n\nmodel.add(LSTM(8, name='LSTM_5'))\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(32, activation='relu'))\nmodel.add(Dense(32, activation='relu'))\nmodel.add(Dense(1, activation='sigmoid'))\n\n# model.summary()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T07:21:20.312160Z","iopub.execute_input":"2025-05-05T07:21:20.312452Z","iopub.status.idle":"2025-05-05T07:21:20.351149Z","shell.execute_reply.started":"2025-05-05T07:21:20.312434Z","shell.execute_reply":"2025-05-05T07:21:20.350325Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model.compile(loss='binary_crossentropy', optimizer=optimizers.Adam(), metrics=['accuracy'])\nhistory = model.fit(X_train, y_train, epochs=5, validation_split=0.1, batch_size=32)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T07:21:22.561224Z","iopub.execute_input":"2025-05-05T07:21:22.561502Z","iopub.status.idle":"2025-05-05T07:22:28.795761Z","shell.execute_reply.started":"2025-05-05T07:21:22.561483Z","shell.execute_reply":"2025-05-05T07:22:28.794675Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Evaluate\nloss, acc = model.evaluate(X_test, y_test, verbose=False)\nprint(f\"\\nTest Accuracy: {acc:.4f}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T07:22:52.961475Z","iopub.execute_input":"2025-05-05T07:22:52.961761Z","iopub.status.idle":"2025-05-05T07:22:53.641668Z","shell.execute_reply.started":"2025-05-05T07:22:52.961743Z","shell.execute_reply":"2025-05-05T07:22:53.640621Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras.layers import Input, Embedding, LSTM, Dense, Dropout, Layer\nfrom tensorflow.keras.models import Model\n\n# --- Custom Self-Attention Layer ---\nclass GeneralSelfAttention(Layer):\n    def __init__(self, units):\n        super(GeneralSelfAttention, self).__init__()\n        self.Wa = Dense(units)  # Learnable matrix W_a\n\n    def call(self, encoder_output):\n        # encoder_output: (batch, time_steps, hidden_dim)\n        query = encoder_output  # Q = encoder output\n        key = encoder_output    # K = encoder output\n        value = encoder_output  # V = encoder output\n\n        # Score = Q^T W K\n        score = tf.matmul(self.Wa(query), key, transpose_b=True)  # (batch, T, T)\n        attention_weights = tf.nn.softmax(score, axis=-1)\n\n        # Weighted sum of values\n        context = tf.matmul(attention_weights, value)  # (batch, T, hidden_dim)\n        context_vector = tf.reduce_sum(context, axis=1)  # Aggregate over time\n        return context_vector\n\n# --- Model Setup ---\n# max_words = 10000\nmax_len = max_len_title\n\ninput_layer = Input(shape=(max_len,))\nembedding = Embedding(input_dim=max_words, output_dim=128)(input_layer)\nlstm_out = LSTM(128, return_sequences=True)(embedding)  # return full sequence\n\nattention_out = GeneralSelfAttention(128)(lstm_out)\ndrop = Dropout(0.5)(attention_out)\noutput = Dense(1, activation='sigmoid')(drop)\n\nmodel2 = Model(inputs=input_layer, outputs=output)\n\nmodel2.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\nmodel2.summary()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T07:23:21.563581Z","iopub.execute_input":"2025-05-05T07:23:21.563912Z","iopub.status.idle":"2025-05-05T07:23:21.672595Z","shell.execute_reply.started":"2025-05-05T07:23:21.563890Z","shell.execute_reply":"2025-05-05T07:23:21.671884Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"history2 = model2.fit(X_train, y_train, epochs=5, batch_size=32, validation_split=0.1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-05T07:23:23.721772Z","iopub.execute_input":"2025-05-05T07:23:23.722089Z","iopub.status.idle":"2025-05-05T07:23:23.829484Z","shell.execute_reply.started":"2025-05-05T07:23:23.722069Z","shell.execute_reply":"2025-05-05T07:23:23.828006Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}