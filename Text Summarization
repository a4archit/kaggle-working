{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "fbf3118f",
   "metadata": {
    "papermill": {
     "duration": 0.007888,
     "end_time": "2025-05-13T07:57:03.397923",
     "exception": false,
     "start_time": "2025-05-13T07:57:03.390035",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# <center style=\"padding: 30px 0; color:#fff; background-color: #0249c4;\"> <b>Text Summarization<b> </center>\n",
    "\n",
    "## Techniques used in this project:\n",
    "\n",
    "- Tokenization\n",
    "- Stemming\n",
    "- Embedding\n",
    "- Self-Attention\n",
    "- *others*\n",
    "\n",
    "\n",
    "## Steps to be done\n",
    "- [x] Clean (CNN, By, etc.)\n",
    "- [x] Lowercasing\n",
    "<!-- - [ ] Stemming -->\n",
    "- [x] Tokenization\n",
    "\n",
    "- [ ] Next step is to apply tokenize on both data and target after that further processing..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9cb2f9c2",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-05-13T07:57:03.412651Z",
     "iopub.status.busy": "2025-05-13T07:57:03.412221Z",
     "iopub.status.idle": "2025-05-13T07:57:05.688459Z",
     "shell.execute_reply": "2025-05-13T07:57:05.687385Z"
    },
    "papermill": {
     "duration": 2.285374,
     "end_time": "2025-05-13T07:57:05.690340",
     "exception": false,
     "start_time": "2025-05-13T07:57:03.404966",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/newspaper-text-summarization-cnn-dailymail/cnn_dailymail/validation.csv\n",
      "/kaggle/input/newspaper-text-summarization-cnn-dailymail/cnn_dailymail/train.csv\n",
      "/kaggle/input/newspaper-text-summarization-cnn-dailymail/cnn_dailymail/test.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "04f7364c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:57:05.706018Z",
     "iopub.status.busy": "2025-05-13T07:57:05.705253Z",
     "iopub.status.idle": "2025-05-13T07:57:26.994669Z",
     "shell.execute_reply": "2025-05-13T07:57:26.993427Z"
    },
    "papermill": {
     "duration": 21.298872,
     "end_time": "2025-05-13T07:57:26.996803",
     "exception": false,
     "start_time": "2025-05-13T07:57:05.697931",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-05-13 07:57:10.241406: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "E0000 00:00:1747123030.560930      13 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "E0000 00:00:1747123030.650268      13 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import tensorflow\n",
    "from tensorflow import keras\n",
    "from tensorflow.keras.preprocessing.text import Tokenizer\n",
    "from tensorflow.keras.preprocessing.sequence import pad_sequences"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8d9ded00",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:57:27.011724Z",
     "iopub.status.busy": "2025-05-13T07:57:27.011100Z",
     "iopub.status.idle": "2025-05-13T07:58:02.213719Z",
     "shell.execute_reply": "2025-05-13T07:58:02.212435Z"
    },
    "papermill": {
     "duration": 35.212202,
     "end_time": "2025-05-13T07:58:02.215760",
     "exception": false,
     "start_time": "2025-05-13T07:57:27.003558",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train = pd.read_csv(r\"/kaggle/input/newspaper-text-summarization-cnn-dailymail/cnn_dailymail/train.csv\")\n",
    "xtrain = train.copy()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4846a7da",
   "metadata": {
    "papermill": {
     "duration": 0.006454,
     "end_time": "2025-05-13T07:58:02.229497",
     "exception": false,
     "start_time": "2025-05-13T07:58:02.223043",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## <center style=\"padding: 20px 0; color: #fff; background-color: #000;\"> Understanding data </center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "81b33d1a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:02.243843Z",
     "iopub.status.busy": "2025-05-13T07:58:02.243469Z",
     "iopub.status.idle": "2025-05-13T07:58:02.286341Z",
     "shell.execute_reply": "2025-05-13T07:58:02.285312Z"
    },
    "papermill": {
     "duration": 0.052473,
     "end_time": "2025-05-13T07:58:02.288102",
     "exception": false,
     "start_time": "2025-05-13T07:58:02.235629",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>article</th>\n",
       "      <th>highlights</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>169200</th>\n",
       "      <td>66ea6096fbbf2910963a9236a8b00553bd050a38</td>\n",
       "      <td>By . Ruth Styles . Prince Harry proved he is e...</td>\n",
       "      <td>Harry was mobbed by crowds as he arrived in Ch...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                              id  \\\n",
       "169200  66ea6096fbbf2910963a9236a8b00553bd050a38   \n",
       "\n",
       "                                                  article  \\\n",
       "169200  By . Ruth Styles . Prince Harry proved he is e...   \n",
       "\n",
       "                                               highlights  \n",
       "169200  Harry was mobbed by crowds as he arrived in Ch...  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.sample(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b2224054",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:02.302864Z",
     "iopub.status.busy": "2025-05-13T07:58:02.301882Z",
     "iopub.status.idle": "2025-05-13T07:58:02.442927Z",
     "shell.execute_reply": "2025-05-13T07:58:02.441586Z"
    },
    "papermill": {
     "duration": 0.150151,
     "end_time": "2025-05-13T07:58:02.444846",
     "exception": false,
     "start_time": "2025-05-13T07:58:02.294695",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 287113 entries, 0 to 287112\n",
      "Data columns (total 3 columns):\n",
      " #   Column      Non-Null Count   Dtype \n",
      "---  ------      --------------   ----- \n",
      " 0   id          287113 non-null  object\n",
      " 1   article     287113 non-null  object\n",
      " 2   highlights  287113 non-null  object\n",
      "dtypes: object(3)\n",
      "memory usage: 6.6+ MB\n"
     ]
    }
   ],
   "source": [
    "train.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a763dbb4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:02.460041Z",
     "iopub.status.busy": "2025-05-13T07:58:02.459522Z",
     "iopub.status.idle": "2025-05-13T07:58:04.563205Z",
     "shell.execute_reply": "2025-05-13T07:58:04.561907Z"
    },
    "papermill": {
     "duration": 2.113458,
     "end_time": "2025-05-13T07:58:04.565418",
     "exception": false,
     "start_time": "2025-05-13T07:58:02.451960",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>article</th>\n",
       "      <th>highlights</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>287113</td>\n",
       "      <td>287113</td>\n",
       "      <td>287113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>287113</td>\n",
       "      <td>284005</td>\n",
       "      <td>282197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>0001d1afc246a7964130f43ae940af6bc6c57f01</td>\n",
       "      <td>(CNN) -- Dubai could lose its place on the Wom...</td>\n",
       "      <td>This page includes the show Transcript and the...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>83</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                              id  \\\n",
       "count                                     287113   \n",
       "unique                                    287113   \n",
       "top     0001d1afc246a7964130f43ae940af6bc6c57f01   \n",
       "freq                                           1   \n",
       "\n",
       "                                                  article  \\\n",
       "count                                              287113   \n",
       "unique                                             284005   \n",
       "top     (CNN) -- Dubai could lose its place on the Wom...   \n",
       "freq                                                    3   \n",
       "\n",
       "                                               highlights  \n",
       "count                                              287113  \n",
       "unique                                             282197  \n",
       "top     This page includes the show Transcript and the...  \n",
       "freq                                                   83  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ccbc7a1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:04.584619Z",
     "iopub.status.busy": "2025-05-13T07:58:04.583478Z",
     "iopub.status.idle": "2025-05-13T07:58:04.709633Z",
     "shell.execute_reply": "2025-05-13T07:58:04.708302Z"
    },
    "papermill": {
     "duration": 0.137983,
     "end_time": "2025-05-13T07:58:04.711488",
     "exception": false,
     "start_time": "2025-05-13T07:58:04.573505",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id            0\n",
       "article       0\n",
       "highlights    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "65942533",
   "metadata": {
    "papermill": {
     "duration": 0.006848,
     "end_time": "2025-05-13T07:58:04.726289",
     "exception": false,
     "start_time": "2025-05-13T07:58:04.719441",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## <center style=\"padding: 20px 0; color: #fff; background-color: #000;\"> EDA (Exploratory Data Analysis) </center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "4d3e40e0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:04.741445Z",
     "iopub.status.busy": "2025-05-13T07:58:04.741073Z",
     "iopub.status.idle": "2025-05-13T07:58:22.018972Z",
     "shell.execute_reply": "2025-05-13T07:58:22.017820Z"
    },
    "papermill": {
     "duration": 17.287955,
     "end_time": "2025-05-13T07:58:22.020868",
     "exception": false,
     "start_time": "2025-05-13T07:58:04.732913",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.title(\"Words length comparison of 'articles' and 'highlights'\")\n",
    "sns.histplot( train.article.apply(lambda x: len(x.split(' '))), label='article' )\n",
    "sns.histplot( train.highlights.apply(lambda x: len(x.split(' '))), label='highlights')\n",
    "plt.legend()\n",
    "plt.xlim(0,1500)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76c15629",
   "metadata": {
    "papermill": {
     "duration": 0.006969,
     "end_time": "2025-05-13T07:58:22.036138",
     "exception": false,
     "start_time": "2025-05-13T07:58:22.029169",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## <center style=\"padding: 20px 0; color: #fff; background-color: #000;\"> Data Cleaning </center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "fbdf08d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:22.052600Z",
     "iopub.status.busy": "2025-05-13T07:58:22.052237Z",
     "iopub.status.idle": "2025-05-13T07:58:22.059336Z",
     "shell.execute_reply": "2025-05-13T07:58:22.058226Z"
    },
    "papermill": {
     "duration": 0.017321,
     "end_time": "2025-05-13T07:58:22.061115",
     "exception": false,
     "start_time": "2025-05-13T07:58:22.043794",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "def clean_article(article: str) -> str:\n",
    "    \"\"\" This function will helpful for return the cleaned article \"\"\"\n",
    "\n",
    "    article = article.replace('(CNN) --','')\n",
    "    article = article.replace('(CNN)','')\n",
    "    \n",
    "    # if not ('UPDATE' in article and 'PUBLISHED' in article) :         \n",
    "    if not article.strip().startswith('By'):\n",
    "        return article\n",
    "\n",
    "    for sentence in article.split('.'):\n",
    "        word_list = sentence.split(' ')\n",
    "        if len(word_list) > 10:\n",
    "            updated_article = article[article.index(sentence):]\n",
    "            break\n",
    "\n",
    "    return updated_article.lower()\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def clean_highlights(highlight: str) -> str:\n",
    "    \"\"\" This function will clean the given highlights, and make them for furthur processing \"\"\"\n",
    "    \n",
    "    highlight = highlight.replace('\\n','')\n",
    "    return highlight.lower()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "94e964d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:22.082627Z",
     "iopub.status.busy": "2025-05-13T07:58:22.082092Z",
     "iopub.status.idle": "2025-05-13T07:58:22.089967Z",
     "shell.execute_reply": "2025-05-13T07:58:22.088608Z"
    },
    "papermill": {
     "duration": 0.022759,
     "end_time": "2025-05-13T07:58:22.092479",
     "exception": false,
     "start_time": "2025-05-13T07:58:22.069720",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "min_words_in_input_sentence = 100\n",
    "max_words_in_input_sentence = 700\n",
    "max_words_in_target = 150\n",
    "\n",
    "def get_eligible_sentences(article: str) -> str :\n",
    "    \"\"\" This function will helps to remove small and large sentences (check by using words length) \"\"\"\n",
    "    sentence_length = len(article.split(' '))\n",
    "    if sentence_length > min_words_in_input_sentence and sentence_length <= max_words_in_input_sentence:\n",
    "        return article \n",
    "    else:\n",
    "        return np.nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5eb2196a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:22.113697Z",
     "iopub.status.busy": "2025-05-13T07:58:22.113237Z",
     "iopub.status.idle": "2025-05-13T07:58:22.119523Z",
     "shell.execute_reply": "2025-05-13T07:58:22.118447Z"
    },
    "papermill": {
     "duration": 0.020663,
     "end_time": "2025-05-13T07:58:22.121640",
     "exception": false,
     "start_time": "2025-05-13T07:58:22.100977",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# xtrain"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6aac9da5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:22.145287Z",
     "iopub.status.busy": "2025-05-13T07:58:22.144964Z",
     "iopub.status.idle": "2025-05-13T07:58:46.948415Z",
     "shell.execute_reply": "2025-05-13T07:58:46.947297Z"
    },
    "papermill": {
     "duration": 24.81481,
     "end_time": "2025-05-13T07:58:46.950205",
     "exception": false,
     "start_time": "2025-05-13T07:58:22.135395",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# basic operations for better data \n",
    "xtrain.article = train.article.apply(clean_article)\n",
    "xtrain.highlights = train.highlights.apply(clean_highlights)\n",
    "\n",
    "\n",
    "# concatenation of article and highlights\n",
    "xtrain['combined'] = xtrain.article + \" \" +  xtrain.highlights\n",
    "\n",
    "\n",
    "# we are taking only those article ehich have words length between 100 - 700\n",
    "xtrain.article = xtrain.article.apply(get_eligible_sentences)\n",
    "\n",
    "xtrain.dropna(inplace = True)\n",
    "xtrain.reset_index(drop=True)\n",
    "\n",
    "\n",
    "# dropping unusefull features\n",
    "try:\n",
    "    xtrain.drop(columns=['id'], inplace=True)\n",
    "except KeyError:\n",
    "    print(\"Column(s) already dropped.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "1e420e21",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:46.966157Z",
     "iopub.status.busy": "2025-05-13T07:58:46.965860Z",
     "iopub.status.idle": "2025-05-13T07:58:46.972051Z",
     "shell.execute_reply": "2025-05-13T07:58:46.971201Z"
    },
    "papermill": {
     "duration": 0.016034,
     "end_time": "2025-05-13T07:58:46.973704",
     "exception": false,
     "start_time": "2025-05-13T07:58:46.957670",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(168747, 3)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xtrain.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "46a7afa6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:46.990039Z",
     "iopub.status.busy": "2025-05-13T07:58:46.989719Z",
     "iopub.status.idle": "2025-05-13T07:58:46.994529Z",
     "shell.execute_reply": "2025-05-13T07:58:46.993317Z"
    },
    "papermill": {
     "duration": 0.015175,
     "end_time": "2025-05-13T07:58:46.996296",
     "exception": false,
     "start_time": "2025-05-13T07:58:46.981121",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# corpus = []\n",
    "# temp = 0\n",
    "\n",
    "# for document in xtrain.combined:\n",
    "#     # word_list = document.split(' ')\n",
    "#     # corpus.extend(word_list)\n",
    "#     print(document)\n",
    "\n",
    "#     if temp == 5:\n",
    "#         break\n",
    "#     temp += 1\n",
    "\n",
    "# # vocabulary = set(corpus)\n",
    "\n",
    "# print(f\"Words in coupus are: {len(corpus):,}\")\n",
    "# print(f\"Total vocabulary: {len(vocabulary):,}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e1027350",
   "metadata": {
    "papermill": {
     "duration": 0.007002,
     "end_time": "2025-05-13T07:58:47.010860",
     "exception": false,
     "start_time": "2025-05-13T07:58:47.003858",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3009b37f",
   "metadata": {
    "papermill": {
     "duration": 0.007107,
     "end_time": "2025-05-13T07:58:47.025188",
     "exception": false,
     "start_time": "2025-05-13T07:58:47.018081",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f95800d0",
   "metadata": {
    "papermill": {
     "duration": 0.007039,
     "end_time": "2025-05-13T07:58:47.039677",
     "exception": false,
     "start_time": "2025-05-13T07:58:47.032638",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3e7a549d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:47.056703Z",
     "iopub.status.busy": "2025-05-13T07:58:47.056316Z",
     "iopub.status.idle": "2025-05-13T07:58:47.061804Z",
     "shell.execute_reply": "2025-05-13T07:58:47.060300Z"
    },
    "papermill": {
     "duration": 0.016054,
     "end_time": "2025-05-13T07:58:47.063842",
     "exception": false,
     "start_time": "2025-05-13T07:58:47.047788",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#             Cheking the proper concatenation of articles and highlights\n",
    "\n",
    "# for i in range(xtrain.shape[0]):\n",
    "#     if xtrain.article[i] not in xtrain.combined[i]:\n",
    "#         print(f\"Article mismatch at {i}\")\n",
    "#     if xtrain.highlights[i] not in xtrain.combined[i]:\n",
    "#         print(f\"Highlights mismatch at {i}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "20f03fa0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:47.080976Z",
     "iopub.status.busy": "2025-05-13T07:58:47.080614Z",
     "iopub.status.idle": "2025-05-13T07:58:47.085120Z",
     "shell.execute_reply": "2025-05-13T07:58:47.084227Z"
    },
    "papermill": {
     "duration": 0.015492,
     "end_time": "2025-05-13T07:58:47.087039",
     "exception": false,
     "start_time": "2025-05-13T07:58:47.071547",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# if 'a' not in 'hjk':\n",
    "#     print(True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "31c5e4e9",
   "metadata": {
    "papermill": {
     "duration": 0.007432,
     "end_time": "2025-05-13T07:58:47.176054",
     "exception": false,
     "start_time": "2025-05-13T07:58:47.168622",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "513d172a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:47.194074Z",
     "iopub.status.busy": "2025-05-13T07:58:47.193715Z",
     "iopub.status.idle": "2025-05-13T07:58:47.199132Z",
     "shell.execute_reply": "2025-05-13T07:58:47.197920Z"
    },
    "papermill": {
     "duration": 0.016487,
     "end_time": "2025-05-13T07:58:47.200972",
     "exception": false,
     "start_time": "2025-05-13T07:58:47.184485",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# total_cnn = 0\n",
    "# total_UPDATED = 0\n",
    "# total_PUBLISHED = 0\n",
    "# total_cnn___ = 0\n",
    "# backslash_n = 0\n",
    "\n",
    "# for article in xtrain.article:\n",
    "#     # total_cnn += article.count('(CNN)')\n",
    "#     # total_UPDATED += article.count('UPDATED')\n",
    "#     # total_PUBLISHED += article.count('PUBLISHED')\n",
    "#     backslash_n += article.count('\\n')\n",
    "\n",
    "# input(\"Stop here: \")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "4a4deae5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:47.218459Z",
     "iopub.status.busy": "2025-05-13T07:58:47.218091Z",
     "iopub.status.idle": "2025-05-13T07:58:47.228837Z",
     "shell.execute_reply": "2025-05-13T07:58:47.227854Z"
    },
    "papermill": {
     "duration": 0.021864,
     "end_time": "2025-05-13T07:58:47.230638",
     "exception": false,
     "start_time": "2025-05-13T07:58:47.208774",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_13/287288976.py:1: FutureWarning: ChainedAssignmentError: behaviour will change in pandas 3.0!\n",
      "You are setting values through chained assignment. Currently this works in certain cases, but when using Copy-on-Write (which will become the default behaviour in pandas 3.0) this will never work to update the original DataFrame or Series, because the intermediate object on which we are setting values will behave as a copy.\n",
      "A typical example is when you are setting values in a column of a DataFrame, like:\n",
      "\n",
      "df[\"col\"][row_indexer] = value\n",
      "\n",
      "Use `df.loc[row_indexer, \"col\"] = values` instead, to perform the assignment in a single step and ensure this keeps updating the original `df`.\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "\n",
      "  xtrain.combined[0] = \"<sos> <eos>\" + xtrain.combined[0]\n"
     ]
    }
   ],
   "source": [
    "xtrain.combined[0] = \"<sos> <eos>\" + xtrain.combined[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "0c91c494",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:47.249535Z",
     "iopub.status.busy": "2025-05-13T07:58:47.249175Z",
     "iopub.status.idle": "2025-05-13T07:58:47.256868Z",
     "shell.execute_reply": "2025-05-13T07:58:47.255698Z"
    },
    "papermill": {
     "duration": 0.019064,
     "end_time": "2025-05-13T07:58:47.258860",
     "exception": false,
     "start_time": "2025-05-13T07:58:47.239796",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\"nina dos santos says europe must be ready to accept sanctions will hurt both sides .targeting russia's business community would be one way of sapping their support for president putin, she says .but she says europe would have a hard time keeping its factories going without power from the east .\""
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xtrain.iloc[2,1]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8d5d03f9",
   "metadata": {
    "papermill": {
     "duration": 0.009338,
     "end_time": "2025-05-13T07:58:47.276680",
     "exception": false,
     "start_time": "2025-05-13T07:58:47.267342",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## <center style=\"padding: 20px 0; color: #fff; background-color: #000;\"> Tokenizing </center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "295a007d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T07:58:47.294133Z",
     "iopub.status.busy": "2025-05-13T07:58:47.293729Z",
     "iopub.status.idle": "2025-05-13T08:00:44.054728Z",
     "shell.execute_reply": "2025-05-13T08:00:44.053474Z"
    },
    "papermill": {
     "duration": 116.772204,
     "end_time": "2025-05-13T08:00:44.057138",
     "exception": false,
     "start_time": "2025-05-13T07:58:47.284934",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "max_words = 50_000\n",
    "\n",
    "tokenizer = Tokenizer(num_words=max_words, oov_token=\"<OOV>\")\n",
    "tokenizer.fit_on_texts(xtrain.combined)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "741e9e73",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T08:00:44.076711Z",
     "iopub.status.busy": "2025-05-13T08:00:44.076342Z",
     "iopub.status.idle": "2025-05-13T08:02:06.401007Z",
     "shell.execute_reply": "2025-05-13T08:02:06.399425Z"
    },
    "papermill": {
     "duration": 82.336576,
     "end_time": "2025-05-13T08:02:06.403089",
     "exception": false,
     "start_time": "2025-05-13T08:00:44.066513",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "input_tokens = tokenizer.texts_to_sequences(xtrain.article)\n",
    "target_tokens = tokenizer.texts_to_sequences(xtrain.highlights)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "cb034c0a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T08:02:06.422673Z",
     "iopub.status.busy": "2025-05-13T08:02:06.422263Z",
     "iopub.status.idle": "2025-05-13T08:02:13.055882Z",
     "shell.execute_reply": "2025-05-13T08:02:13.054194Z"
    },
    "papermill": {
     "duration": 6.645684,
     "end_time": "2025-05-13T08:02:13.057946",
     "exception": false,
     "start_time": "2025-05-13T08:02:06.412262",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "input_sequences = pad_sequences(input_tokens, maxlen=max_words_in_input_sentence, padding='post', truncating='post')\n",
    "target_sequences = pad_sequences(target_tokens, maxlen=max_words_in_target, padding='post', truncating='post')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "08e18b78",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T08:02:13.076293Z",
     "iopub.status.busy": "2025-05-13T08:02:13.075955Z",
     "iopub.status.idle": "2025-05-13T08:02:13.082828Z",
     "shell.execute_reply": "2025-05-13T08:02:13.081683Z"
    },
    "papermill": {
     "duration": 0.018706,
     "end_time": "2025-05-13T08:02:13.085103",
     "exception": false,
     "start_time": "2025-05-13T08:02:13.066397",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((168747, 700), (168747, 150))"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "input_sequences.shape, target_sequences.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8222a7d9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T08:02:13.104296Z",
     "iopub.status.busy": "2025-05-13T08:02:13.103132Z",
     "iopub.status.idle": "2025-05-13T08:02:13.111472Z",
     "shell.execute_reply": "2025-05-13T08:02:13.110472Z"
    },
    "papermill": {
     "duration": 0.020144,
     "end_time": "2025-05-13T08:02:13.113747",
     "exception": false,
     "start_time": "2025-05-13T08:02:13.093603",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "522718"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(tokenizer.word_index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "25232a09",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T08:02:13.134010Z",
     "iopub.status.busy": "2025-05-13T08:02:13.132312Z",
     "iopub.status.idle": "2025-05-13T08:02:13.271930Z",
     "shell.execute_reply": "2025-05-13T08:02:13.270758Z"
    },
    "papermill": {
     "duration": 0.151027,
     "end_time": "2025-05-13T08:02:13.273599",
     "exception": false,
     "start_time": "2025-05-13T08:02:13.122572",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('and', 6),\n",
       " ('in', 7),\n",
       " ('was', 8),\n",
       " ('for', 9),\n",
       " ('on', 10),\n",
       " ('is', 11),\n",
       " ('that', 12),\n",
       " ('with', 13),\n",
       " ('he', 14),\n",
       " ('said', 15),\n",
       " ('his', 16),\n",
       " ('at', 17),\n",
       " ('it', 18),\n",
       " ('as', 19),\n",
       " ('from', 20),\n",
       " ('has', 21),\n",
       " ('by', 22),\n",
       " ('have', 23),\n",
       " ('be', 24),\n",
       " ('her', 25),\n",
       " ('are', 26),\n",
       " ('but', 27),\n",
       " ('an', 28),\n",
       " ('after', 29),\n",
       " ('she', 30),\n",
       " ('who', 31),\n",
       " ('they', 32),\n",
       " ('had', 33),\n",
       " ('been', 34),\n",
       " ('not', 35),\n",
       " ('were', 36),\n",
       " ('this', 37),\n",
       " ('their', 38),\n",
       " (\"'\", 39),\n",
       " ('will', 40),\n",
       " ('i', 41),\n",
       " ('year', 42),\n",
       " ('one', 43),\n",
       " ('when', 44),\n",
       " ('up', 45),\n",
       " ('which', 46),\n",
       " ('out', 47),\n",
       " ('new', 48),\n",
       " ('more', 49),\n",
       " ('two', 50),\n",
       " ('we', 51),\n",
       " ('also', 52),\n",
       " ('about', 53),\n",
       " ('or', 54),\n",
       " ('police', 55),\n",
       " ('last', 56),\n",
       " ('people', 57),\n",
       " ('would', 58),\n",
       " ('him', 59),\n",
       " ('all', 60),\n",
       " ('into', 61),\n",
       " ('time', 62),\n",
       " ('over', 63),\n",
       " ('told', 64),\n",
       " ('than', 65),\n",
       " ('you', 66),\n",
       " ('first', 67),\n",
       " ('old', 68),\n",
       " ('can', 69),\n",
       " ('just', 70),\n",
       " ('years', 71),\n",
       " ('there', 72),\n",
       " ('its', 73),\n",
       " ('so', 74),\n",
       " ('no', 75),\n",
       " ('before', 76),\n",
       " ('could', 77),\n",
       " ('them', 78),\n",
       " ('being', 79),\n",
       " ('now', 80),\n",
       " ('home', 81),\n",
       " ('down', 82),\n",
       " ('mr', 83),\n",
       " ('three', 84),\n",
       " ('other', 85),\n",
       " ('if', 86),\n",
       " ('000', 87),\n",
       " ('while', 88),\n",
       " ('what', 89),\n",
       " ('back', 90),\n",
       " ('says', 91),\n",
       " ('some', 92),\n",
       " ('found', 93),\n",
       " ('off', 94),\n",
       " ('left', 95),\n",
       " ('world', 96),\n",
       " ('’', 97),\n",
       " ('during', 98),\n",
       " ('like', 99),\n",
       " ('against', 100),\n",
       " ('only', 101),\n",
       " ('my', 102),\n",
       " ('made', 103),\n",
       " ('because', 104),\n",
       " ('where', 105),\n",
       " ('day', 106),\n",
       " ('according', 107),\n",
       " ('then', 108),\n",
       " ('1', 109),\n",
       " ('family', 110),\n",
       " ('man', 111),\n",
       " ('get', 112),\n",
       " ('court', 113),\n",
       " ('do', 114),\n",
       " ('most', 115),\n",
       " ('our', 116),\n",
       " ('u', 117),\n",
       " ('since', 118),\n",
       " ('video', 119),\n",
       " ('around', 120),\n",
       " ('right', 121),\n",
       " ('s', 122),\n",
       " ('say', 123),\n",
       " ('may', 124),\n",
       " ('how', 125),\n",
       " ('four', 126),\n",
       " ('week', 127),\n",
       " ('city', 128),\n",
       " (\"it's\", 129),\n",
       " ('former', 130),\n",
       " ('make', 131),\n",
       " ('through', 132),\n",
       " ('very', 133),\n",
       " ('team', 134),\n",
       " ('any', 135),\n",
       " ('take', 136),\n",
       " ('many', 137),\n",
       " ('life', 138),\n",
       " ('children', 139),\n",
       " ('me', 140),\n",
       " (\"'i\", 141),\n",
       " ('per', 142),\n",
       " ('well', 143),\n",
       " ('under', 144),\n",
       " ('even', 145),\n",
       " ('way', 146),\n",
       " ('did', 147),\n",
       " ('united', 148),\n",
       " ('work', 149),\n",
       " ('still', 150),\n",
       " ('state', 151),\n",
       " ('2', 152),\n",
       " ('between', 153),\n",
       " ('those', 154),\n",
       " ('five', 155),\n",
       " ('second', 156),\n",
       " ('another', 157),\n",
       " ('government', 158),\n",
       " ('school', 159),\n",
       " ('called', 160),\n",
       " ('used', 161),\n",
       " ('see', 162),\n",
       " ('including', 163),\n",
       " ('show', 164),\n",
       " ('high', 165),\n",
       " ('next', 166),\n",
       " ('took', 167),\n",
       " ('house', 168),\n",
       " ('month', 169),\n",
       " ('president', 170),\n",
       " ('go', 171),\n",
       " ('going', 172),\n",
       " ('part', 173),\n",
       " ('us', 174),\n",
       " ('such', 175),\n",
       " ('death', 176),\n",
       " ('car', 177),\n",
       " ('long', 178),\n",
       " ('set', 179),\n",
       " ('group', 180),\n",
       " ('should', 181),\n",
       " ('report', 182),\n",
       " ('night', 183),\n",
       " ('both', 184),\n",
       " ('hospital', 185),\n",
       " ('cent', 186),\n",
       " ('season', 187),\n",
       " ('million', 188),\n",
       " ('help', 189),\n",
       " ('league', 190),\n",
       " ('mother', 191),\n",
       " ('added', 192),\n",
       " ('10', 193),\n",
       " ('later', 194),\n",
       " ('pictured', 195),\n",
       " ('your', 196),\n",
       " ('think', 197),\n",
       " ('top', 198),\n",
       " ('taken', 199),\n",
       " ('news', 200),\n",
       " ('–', 201),\n",
       " ('days', 202),\n",
       " ('women', 203),\n",
       " ('seen', 204),\n",
       " ('good', 205),\n",
       " ('these', 206),\n",
       " ('south', 207),\n",
       " ('know', 208),\n",
       " ('place', 209),\n",
       " ('much', 210),\n",
       " ('london', 211),\n",
       " ('months', 212),\n",
       " ('away', 213),\n",
       " ('six', 214),\n",
       " ('want', 215),\n",
       " ('died', 216),\n",
       " ('public', 217),\n",
       " ('woman', 218),\n",
       " ('game', 219),\n",
       " ('3', 220),\n",
       " ('reported', 221),\n",
       " ('got', 222),\n",
       " (\"'the\", 223),\n",
       " ('same', 224),\n",
       " ('put', 225),\n",
       " ('men', 226),\n",
       " ('came', 227),\n",
       " ('country', 228),\n",
       " ('times', 229),\n",
       " ('national', 230),\n",
       " ('went', 231),\n",
       " ('case', 232),\n",
       " ('killed', 233),\n",
       " ('cup', 234),\n",
       " ('own', 235),\n",
       " ('head', 236),\n",
       " ('come', 237),\n",
       " ('number', 238),\n",
       " ('young', 239),\n",
       " ('club', 240),\n",
       " ('side', 241),\n",
       " ('face', 242),\n",
       " ('officials', 243),\n",
       " ('best', 244),\n",
       " ('use', 245),\n",
       " ('never', 246),\n",
       " ('end', 247),\n",
       " ('sunday', 248),\n",
       " ('today', 249),\n",
       " ('following', 250),\n",
       " ('5', 251),\n",
       " ('monday', 252),\n",
       " ('20', 253),\n",
       " ('york', 254),\n",
       " ('international', 255),\n",
       " ('north', 256),\n",
       " ('statement', 257),\n",
       " ('win', 258),\n",
       " ('west', 259),\n",
       " ('british', 260),\n",
       " ('company', 261),\n",
       " ('tuesday', 262),\n",
       " ('wife', 263),\n",
       " ('friday', 264),\n",
       " ('health', 265),\n",
       " ('6', 266),\n",
       " ('half', 267),\n",
       " ('authorities', 268),\n",
       " ('england', 269),\n",
       " ('however', 270),\n",
       " ('having', 271),\n",
       " ('cnn', 272),\n",
       " ('until', 273),\n",
       " ('known', 274),\n",
       " ('arrested', 275),\n",
       " ('4', 276),\n",
       " ('too', 277),\n",
       " ('saturday', 278),\n",
       " ('body', 279),\n",
       " ('each', 280),\n",
       " ('money', 281),\n",
       " ('here', 282),\n",
       " (\"don't\", 283),\n",
       " ('hours', 284),\n",
       " ('play', 285),\n",
       " ('really', 286),\n",
       " ('without', 287),\n",
       " ('attack', 288),\n",
       " ('security', 289),\n",
       " ('child', 290),\n",
       " ('father', 291),\n",
       " ('every', 292),\n",
       " ('wednesday', 293),\n",
       " ('hit', 294),\n",
       " ('near', 295),\n",
       " ('area', 296),\n",
       " ('asked', 297),\n",
       " ('look', 298),\n",
       " ('need', 299),\n",
       " ('office', 300),\n",
       " ('spokesman', 301),\n",
       " ('incident', 302),\n",
       " (\"'we\", 303),\n",
       " ('local', 304),\n",
       " ('states', 305),\n",
       " ('manchester', 306),\n",
       " ('given', 307),\n",
       " ('thursday', 308),\n",
       " ('scroll', 309),\n",
       " ('30', 310),\n",
       " ('great', 311),\n",
       " ('earlier', 312),\n",
       " ('thought', 313),\n",
       " ('saying', 314),\n",
       " ('son', 315),\n",
       " ('uk', 316),\n",
       " ('ago', 317),\n",
       " ('12', 318),\n",
       " ('university', 319),\n",
       " ('little', 320),\n",
       " ('shot', 321),\n",
       " ('water', 322),\n",
       " ('across', 323),\n",
       " ('star', 324),\n",
       " ('officers', 325),\n",
       " ('using', 326),\n",
       " ('several', 327),\n",
       " ('released', 328),\n",
       " ('american', 329),\n",
       " ('move', 330),\n",
       " ('final', 331),\n",
       " ('fire', 332),\n",
       " ('taking', 333),\n",
       " ('despite', 334),\n",
       " ('service', 335),\n",
       " ('behind', 336),\n",
       " ('already', 337),\n",
       " ('real', 338),\n",
       " ('big', 339),\n",
       " ('white', 340),\n",
       " ('law', 341),\n",
       " ('players', 342),\n",
       " ('david', 343),\n",
       " ('15', 344),\n",
       " ('able', 345),\n",
       " ('find', 346),\n",
       " ('run', 347),\n",
       " ('park', 348),\n",
       " ('early', 349),\n",
       " ('working', 350),\n",
       " ('support', 351),\n",
       " ('members', 352),\n",
       " ('2012', 353),\n",
       " ('making', 354),\n",
       " ('third', 355),\n",
       " ('match', 356),\n",
       " ('claims', 357),\n",
       " ('party', 358),\n",
       " ('again', 359),\n",
       " ('past', 360),\n",
       " ('outside', 361),\n",
       " ('friends', 362),\n",
       " ('lost', 363),\n",
       " ('few', 364),\n",
       " ('shows', 365),\n",
       " ('department', 366),\n",
       " ('open', 367),\n",
       " ('believe', 368),\n",
       " ('looking', 369),\n",
       " ('media', 370),\n",
       " ('weeks', 371),\n",
       " ('minister', 372),\n",
       " ('investigation', 373),\n",
       " ('official', 374),\n",
       " ('daughter', 375),\n",
       " ('charged', 376),\n",
       " ('among', 377),\n",
       " ('air', 378),\n",
       " ('least', 379),\n",
       " ('couple', 380),\n",
       " ('far', 381),\n",
       " ('won', 382),\n",
       " ('staff', 383),\n",
       " ('started', 384),\n",
       " ('minutes', 385),\n",
       " ('charges', 386),\n",
       " ('food', 387),\n",
       " ('something', 388),\n",
       " ('seven', 389),\n",
       " ('military', 390),\n",
       " ('parents', 391),\n",
       " (\"didn't\", 392),\n",
       " ('held', 393),\n",
       " ('whether', 394),\n",
       " ('ms', 395),\n",
       " ('based', 396),\n",
       " ('john', 397),\n",
       " ('11', 398),\n",
       " ('dead', 399),\n",
       " ('heard', 400),\n",
       " ('free', 401),\n",
       " ('morning', 402),\n",
       " ('give', 403),\n",
       " ('accused', 404),\n",
       " ('facebook', 405),\n",
       " ('start', 406),\n",
       " ('become', 407),\n",
       " ('county', 408),\n",
       " ('manager', 409),\n",
       " ('7', 410),\n",
       " ('judge', 411),\n",
       " ('close', 412),\n",
       " ('2011', 413),\n",
       " ('saw', 414),\n",
       " ('lot', 415),\n",
       " ('revealed', 416),\n",
       " ('full', 417),\n",
       " ('claimed', 418),\n",
       " ('miss', 419),\n",
       " ('wanted', 420),\n",
       " ('fans', 421),\n",
       " ('games', 422),\n",
       " ('information', 423),\n",
       " ('pay', 424),\n",
       " ('front', 425),\n",
       " ('eight', 426),\n",
       " ('due', 427),\n",
       " ('trying', 428),\n",
       " ('expected', 429),\n",
       " ('street', 430),\n",
       " ('always', 431),\n",
       " ('once', 432),\n",
       " ('al', 433),\n",
       " ('name', 434),\n",
       " ('deal', 435),\n",
       " ('obama', 436),\n",
       " ('football', 437),\n",
       " ('black', 438),\n",
       " ('sex', 439),\n",
       " ('girl', 440),\n",
       " ('0', 441),\n",
       " ('prison', 442),\n",
       " ('care', 443),\n",
       " ('ever', 444),\n",
       " ('chief', 445),\n",
       " ('18', 446),\n",
       " ('officer', 447),\n",
       " ('decision', 448),\n",
       " ('better', 449),\n",
       " ('himself', 450),\n",
       " ('live', 451),\n",
       " ('war', 452),\n",
       " ('sent', 453),\n",
       " ('love', 454),\n",
       " ('call', 455),\n",
       " ('keep', 456),\n",
       " (\"'it\", 457),\n",
       " ('online', 458),\n",
       " ('record', 459),\n",
       " ('husband', 460),\n",
       " ('medical', 461),\n",
       " ('campaign', 462),\n",
       " ('reports', 463),\n",
       " ('played', 464),\n",
       " ('site', 465),\n",
       " ('along', 466),\n",
       " ('less', 467),\n",
       " ('others', 468),\n",
       " (\"i'm\", 469),\n",
       " ('comes', 470),\n",
       " ('return', 471),\n",
       " ('road', 472),\n",
       " ('scene', 473),\n",
       " ('wrote', 474),\n",
       " ('system', 475),\n",
       " ('social', 476),\n",
       " ('began', 477),\n",
       " ('recent', 478),\n",
       " ('almost', 479),\n",
       " ('inside', 480),\n",
       " ('different', 481),\n",
       " ('point', 482),\n",
       " ('phone', 483),\n",
       " ('post', 484),\n",
       " ('does', 485),\n",
       " ('premier', 486),\n",
       " ('together', 487),\n",
       " ('why', 488),\n",
       " ('red', 489),\n",
       " ('16', 490),\n",
       " ('change', 491),\n",
       " ('yet', 492),\n",
       " ('25', 493),\n",
       " ('watch', 494),\n",
       " ('business', 495),\n",
       " ('must', 496),\n",
       " ('training', 497),\n",
       " ('january', 498),\n",
       " ('boy', 499),\n",
       " ('late', 500),\n",
       " ('murder', 501),\n",
       " ('am', 502),\n",
       " ('likely', 503),\n",
       " ('player', 504),\n",
       " ('led', 505),\n",
       " ('might', 506),\n",
       " ('twitter', 507),\n",
       " ('person', 508),\n",
       " ('website', 509),\n",
       " ('50', 510),\n",
       " ('ahead', 511),\n",
       " ('job', 512),\n",
       " ('baby', 513),\n",
       " ('stop', 514),\n",
       " ('mrs', 515),\n",
       " ('small', 516),\n",
       " ('received', 517),\n",
       " ('director', 518),\n",
       " ('getting', 519),\n",
       " ('became', 520),\n",
       " ('2010', 521),\n",
       " ('believed', 522),\n",
       " ('age', 523),\n",
       " ('michael', 524),\n",
       " ('action', 525),\n",
       " ('goal', 526),\n",
       " ('centre', 527),\n",
       " ('100', 528),\n",
       " ('summer', 529),\n",
       " ('things', 530),\n",
       " ('friend', 531),\n",
       " ('allegedly', 532),\n",
       " ('study', 533),\n",
       " ('8', 534),\n",
       " ('spent', 535),\n",
       " ('tv', 536),\n",
       " ('14', 537),\n",
       " ('tried', 538),\n",
       " ('enough', 539),\n",
       " ('though', 540),\n",
       " ('leave', 541),\n",
       " ('happened', 542),\n",
       " ('lead', 543),\n",
       " ('series', 544),\n",
       " ('line', 545),\n",
       " ('playing', 546),\n",
       " ('2013', 547),\n",
       " ('east', 548),\n",
       " ('flight', 549),\n",
       " ('rights', 550),\n",
       " ('involved', 551),\n",
       " ('dr', 552),\n",
       " ('clear', 553),\n",
       " ('room', 554),\n",
       " ('control', 555),\n",
       " ('further', 556),\n",
       " ('human', 557),\n",
       " ('admitted', 558),\n",
       " ('drug', 559),\n",
       " ('power', 560),\n",
       " ('liverpool', 561),\n",
       " ('trial', 562),\n",
       " ('currently', 563),\n",
       " ('chelsea', 564),\n",
       " ('posted', 565),\n",
       " ('major', 566),\n",
       " ('hard', 567),\n",
       " ('nearly', 568),\n",
       " ('council', 569),\n",
       " ('forward', 570),\n",
       " ('yesterday', 571),\n",
       " ('research', 572),\n",
       " ('described', 573),\n",
       " ('13', 574),\n",
       " ('dog', 575),\n",
       " ('evidence', 576),\n",
       " ('students', 577),\n",
       " ('september', 578),\n",
       " ('24', 579),\n",
       " ('event', 580),\n",
       " ('van', 581),\n",
       " ('film', 582),\n",
       " ('feel', 583),\n",
       " ('announced', 584),\n",
       " ('appeared', 585),\n",
       " ('future', 586),\n",
       " ('gave', 587),\n",
       " ('doing', 588),\n",
       " (\"that's\", 589),\n",
       " ('order', 590),\n",
       " ('guilty', 591),\n",
       " ('within', 592),\n",
       " ('hand', 593),\n",
       " ('agency', 594),\n",
       " ('december', 595),\n",
       " ('large', 596),\n",
       " ('center', 597),\n",
       " ('done', 598),\n",
       " ('building', 599),\n",
       " ('force', 600),\n",
       " ('june', 601),\n",
       " ('safety', 602),\n",
       " ('picture', 603),\n",
       " ('turned', 604),\n",
       " ('community', 605),\n",
       " ('march', 606),\n",
       " ('miles', 607),\n",
       " ('9', 608),\n",
       " ('17', 609),\n",
       " ('california', 610),\n",
       " ('hope', 611),\n",
       " ('european', 612),\n",
       " (\"he's\", 613),\n",
       " ('ground', 614),\n",
       " ('although', 615),\n",
       " ('lives', 616),\n",
       " ('french', 617),\n",
       " ('student', 618),\n",
       " ('fight', 619),\n",
       " ('forced', 620),\n",
       " ('living', 621),\n",
       " ('named', 622),\n",
       " ('heart', 623),\n",
       " ('40', 624),\n",
       " ('town', 625),\n",
       " ('nine', 626),\n",
       " ('federal', 627),\n",
       " ('cancer', 628),\n",
       " ('general', 629),\n",
       " ('james', 630),\n",
       " ('china', 631),\n",
       " ('plans', 632),\n",
       " ('caused', 633),\n",
       " ('july', 634),\n",
       " ('november', 635),\n",
       " ('latest', 636),\n",
       " ('leader', 637),\n",
       " ('‘i', 638),\n",
       " ('often', 639),\n",
       " ('showed', 640),\n",
       " ('missing', 641),\n",
       " ('injury', 642),\n",
       " ('suffered', 643),\n",
       " ('risk', 644),\n",
       " ('recently', 645),\n",
       " ('october', 646),\n",
       " ('treatment', 647),\n",
       " ('injuries', 648),\n",
       " ('prime', 649),\n",
       " ('mark', 650),\n",
       " ('possible', 651),\n",
       " ('important', 652),\n",
       " ('history', 653),\n",
       " ('legal', 654),\n",
       " ('cost', 655),\n",
       " ('try', 656),\n",
       " ('alleged', 657),\n",
       " ('injured', 658),\n",
       " ('washington', 659),\n",
       " ('coming', 660),\n",
       " ('driver', 661),\n",
       " ('airport', 662),\n",
       " ('christmas', 663),\n",
       " ('discovered', 664),\n",
       " ('born', 665),\n",
       " ('hotel', 666),\n",
       " ('august', 667),\n",
       " ('round', 668),\n",
       " ('april', 669),\n",
       " ('points', 670),\n",
       " ('pair', 671),\n",
       " ('popular', 672),\n",
       " ('victim', 673),\n",
       " ('role', 674),\n",
       " ('champions', 675),\n",
       " ('driving', 676),\n",
       " ('thing', 677),\n",
       " ('station', 678),\n",
       " ('continue', 679),\n",
       " ('worked', 680),\n",
       " ('career', 681),\n",
       " ('royal', 682),\n",
       " (\"cnn's\", 683),\n",
       " ('caught', 684),\n",
       " ('2009', 685),\n",
       " ('charge', 686),\n",
       " ('paid', 687),\n",
       " ('member', 688),\n",
       " ('space', 689),\n",
       " ('com', 690),\n",
       " ('victory', 691),\n",
       " ('19', 692),\n",
       " ('21', 693),\n",
       " ('happy', 694),\n",
       " ('services', 695),\n",
       " ('met', 696),\n",
       " ('britain', 697),\n",
       " ('include', 698),\n",
       " ('political', 699),\n",
       " ('cut', 700),\n",
       " ('crime', 701),\n",
       " ('bill', 702),\n",
       " ('light', 703),\n",
       " ('daily', 704),\n",
       " ('above', 705),\n",
       " ('someone', 706),\n",
       " ('thousands', 707),\n",
       " ('france', 708),\n",
       " ('countries', 709),\n",
       " ('failed', 710),\n",
       " ('australia', 711),\n",
       " ('arsenal', 712),\n",
       " ('property', 713),\n",
       " ('sexual', 714),\n",
       " ('comments', 715),\n",
       " ('decided', 716),\n",
       " ('race', 717),\n",
       " ('forces', 718),\n",
       " ('hour', 719),\n",
       " ('confirmed', 720),\n",
       " ('22', 721),\n",
       " ('level', 722),\n",
       " ('st', 723),\n",
       " ('claim', 724),\n",
       " ('soon', 725),\n",
       " ('result', 726),\n",
       " ('secretary', 727),\n",
       " ('running', 728),\n",
       " ('special', 729),\n",
       " ('board', 730),\n",
       " ('whose', 731),\n",
       " ('owner', 732),\n",
       " ('story', 733),\n",
       " ('cause', 734),\n",
       " ('plane', 735),\n",
       " ('problem', 736),\n",
       " ('page', 737),\n",
       " ('serious', 738),\n",
       " ('looked', 739),\n",
       " ('remains', 740),\n",
       " ('scored', 741),\n",
       " ('release', 742),\n",
       " ('workers', 743),\n",
       " ('images', 744),\n",
       " ('victims', 745),\n",
       " ('read', 746),\n",
       " ('attorney', 747),\n",
       " ('course', 748),\n",
       " ('instead', 749),\n",
       " ('stay', 750),\n",
       " ('moment', 751),\n",
       " ('de', 752),\n",
       " ('search', 753),\n",
       " ('leaving', 754),\n",
       " ('moved', 755),\n",
       " ('problems', 756),\n",
       " ('co', 757),\n",
       " ('test', 758),\n",
       " (\"'he\", 759),\n",
       " ('capital', 760),\n",
       " ('similar', 761),\n",
       " ('contributed', 762),\n",
       " ('crash', 763),\n",
       " ('break', 764),\n",
       " ('attacks', 765),\n",
       " ('sure', 766),\n",
       " ('goals', 767),\n",
       " ('february', 768),\n",
       " ('camera', 769),\n",
       " ('weekend', 770),\n",
       " ('justice', 771),\n",
       " ('list', 772),\n",
       " ('private', 773),\n",
       " ('striker', 774),\n",
       " ('‘the', 775),\n",
       " ('m', 776),\n",
       " ('available', 777),\n",
       " ('sold', 778),\n",
       " ('brought', 779),\n",
       " ('2008', 780),\n",
       " ('anything', 781),\n",
       " ('anyone', 782),\n",
       " ('photo', 783),\n",
       " ('form', 784),\n",
       " ('nothing', 785),\n",
       " ('condition', 786),\n",
       " ('issue', 787),\n",
       " ('brother', 788),\n",
       " ('chance', 789),\n",
       " ('jail', 790),\n",
       " ('florida', 791),\n",
       " ('it’s', 792),\n",
       " ('coach', 793),\n",
       " ('violence', 794),\n",
       " ('wearing', 795),\n",
       " ('500', 796),\n",
       " ('visit', 797),\n",
       " ('foreign', 798),\n",
       " ('wants', 799),\n",
       " ('title', 800),\n",
       " ('fact', 801),\n",
       " ('winning', 802),\n",
       " ('beat', 803),\n",
       " ('girls', 804),\n",
       " ('book', 805),\n",
       " ('hearing', 806),\n",
       " ('means', 807),\n",
       " ('district', 808),\n",
       " ('paul', 809),\n",
       " ('arrived', 810),\n",
       " ('huge', 811),\n",
       " ('term', 812),\n",
       " ('returned', 813),\n",
       " ('act', 814),\n",
       " ('23', 815),\n",
       " ('central', 816),\n",
       " ('cases', 817),\n",
       " ('looks', 818),\n",
       " ('shooting', 819),\n",
       " ('store', 820),\n",
       " ('pictures', 821),\n",
       " ('short', 822),\n",
       " ('bank', 823),\n",
       " ('patients', 824),\n",
       " ('coast', 825),\n",
       " ('island', 826),\n",
       " ('killing', 827),\n",
       " ('let', 828),\n",
       " ('users', 829),\n",
       " ('comment', 830),\n",
       " ('animal', 831),\n",
       " ('vehicle', 832),\n",
       " ('allowed', 833),\n",
       " ('families', 834),\n",
       " ('image', 835),\n",
       " ('minute', 836),\n",
       " ('doctors', 837),\n",
       " ('market', 838),\n",
       " ('strong', 839),\n",
       " ('blood', 840),\n",
       " ('ball', 841),\n",
       " (\"can't\", 842),\n",
       " ('price', 843),\n",
       " ('created', 844),\n",
       " ('tour', 845),\n",
       " ('range', 846),\n",
       " ('current', 847),\n",
       " ('average', 848),\n",
       " ('bit', 849),\n",
       " ('passengers', 850),\n",
       " ('plan', 851),\n",
       " ('sign', 852),\n",
       " ('madrid', 853),\n",
       " ('middle', 854),\n",
       " ('launched', 855),\n",
       " ('arrest', 856),\n",
       " ('makes', 857),\n",
       " ('press', 858),\n",
       " ('2014', 859),\n",
       " ('boss', 860),\n",
       " ('previous', 861),\n",
       " ('gone', 862),\n",
       " ('australian', 863),\n",
       " ('accident', 864),\n",
       " ('needed', 865),\n",
       " ('gun', 866),\n",
       " ('26', 867),\n",
       " ('leading', 868),\n",
       " ('abuse', 869),\n",
       " ('message', 870),\n",
       " ('emergency', 871),\n",
       " ('bad', 872),\n",
       " ('experience', 873),\n",
       " ('difficult', 874),\n",
       " ('married', 875),\n",
       " ('interview', 876),\n",
       " ('helped', 877),\n",
       " ('themselves', 878),\n",
       " ('female', 879),\n",
       " ('assault', 880),\n",
       " ('worth', 881),\n",
       " ('senior', 882),\n",
       " ('feet', 883),\n",
       " ('rather', 884),\n",
       " ('drugs', 885),\n",
       " ('fell', 886),\n",
       " ('residents', 887),\n",
       " ('hands', 888),\n",
       " ('bring', 889),\n",
       " ('meeting', 890),\n",
       " ('criminal', 891),\n",
       " ('brown', 892),\n",
       " ('disease', 893),\n",
       " ('model', 894),\n",
       " ('travel', 895),\n",
       " ('process', 896),\n",
       " ('27', 897),\n",
       " (\"doesn't\", 898),\n",
       " ('turn', 899),\n",
       " ('e', 900),\n",
       " ('areas', 901),\n",
       " ('low', 902),\n",
       " ('church', 903),\n",
       " ('george', 904),\n",
       " ('previously', 905),\n",
       " ('internet', 906),\n",
       " ('everything', 907),\n",
       " ('beach', 908),\n",
       " ('relationship', 909),\n",
       " ('included', 910),\n",
       " ('customers', 911),\n",
       " ('speaking', 912),\n",
       " ('sentence', 913),\n",
       " ('grand', 914),\n",
       " ('chinese', 915),\n",
       " ('photos', 916),\n",
       " ('28', 917),\n",
       " ('calls', 918),\n",
       " ('felt', 919),\n",
       " ('africa', 920),\n",
       " (\"'this\", 921),\n",
       " ('takes', 922),\n",
       " ('music', 923),\n",
       " ('percent', 924),\n",
       " ('key', 925),\n",
       " ('english', 926),\n",
       " ('believes', 927),\n",
       " ('squad', 928),\n",
       " ('russian', 929),\n",
       " ('executive', 930),\n",
       " ('idea', 931),\n",
       " ('immediately', 932),\n",
       " ('army', 933),\n",
       " ('operation', 934),\n",
       " ('single', 935),\n",
       " ('stage', 936),\n",
       " ('san', 937),\n",
       " ('total', 938),\n",
       " ('personal', 939),\n",
       " ('ten', 940),\n",
       " ('defense', 941),\n",
       " ('situation', 942),\n",
       " ('captain', 943),\n",
       " ('america', 944),\n",
       " (\"wasn't\", 945),\n",
       " ('everyone', 946),\n",
       " ('tax', 947),\n",
       " ('germany', 948),\n",
       " ('election', 949),\n",
       " ('trip', 950),\n",
       " ('texas', 951),\n",
       " ('europe', 952),\n",
       " ('sea', 953),\n",
       " ('mail', 954),\n",
       " ('tell', 955),\n",
       " ('knew', 956),\n",
       " ('longer', 957),\n",
       " ('signed', 958),\n",
       " ('kind', 959),\n",
       " ('provide', 960),\n",
       " ('joined', 961),\n",
       " ('technology', 962),\n",
       " ('carried', 963),\n",
       " ('actually', 964),\n",
       " ('los', 965),\n",
       " ('program', 966),\n",
       " ('kept', 967),\n",
       " ('anti', 968),\n",
       " ('wrong', 969),\n",
       " ('convicted', 970),\n",
       " ('region', 971),\n",
       " ('account', 972),\n",
       " ('warned', 973),\n",
       " ('published', 974),\n",
       " ('bbc', 975),\n",
       " ('biggest', 976),\n",
       " ('remain', 977),\n",
       " ('data', 978),\n",
       " ('researchers', 979),\n",
       " ('2007', 980),\n",
       " ('door', 981),\n",
       " ('green', 982),\n",
       " ('smith', 983),\n",
       " ('train', 984),\n",
       " ('opening', 985),\n",
       " ('animals', 986),\n",
       " ('homes', 987),\n",
       " ('cannot', 988),\n",
       " ('project', 989),\n",
       " ('northern', 990),\n",
       " ('policy', 991),\n",
       " ('letter', 992),\n",
       " ('prince', 993),\n",
       " ('footage', 994),\n",
       " ('reportedly', 995),\n",
       " ('hold', 996),\n",
       " ('damage', 997),\n",
       " ('rest', 998),\n",
       " ('groups', 999),\n",
       " ('surgery', 1000),\n",
       " ('hundreds', 1001),\n",
       " ('german', 1002),\n",
       " ('200', 1003),\n",
       " ('king', 1004),\n",
       " ('hair', 1005),\n",
       " ...]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list(tokenizer.word_index.items())[5:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92092522",
   "metadata": {
    "papermill": {
     "duration": 0.008408,
     "end_time": "2025-05-13T08:02:13.291461",
     "exception": false,
     "start_time": "2025-05-13T08:02:13.283053",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Replacing padded token IDs with `-100` in target tokens"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "7eb838ef",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T08:02:13.310420Z",
     "iopub.status.busy": "2025-05-13T08:02:13.310030Z",
     "iopub.status.idle": "2025-05-13T08:02:13.314533Z",
     "shell.execute_reply": "2025-05-13T08:02:13.313474Z"
    },
    "papermill": {
     "duration": 0.015862,
     "end_time": "2025-05-13T08:02:13.316120",
     "exception": false,
     "start_time": "2025-05-13T08:02:13.300258",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# updated_target_sequences = [[ element if element != 0 else -100 for element in token] for token in target_sequences]\n",
    "# updated_target_sequences = np.array(updated_target_sequences)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "4dd59a48",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T08:02:13.339297Z",
     "iopub.status.busy": "2025-05-13T08:02:13.337879Z",
     "iopub.status.idle": "2025-05-13T08:02:14.393513Z",
     "shell.execute_reply": "2025-05-13T08:02:14.392269Z"
    },
    "papermill": {
     "duration": 1.069689,
     "end_time": "2025-05-13T08:02:14.395477",
     "exception": false,
     "start_time": "2025-05-13T08:02:13.325788",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "118122900"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(input_sequences.astype('int32') == input_sequences.astype('int64')).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "bbacac06",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T08:02:14.417345Z",
     "iopub.status.busy": "2025-05-13T08:02:14.416710Z",
     "iopub.status.idle": "2025-05-13T08:02:14.594235Z",
     "shell.execute_reply": "2025-05-13T08:02:14.593147Z"
    },
    "papermill": {
     "duration": 0.190754,
     "end_time": "2025-05-13T08:02:14.595927",
     "exception": false,
     "start_time": "2025-05-13T08:02:14.405173",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "input_sequences = input_sequences.astype('int32')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "041d8085",
   "metadata": {
    "papermill": {
     "duration": 0.009218,
     "end_time": "2025-05-13T08:02:14.614985",
     "exception": false,
     "start_time": "2025-05-13T08:02:14.605767",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## <center style=\"padding: 20px 0; color: #fff; background-color: #000;\"> Saving Files </center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "3c9ae3cf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T08:02:14.636518Z",
     "iopub.status.busy": "2025-05-13T08:02:14.635312Z",
     "iopub.status.idle": "2025-05-13T08:02:16.554845Z",
     "shell.execute_reply": "2025-05-13T08:02:16.553658Z"
    },
    "papermill": {
     "duration": 1.932527,
     "end_time": "2025-05-13T08:02:16.556854",
     "exception": false,
     "start_time": "2025-05-13T08:02:14.624327",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pickle \n",
    "\n",
    "pickle.dump(tokenizer, open(f'tokenizer_{max_words}.pkl', 'wb'))\n",
    "pickle.dump(input_sequences, open(f'input_sequences.pkl', 'wb'))\n",
    "pickle.dump(target_sequences, open(f'target_sequences.pkl', 'wb'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "aaac5a66",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T08:02:16.576498Z",
     "iopub.status.busy": "2025-05-13T08:02:16.576090Z",
     "iopub.status.idle": "2025-05-13T08:02:16.756581Z",
     "shell.execute_reply": "2025-05-13T08:02:16.755606Z"
    },
    "papermill": {
     "duration": 0.192173,
     "end_time": "2025-05-13T08:02:16.758292",
     "exception": false,
     "start_time": "2025-05-13T08:02:16.566119",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "450.6031036376953"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "input_sequences.astype('int32').nbytes / 1024 / 1024"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "245731d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-13T08:02:16.778093Z",
     "iopub.status.busy": "2025-05-13T08:02:16.777667Z",
     "iopub.status.idle": "2025-05-13T08:02:16.786344Z",
     "shell.execute_reply": "2025-05-13T08:02:16.785347Z"
    },
    "papermill": {
     "duration": 0.020729,
     "end_time": "2025-05-13T08:02:16.788210",
     "exception": false,
     "start_time": "2025-05-13T08:02:16.767481",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         <sos> <eos> the bishop of the fargo catholic d...\n",
       "1          Ralph Mata was an internal affairs lieutenant...\n",
       "3          With a breezy sweep of his pen President Vlad...\n",
       "4         Fleetwood are the only team still to have a 10...\n",
       "5         He's been accused of making many a fashion fau...\n",
       "                                ...                        \n",
       "287102    Real Madrid are looking to extend their 21-gam...\n",
       "287104     officials in a popular resort city in new jer...\n",
       "287105     The plight of a 10-year-old Pennsylvania girl...\n",
       "287106    Australia was settled by a wave of immigrants ...\n",
       "287108     former first daughter chelsea clinton has ind...\n",
       "Name: combined, Length: 168747, dtype: object"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xtrain.combined"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "946c611f",
   "metadata": {
    "papermill": {
     "duration": 0.009503,
     "end_time": "2025-05-13T08:02:16.807297",
     "exception": false,
     "start_time": "2025-05-13T08:02:16.797794",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 1654566,
     "sourceId": 2734496,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31012,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 322.962383,
   "end_time": "2025-05-13T08:02:20.140339",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-05-13T07:56:57.177956",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
