{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "b772b7cb",
   "metadata": {
    "papermill": {
     "duration": 0.005466,
     "end_time": "2024-11-23T00:05:08.664048",
     "exception": false,
     "start_time": "2024-11-23T00:05:08.658582",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Importing useful codes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fac6f085",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:08.675701Z",
     "iopub.status.busy": "2024-11-23T00:05:08.675275Z",
     "iopub.status.idle": "2024-11-23T00:05:25.173932Z",
     "shell.execute_reply": "2024-11-23T00:05:25.172212Z"
    },
    "papermill": {
     "duration": 16.508239,
     "end_time": "2024-11-23T00:05:25.177518",
     "exception": false,
     "start_time": "2024-11-23T00:05:08.669279",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/plant-health-data/plant_health_data.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "from sklearn.preprocessing import LabelEncoder, StandardScaler\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "from tensorflow import keras\n",
    "from tensorflow.keras import Sequential\n",
    "from tensorflow.keras.layers import Dense\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ae815a9d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.189443Z",
     "iopub.status.busy": "2024-11-23T00:05:25.188784Z",
     "iopub.status.idle": "2024-11-23T00:05:25.220142Z",
     "shell.execute_reply": "2024-11-23T00:05:25.218913Z"
    },
    "papermill": {
     "duration": 0.040198,
     "end_time": "2024-11-23T00:05:25.222769",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.182571",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv(r'/kaggle/input/plant-health-data/plant_health_data.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3106a0e",
   "metadata": {
    "papermill": {
     "duration": 0.004346,
     "end_time": "2024-11-23T00:05:25.232231",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.227885",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2b6820dc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.243531Z",
     "iopub.status.busy": "2024-11-23T00:05:25.243092Z",
     "iopub.status.idle": "2024-11-23T00:05:25.251053Z",
     "shell.execute_reply": "2024-11-23T00:05:25.249900Z"
    },
    "papermill": {
     "duration": 0.016217,
     "end_time": "2024-11-23T00:05:25.253179",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.236962",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1200, 14)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "362a0073",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.264645Z",
     "iopub.status.busy": "2024-11-23T00:05:25.264228Z",
     "iopub.status.idle": "2024-11-23T00:05:25.302167Z",
     "shell.execute_reply": "2024-11-23T00:05:25.300899Z"
    },
    "papermill": {
     "duration": 0.047505,
     "end_time": "2024-11-23T00:05:25.305688",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.258183",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Timestamp</th>\n",
       "      <th>Plant_ID</th>\n",
       "      <th>Soil_Moisture</th>\n",
       "      <th>Ambient_Temperature</th>\n",
       "      <th>Soil_Temperature</th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Light_Intensity</th>\n",
       "      <th>Soil_pH</th>\n",
       "      <th>Nitrogen_Level</th>\n",
       "      <th>Phosphorus_Level</th>\n",
       "      <th>Potassium_Level</th>\n",
       "      <th>Chlorophyll_Content</th>\n",
       "      <th>Electrochemical_Signal</th>\n",
       "      <th>Plant_Health_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1089</th>\n",
       "      <td>2024-10-05 16:54:53.493508</td>\n",
       "      <td>10</td>\n",
       "      <td>32.175201</td>\n",
       "      <td>22.898268</td>\n",
       "      <td>22.860591</td>\n",
       "      <td>50.950961</td>\n",
       "      <td>936.232887</td>\n",
       "      <td>5.869992</td>\n",
       "      <td>29.856375</td>\n",
       "      <td>13.095485</td>\n",
       "      <td>14.623116</td>\n",
       "      <td>36.0482</td>\n",
       "      <td>1.007205</td>\n",
       "      <td>Healthy</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Timestamp  Plant_ID  Soil_Moisture  \\\n",
       "1089  2024-10-05 16:54:53.493508        10      32.175201   \n",
       "\n",
       "      Ambient_Temperature  Soil_Temperature   Humidity  Light_Intensity  \\\n",
       "1089            22.898268         22.860591  50.950961       936.232887   \n",
       "\n",
       "       Soil_pH  Nitrogen_Level  Phosphorus_Level  Potassium_Level  \\\n",
       "1089  5.869992       29.856375         13.095485        14.623116   \n",
       "\n",
       "      Chlorophyll_Content  Electrochemical_Signal Plant_Health_Status  \n",
       "1089              36.0482                1.007205             Healthy  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a3ba9c11",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.325204Z",
     "iopub.status.busy": "2024-11-23T00:05:25.324699Z",
     "iopub.status.idle": "2024-11-23T00:05:25.349441Z",
     "shell.execute_reply": "2024-11-23T00:05:25.348372Z"
    },
    "papermill": {
     "duration": 0.035217,
     "end_time": "2024-11-23T00:05:25.352552",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.317335",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1200 entries, 0 to 1199\n",
      "Data columns (total 14 columns):\n",
      " #   Column                  Non-Null Count  Dtype  \n",
      "---  ------                  --------------  -----  \n",
      " 0   Timestamp               1200 non-null   object \n",
      " 1   Plant_ID                1200 non-null   int64  \n",
      " 2   Soil_Moisture           1200 non-null   float64\n",
      " 3   Ambient_Temperature     1200 non-null   float64\n",
      " 4   Soil_Temperature        1200 non-null   float64\n",
      " 5   Humidity                1200 non-null   float64\n",
      " 6   Light_Intensity         1200 non-null   float64\n",
      " 7   Soil_pH                 1200 non-null   float64\n",
      " 8   Nitrogen_Level          1200 non-null   float64\n",
      " 9   Phosphorus_Level        1200 non-null   float64\n",
      " 10  Potassium_Level         1200 non-null   float64\n",
      " 11  Chlorophyll_Content     1200 non-null   float64\n",
      " 12  Electrochemical_Signal  1200 non-null   float64\n",
      " 13  Plant_Health_Status     1200 non-null   object \n",
      "dtypes: float64(11), int64(1), object(2)\n",
      "memory usage: 131.4+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f0e08e6e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.370435Z",
     "iopub.status.busy": "2024-11-23T00:05:25.370075Z",
     "iopub.status.idle": "2024-11-23T00:05:25.377751Z",
     "shell.execute_reply": "2024-11-23T00:05:25.376746Z"
    },
    "papermill": {
     "duration": 0.019974,
     "end_time": "2024-11-23T00:05:25.380203",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.360229",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.drop(columns=['Timestamp'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "94d75715",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.392250Z",
     "iopub.status.busy": "2024-11-23T00:05:25.391762Z",
     "iopub.status.idle": "2024-11-23T00:05:25.400656Z",
     "shell.execute_reply": "2024-11-23T00:05:25.399607Z"
    },
    "papermill": {
     "duration": 0.017441,
     "end_time": "2024-11-23T00:05:25.402846",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.385405",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Plant_Health_Status\n",
       "High Stress        500\n",
       "Moderate Stress    401\n",
       "Healthy            299\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Plant_Health_Status.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "48e7f160",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.414732Z",
     "iopub.status.busy": "2024-11-23T00:05:25.414359Z",
     "iopub.status.idle": "2024-11-23T00:05:25.420548Z",
     "shell.execute_reply": "2024-11-23T00:05:25.419506Z"
    },
    "papermill": {
     "duration": 0.01481,
     "end_time": "2024-11-23T00:05:25.422846",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.408036",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "lbl = LabelEncoder()\n",
    "encoded = lbl.fit_transform(df.Plant_Health_Status)\n",
    "df.Plant_Health_Status = pd.Series(encoded)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7a06b1a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.434827Z",
     "iopub.status.busy": "2024-11-23T00:05:25.434432Z",
     "iopub.status.idle": "2024-11-23T00:05:25.455354Z",
     "shell.execute_reply": "2024-11-23T00:05:25.454256Z"
    },
    "papermill": {
     "duration": 0.029453,
     "end_time": "2024-11-23T00:05:25.457459",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.428006",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Plant_ID</th>\n",
       "      <th>Soil_Moisture</th>\n",
       "      <th>Ambient_Temperature</th>\n",
       "      <th>Soil_Temperature</th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Light_Intensity</th>\n",
       "      <th>Soil_pH</th>\n",
       "      <th>Nitrogen_Level</th>\n",
       "      <th>Phosphorus_Level</th>\n",
       "      <th>Potassium_Level</th>\n",
       "      <th>Chlorophyll_Content</th>\n",
       "      <th>Electrochemical_Signal</th>\n",
       "      <th>Plant_Health_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>27.521109</td>\n",
       "      <td>22.240245</td>\n",
       "      <td>21.900435</td>\n",
       "      <td>55.291904</td>\n",
       "      <td>556.172805</td>\n",
       "      <td>5.581955</td>\n",
       "      <td>10.003650</td>\n",
       "      <td>45.806852</td>\n",
       "      <td>39.076199</td>\n",
       "      <td>35.703006</td>\n",
       "      <td>0.941402</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>14.835566</td>\n",
       "      <td>21.706763</td>\n",
       "      <td>18.680892</td>\n",
       "      <td>63.949181</td>\n",
       "      <td>596.136721</td>\n",
       "      <td>7.135705</td>\n",
       "      <td>30.712562</td>\n",
       "      <td>25.394393</td>\n",
       "      <td>17.944826</td>\n",
       "      <td>27.993296</td>\n",
       "      <td>0.164899</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>17.086362</td>\n",
       "      <td>21.180946</td>\n",
       "      <td>15.392939</td>\n",
       "      <td>67.837956</td>\n",
       "      <td>591.124627</td>\n",
       "      <td>5.656852</td>\n",
       "      <td>29.337002</td>\n",
       "      <td>27.573892</td>\n",
       "      <td>35.706530</td>\n",
       "      <td>43.646308</td>\n",
       "      <td>1.081728</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>15.336156</td>\n",
       "      <td>22.593302</td>\n",
       "      <td>22.778394</td>\n",
       "      <td>58.190811</td>\n",
       "      <td>241.412476</td>\n",
       "      <td>5.584523</td>\n",
       "      <td>16.966621</td>\n",
       "      <td>26.180705</td>\n",
       "      <td>26.257746</td>\n",
       "      <td>37.838095</td>\n",
       "      <td>1.186088</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>39.822216</td>\n",
       "      <td>28.929001</td>\n",
       "      <td>18.100937</td>\n",
       "      <td>63.772036</td>\n",
       "      <td>444.493830</td>\n",
       "      <td>5.919707</td>\n",
       "      <td>10.944961</td>\n",
       "      <td>37.898907</td>\n",
       "      <td>37.654483</td>\n",
       "      <td>48.265812</td>\n",
       "      <td>1.609805</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1195</th>\n",
       "      <td>10</td>\n",
       "      <td>29.665780</td>\n",
       "      <td>27.605285</td>\n",
       "      <td>15.381699</td>\n",
       "      <td>54.668196</td>\n",
       "      <td>650.536854</td>\n",
       "      <td>5.715289</td>\n",
       "      <td>29.993107</td>\n",
       "      <td>14.914470</td>\n",
       "      <td>21.560747</td>\n",
       "      <td>24.273224</td>\n",
       "      <td>0.714553</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1196</th>\n",
       "      <td>10</td>\n",
       "      <td>15.490782</td>\n",
       "      <td>22.108112</td>\n",
       "      <td>15.221033</td>\n",
       "      <td>61.243143</td>\n",
       "      <td>768.760787</td>\n",
       "      <td>5.958957</td>\n",
       "      <td>45.258678</td>\n",
       "      <td>25.216248</td>\n",
       "      <td>31.940717</td>\n",
       "      <td>30.930676</td>\n",
       "      <td>1.448029</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1197</th>\n",
       "      <td>10</td>\n",
       "      <td>23.495723</td>\n",
       "      <td>21.680240</td>\n",
       "      <td>15.499764</td>\n",
       "      <td>40.693671</td>\n",
       "      <td>293.643366</td>\n",
       "      <td>7.419157</td>\n",
       "      <td>38.351189</td>\n",
       "      <td>48.656078</td>\n",
       "      <td>28.473233</td>\n",
       "      <td>38.324484</td>\n",
       "      <td>0.880019</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1198</th>\n",
       "      <td>10</td>\n",
       "      <td>30.971675</td>\n",
       "      <td>23.019488</td>\n",
       "      <td>21.934918</td>\n",
       "      <td>41.387107</td>\n",
       "      <td>492.952014</td>\n",
       "      <td>5.855767</td>\n",
       "      <td>49.402550</td>\n",
       "      <td>23.843971</td>\n",
       "      <td>19.750042</td>\n",
       "      <td>46.027529</td>\n",
       "      <td>0.344597</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1199</th>\n",
       "      <td>10</td>\n",
       "      <td>24.406357</td>\n",
       "      <td>25.724605</td>\n",
       "      <td>23.358573</td>\n",
       "      <td>47.505394</td>\n",
       "      <td>304.201566</td>\n",
       "      <td>6.122042</td>\n",
       "      <td>29.659287</td>\n",
       "      <td>34.372586</td>\n",
       "      <td>10.486062</td>\n",
       "      <td>41.977098</td>\n",
       "      <td>0.047541</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1200 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Plant_ID  Soil_Moisture  Ambient_Temperature  Soil_Temperature  \\\n",
       "0            1      27.521109            22.240245         21.900435   \n",
       "1            1      14.835566            21.706763         18.680892   \n",
       "2            1      17.086362            21.180946         15.392939   \n",
       "3            1      15.336156            22.593302         22.778394   \n",
       "4            1      39.822216            28.929001         18.100937   \n",
       "...        ...            ...                  ...               ...   \n",
       "1195        10      29.665780            27.605285         15.381699   \n",
       "1196        10      15.490782            22.108112         15.221033   \n",
       "1197        10      23.495723            21.680240         15.499764   \n",
       "1198        10      30.971675            23.019488         21.934918   \n",
       "1199        10      24.406357            25.724605         23.358573   \n",
       "\n",
       "       Humidity  Light_Intensity   Soil_pH  Nitrogen_Level  Phosphorus_Level  \\\n",
       "0     55.291904       556.172805  5.581955       10.003650         45.806852   \n",
       "1     63.949181       596.136721  7.135705       30.712562         25.394393   \n",
       "2     67.837956       591.124627  5.656852       29.337002         27.573892   \n",
       "3     58.190811       241.412476  5.584523       16.966621         26.180705   \n",
       "4     63.772036       444.493830  5.919707       10.944961         37.898907   \n",
       "...         ...              ...       ...             ...               ...   \n",
       "1195  54.668196       650.536854  5.715289       29.993107         14.914470   \n",
       "1196  61.243143       768.760787  5.958957       45.258678         25.216248   \n",
       "1197  40.693671       293.643366  7.419157       38.351189         48.656078   \n",
       "1198  41.387107       492.952014  5.855767       49.402550         23.843971   \n",
       "1199  47.505394       304.201566  6.122042       29.659287         34.372586   \n",
       "\n",
       "      Potassium_Level  Chlorophyll_Content  Electrochemical_Signal  \\\n",
       "0           39.076199            35.703006                0.941402   \n",
       "1           17.944826            27.993296                0.164899   \n",
       "2           35.706530            43.646308                1.081728   \n",
       "3           26.257746            37.838095                1.186088   \n",
       "4           37.654483            48.265812                1.609805   \n",
       "...               ...                  ...                     ...   \n",
       "1195        21.560747            24.273224                0.714553   \n",
       "1196        31.940717            30.930676                1.448029   \n",
       "1197        28.473233            38.324484                0.880019   \n",
       "1198        19.750042            46.027529                0.344597   \n",
       "1199        10.486062            41.977098                0.047541   \n",
       "\n",
       "      Plant_Health_Status  \n",
       "0                       1  \n",
       "1                       1  \n",
       "2                       1  \n",
       "3                       1  \n",
       "4                       1  \n",
       "...                   ...  \n",
       "1195                    2  \n",
       "1196                    1  \n",
       "1197                    2  \n",
       "1198                    0  \n",
       "1199                    2  \n",
       "\n",
       "[1200 rows x 13 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7e1e7bdb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.470098Z",
     "iopub.status.busy": "2024-11-23T00:05:25.469712Z",
     "iopub.status.idle": "2024-11-23T00:05:25.480671Z",
     "shell.execute_reply": "2024-11-23T00:05:25.479594Z"
    },
    "papermill": {
     "duration": 0.020021,
     "end_time": "2024-11-23T00:05:25.483146",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.463125",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1200 entries, 0 to 1199\n",
      "Data columns (total 13 columns):\n",
      " #   Column                  Non-Null Count  Dtype  \n",
      "---  ------                  --------------  -----  \n",
      " 0   Plant_ID                1200 non-null   int64  \n",
      " 1   Soil_Moisture           1200 non-null   float64\n",
      " 2   Ambient_Temperature     1200 non-null   float64\n",
      " 3   Soil_Temperature        1200 non-null   float64\n",
      " 4   Humidity                1200 non-null   float64\n",
      " 5   Light_Intensity         1200 non-null   float64\n",
      " 6   Soil_pH                 1200 non-null   float64\n",
      " 7   Nitrogen_Level          1200 non-null   float64\n",
      " 8   Phosphorus_Level        1200 non-null   float64\n",
      " 9   Potassium_Level         1200 non-null   float64\n",
      " 10  Chlorophyll_Content     1200 non-null   float64\n",
      " 11  Electrochemical_Signal  1200 non-null   float64\n",
      " 12  Plant_Health_Status     1200 non-null   int64  \n",
      "dtypes: float64(11), int64(2)\n",
      "memory usage: 122.0 KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b143182a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.496698Z",
     "iopub.status.busy": "2024-11-23T00:05:25.495749Z",
     "iopub.status.idle": "2024-11-23T00:05:25.501997Z",
     "shell.execute_reply": "2024-11-23T00:05:25.500912Z"
    },
    "papermill": {
     "duration": 0.015409,
     "end_time": "2024-11-23T00:05:25.504374",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.488965",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "target = 'Plant_Health_Status'\n",
    "X = df.drop(columns=[target])\n",
    "y = df[target]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "bc7f833d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.517305Z",
     "iopub.status.busy": "2024-11-23T00:05:25.516913Z",
     "iopub.status.idle": "2024-11-23T00:05:25.528095Z",
     "shell.execute_reply": "2024-11-23T00:05:25.526976Z"
    },
    "papermill": {
     "duration": 0.020573,
     "end_time": "2024-11-23T00:05:25.530607",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.510034",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "scaler = StandardScaler()\n",
    "X_scaled = scaler.fit_transform(X)\n",
    "X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f36ac2b",
   "metadata": {
    "papermill": {
     "duration": 0.005334,
     "end_time": "2024-11-23T00:05:25.541748",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.536414",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Building ANN structure"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "47f89962",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.555026Z",
     "iopub.status.busy": "2024-11-23T00:05:25.554630Z",
     "iopub.status.idle": "2024-11-23T00:05:25.657626Z",
     "shell.execute_reply": "2024-11-23T00:05:25.655715Z"
    },
    "papermill": {
     "duration": 0.112743,
     "end_time": "2024-11-23T00:05:25.660004",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.547261",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
      "  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "model = Sequential() # model architecture\n",
    "\n",
    "# adding layers\n",
    "model.add(Dense(12, activation='relu', input_dim=12))\n",
    "model.add(Dense(6, activation='relu'))\n",
    "model.add(Dense(1, activation='relu'))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "163235ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.673442Z",
     "iopub.status.busy": "2024-11-23T00:05:25.673013Z",
     "iopub.status.idle": "2024-11-23T00:05:25.695229Z",
     "shell.execute_reply": "2024-11-23T00:05:25.693718Z"
    },
    "papermill": {
     "duration": 0.031661,
     "end_time": "2024-11-23T00:05:25.697533",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.665872",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1mModel: \"sequential\"\u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">156</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">6</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">78</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │             <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span> │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m12\u001b[0m)             │           \u001b[38;5;34m156\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m6\u001b[0m)              │            \u001b[38;5;34m78\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │             \u001b[38;5;34m7\u001b[0m │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">241</span> (964.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m241\u001b[0m (964.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">241</span> (964.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m241\u001b[0m (964.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "95451982",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.711962Z",
     "iopub.status.busy": "2024-11-23T00:05:25.711548Z",
     "iopub.status.idle": "2024-11-23T00:05:25.728270Z",
     "shell.execute_reply": "2024-11-23T00:05:25.726797Z"
    },
    "papermill": {
     "duration": 0.026898,
     "end_time": "2024-11-23T00:05:25.730894",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.703996",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c1ae4f06",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:25.745442Z",
     "iopub.status.busy": "2024-11-23T00:05:25.745021Z",
     "iopub.status.idle": "2024-11-23T00:05:35.628870Z",
     "shell.execute_reply": "2024-11-23T00:05:35.627505Z"
    },
    "papermill": {
     "duration": 9.894099,
     "end_time": "2024-11-23T00:05:35.631471",
     "exception": false,
     "start_time": "2024-11-23T00:05:25.737372",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 15ms/step - accuracy: 0.3338 - loss: 2.1169 - val_accuracy: 0.3802 - val_loss: 1.4023\n",
      "Epoch 2/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.3718 - loss: 1.2809 - val_accuracy: 0.4323 - val_loss: 0.8859\n",
      "Epoch 3/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.3689 - loss: 0.6376 - val_accuracy: 0.4375 - val_loss: 0.3859\n",
      "Epoch 4/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4325 - loss: 0.1332 - val_accuracy: 0.4427 - val_loss: 0.0290\n",
      "Epoch 5/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4086 - loss: -0.3872 - val_accuracy: 0.4375 - val_loss: -0.3549\n",
      "Epoch 6/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4153 - loss: -0.6269 - val_accuracy: 0.4427 - val_loss: -0.5325\n",
      "Epoch 7/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4190 - loss: -1.3140 - val_accuracy: 0.4583 - val_loss: -0.6139\n",
      "Epoch 8/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4456 - loss: -1.0686 - val_accuracy: 0.4583 - val_loss: -0.4400\n",
      "Epoch 9/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4584 - loss: -0.6225 - val_accuracy: 0.4583 - val_loss: -0.5537\n",
      "Epoch 10/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4423 - loss: -1.0744 - val_accuracy: 0.4531 - val_loss: -0.5704\n",
      "Epoch 11/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4721 - loss: -1.4671 - val_accuracy: 0.4583 - val_loss: -0.5873\n",
      "Epoch 12/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4886 - loss: -1.0760 - val_accuracy: 0.4583 - val_loss: -0.6651\n",
      "Epoch 13/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4563 - loss: -1.7084 - val_accuracy: 0.4635 - val_loss: -0.7193\n",
      "Epoch 14/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4230 - loss: -1.6396 - val_accuracy: 0.4635 - val_loss: -0.7196\n",
      "Epoch 15/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4512 - loss: -1.8878 - val_accuracy: 0.4583 - val_loss: -0.8872\n",
      "Epoch 16/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4334 - loss: -1.6687 - val_accuracy: 0.4635 - val_loss: -0.9338\n",
      "Epoch 17/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4421 - loss: -1.4941 - val_accuracy: 0.4688 - val_loss: -0.8995\n",
      "Epoch 18/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4385 - loss: -1.9893 - val_accuracy: 0.4635 - val_loss: -0.9555\n",
      "Epoch 19/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4316 - loss: -1.6921 - val_accuracy: 0.4583 - val_loss: -0.9452\n",
      "Epoch 20/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4156 - loss: -1.9106 - val_accuracy: 0.4583 - val_loss: -0.9937\n",
      "Epoch 21/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4363 - loss: -2.1129 - val_accuracy: 0.4583 - val_loss: -1.0896\n",
      "Epoch 22/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4338 - loss: -2.2885 - val_accuracy: 0.4635 - val_loss: -1.1439\n",
      "Epoch 23/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4440 - loss: -2.3897 - val_accuracy: 0.4635 - val_loss: -1.2237\n",
      "Epoch 24/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4747 - loss: -2.1354 - val_accuracy: 0.4635 - val_loss: -1.2853\n",
      "Epoch 25/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4418 - loss: -2.2539 - val_accuracy: 0.4635 - val_loss: -1.3004\n",
      "Epoch 26/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.4444 - loss: -2.0082 - val_accuracy: 0.4635 - val_loss: -1.3104\n",
      "Epoch 27/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4541 - loss: -2.6052 - val_accuracy: 0.4635 - val_loss: -1.3187\n",
      "Epoch 28/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.4498 - loss: -2.6544 - val_accuracy: 0.4635 - val_loss: -1.5290\n",
      "Epoch 29/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4534 - loss: -2.6107 - val_accuracy: 0.4635 - val_loss: -1.5512\n",
      "Epoch 30/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4650 - loss: -2.3709 - val_accuracy: 0.4635 - val_loss: -1.6267\n",
      "Epoch 31/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.5080 - loss: -2.1787 - val_accuracy: 0.4688 - val_loss: -1.6305\n",
      "Epoch 32/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4516 - loss: -2.6572 - val_accuracy: 0.4688 - val_loss: -1.6376\n",
      "Epoch 33/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4325 - loss: -2.8211 - val_accuracy: 0.4688 - val_loss: -1.6905\n",
      "Epoch 34/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4530 - loss: -2.8541 - val_accuracy: 0.4688 - val_loss: -1.6515\n",
      "Epoch 35/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4373 - loss: -2.5289 - val_accuracy: 0.4688 - val_loss: -1.7174\n",
      "Epoch 36/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4448 - loss: -2.6030 - val_accuracy: 0.4688 - val_loss: -1.7324\n",
      "Epoch 37/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.4678 - loss: -2.6809 - val_accuracy: 0.4740 - val_loss: -1.8565\n",
      "Epoch 38/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4767 - loss: -2.6231 - val_accuracy: 0.4688 - val_loss: -1.8252\n",
      "Epoch 39/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4531 - loss: -2.6979 - val_accuracy: 0.4635 - val_loss: -1.8458\n",
      "Epoch 40/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4521 - loss: -2.9137 - val_accuracy: 0.4635 - val_loss: -1.9379\n",
      "Epoch 41/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4513 - loss: -2.6852 - val_accuracy: 0.4740 - val_loss: -1.9885\n",
      "Epoch 42/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4496 - loss: -2.6892 - val_accuracy: 0.4635 - val_loss: -2.1094\n",
      "Epoch 43/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4541 - loss: -2.6411 - val_accuracy: 0.4635 - val_loss: -2.2130\n",
      "Epoch 44/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4746 - loss: -2.9163 - val_accuracy: 0.4635 - val_loss: -2.1642\n",
      "Epoch 45/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.4618 - loss: -2.3647 - val_accuracy: 0.4635 - val_loss: -2.2242\n",
      "Epoch 46/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4695 - loss: -2.5893 - val_accuracy: 0.4635 - val_loss: -2.2286\n",
      "Epoch 47/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4629 - loss: -2.9389 - val_accuracy: 0.4635 - val_loss: -2.2354\n",
      "Epoch 48/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4599 - loss: -3.0443 - val_accuracy: 0.4792 - val_loss: -2.2443\n",
      "Epoch 49/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4708 - loss: -2.6802 - val_accuracy: 0.4792 - val_loss: -2.1864\n",
      "Epoch 50/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4580 - loss: -3.1018 - val_accuracy: 0.4792 - val_loss: -2.1342\n",
      "Epoch 51/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4714 - loss: -2.5807 - val_accuracy: 0.4792 - val_loss: -2.1419\n",
      "Epoch 52/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.4730 - loss: -3.0045 - val_accuracy: 0.4792 - val_loss: -2.2264\n",
      "Epoch 53/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4722 - loss: -3.1251 - val_accuracy: 0.4792 - val_loss: -2.2469\n",
      "Epoch 54/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4606 - loss: -2.6310 - val_accuracy: 0.4792 - val_loss: -2.2527\n",
      "Epoch 55/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4732 - loss: -2.4570 - val_accuracy: 0.4792 - val_loss: -2.2549\n",
      "Epoch 56/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4655 - loss: -3.0747 - val_accuracy: 0.4792 - val_loss: -2.2585\n",
      "Epoch 57/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4981 - loss: -3.2138 - val_accuracy: 0.4792 - val_loss: -2.2630\n",
      "Epoch 58/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4777 - loss: -2.7356 - val_accuracy: 0.4792 - val_loss: -2.2636\n",
      "Epoch 59/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4987 - loss: -2.9499 - val_accuracy: 0.4792 - val_loss: -2.2681\n",
      "Epoch 60/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4825 - loss: -2.8963 - val_accuracy: 0.4792 - val_loss: -2.2727\n",
      "Epoch 61/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4684 - loss: -2.4936 - val_accuracy: 0.4792 - val_loss: -2.3348\n",
      "Epoch 62/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4590 - loss: -2.8670 - val_accuracy: 0.4844 - val_loss: -2.3003\n",
      "Epoch 63/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4801 - loss: -3.4870 - val_accuracy: 0.4844 - val_loss: -2.2371\n",
      "Epoch 64/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4675 - loss: -3.4743 - val_accuracy: 0.4844 - val_loss: -2.2960\n",
      "Epoch 65/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4755 - loss: -3.0834 - val_accuracy: 0.4896 - val_loss: -2.2785\n",
      "Epoch 66/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.4766 - loss: -3.2917 - val_accuracy: 0.4896 - val_loss: -2.2267\n",
      "Epoch 67/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4478 - loss: -3.1672 - val_accuracy: 0.4792 - val_loss: -2.1068\n",
      "Epoch 68/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4410 - loss: -2.9696 - val_accuracy: 0.4792 - val_loss: -2.1151\n",
      "Epoch 69/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4617 - loss: -2.8100 - val_accuracy: 0.4792 - val_loss: -2.1216\n",
      "Epoch 70/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4539 - loss: -2.9876 - val_accuracy: 0.4792 - val_loss: -2.1715\n",
      "Epoch 71/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4747 - loss: -3.3987 - val_accuracy: 0.4792 - val_loss: -2.1794\n",
      "Epoch 72/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4340 - loss: -3.5819 - val_accuracy: 0.4792 - val_loss: -2.1744\n",
      "Epoch 73/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4544 - loss: -3.0835 - val_accuracy: 0.4792 - val_loss: -2.1668\n",
      "Epoch 74/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4509 - loss: -3.3068 - val_accuracy: 0.4583 - val_loss: -1.9478\n",
      "Epoch 75/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4351 - loss: -3.0153 - val_accuracy: 0.4583 - val_loss: -1.8405\n",
      "Epoch 76/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4397 - loss: -3.1527 - val_accuracy: 0.4635 - val_loss: -1.8896\n",
      "Epoch 77/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4625 - loss: -3.1404 - val_accuracy: 0.4635 - val_loss: -1.8858\n",
      "Epoch 78/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4617 - loss: -3.5493 - val_accuracy: 0.4635 - val_loss: -1.8570\n",
      "Epoch 79/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4335 - loss: -2.9945 - val_accuracy: 0.4792 - val_loss: -1.9870\n",
      "Epoch 80/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4421 - loss: -3.4163 - val_accuracy: 0.4740 - val_loss: -2.0623\n",
      "Epoch 81/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4748 - loss: -3.1111 - val_accuracy: 0.4740 - val_loss: -2.1687\n",
      "Epoch 82/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4601 - loss: -3.2147 - val_accuracy: 0.4740 - val_loss: -2.1761\n",
      "Epoch 83/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.4427 - loss: -3.0324 - val_accuracy: 0.4896 - val_loss: -2.2521\n",
      "Epoch 84/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4641 - loss: -3.0535 - val_accuracy: 0.4948 - val_loss: -2.2118\n",
      "Epoch 85/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4837 - loss: -3.2652 - val_accuracy: 0.4948 - val_loss: -2.0991\n",
      "Epoch 86/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4430 - loss: -3.5337 - val_accuracy: 0.4948 - val_loss: -2.2646\n",
      "Epoch 87/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4987 - loss: -3.1767 - val_accuracy: 0.4948 - val_loss: -2.2796\n",
      "Epoch 88/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4792 - loss: -3.2399 - val_accuracy: 0.4948 - val_loss: -2.2813\n",
      "Epoch 89/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4734 - loss: -3.8959 - val_accuracy: 0.4844 - val_loss: -2.1347\n",
      "Epoch 90/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.4785 - loss: -2.9888 - val_accuracy: 0.4844 - val_loss: -2.2657\n",
      "Epoch 91/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4488 - loss: -3.0424 - val_accuracy: 0.4844 - val_loss: -2.3289\n",
      "Epoch 92/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4662 - loss: -2.8319 - val_accuracy: 0.4844 - val_loss: -2.3108\n",
      "Epoch 93/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4127 - loss: -3.7043 - val_accuracy: 0.4844 - val_loss: -2.2551\n",
      "Epoch 94/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4621 - loss: -3.1379 - val_accuracy: 0.4844 - val_loss: -2.2767\n",
      "Epoch 95/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4815 - loss: -3.0654 - val_accuracy: 0.4844 - val_loss: -2.2735\n",
      "Epoch 96/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4725 - loss: -3.0360 - val_accuracy: 0.4844 - val_loss: -2.2720\n",
      "Epoch 97/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.4604 - loss: -3.7891 - val_accuracy: 0.4844 - val_loss: -2.2498\n",
      "Epoch 98/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4782 - loss: -3.8716 - val_accuracy: 0.4948 - val_loss: -2.3622\n",
      "Epoch 99/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4675 - loss: -3.0447 - val_accuracy: 0.5052 - val_loss: -2.3665\n",
      "Epoch 100/100\n",
      "\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4882 - loss: -3.1038 - val_accuracy: 0.5104 - val_loss: -2.3594\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.src.callbacks.history.History at 0x7bad8329ed10>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(X_train, y_train, batch_size=50, epochs=100, validation_split=0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "05071139",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:35.679185Z",
     "iopub.status.busy": "2024-11-23T00:05:35.678755Z",
     "iopub.status.idle": "2024-11-23T00:05:35.841383Z",
     "shell.execute_reply": "2024-11-23T00:05:35.840182Z"
    },
    "papermill": {
     "duration": 0.188834,
     "end_time": "2024-11-23T00:05:35.843851",
     "exception": false,
     "start_time": "2024-11-23T00:05:35.655017",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m8/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step \n"
     ]
    }
   ],
   "source": [
    "y_pred = model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "2a3b5b14",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-23T00:05:35.890133Z",
     "iopub.status.busy": "2024-11-23T00:05:35.889718Z",
     "iopub.status.idle": "2024-11-23T00:05:35.899886Z",
     "shell.execute_reply": "2024-11-23T00:05:35.898708Z"
    },
    "papermill": {
     "duration": 0.035679,
     "end_time": "2024-11-23T00:05:35.901978",
     "exception": false,
     "start_time": "2024-11-23T00:05:35.866299",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[2.7708378 ],\n",
       "       [4.539672  ],\n",
       "       [0.77750784],\n",
       "       [1.1685406 ],\n",
       "       [1.7488785 ],\n",
       "       [0.6745936 ],\n",
       "       [2.6012871 ],\n",
       "       [1.8605726 ],\n",
       "       [1.0060077 ],\n",
       "       [3.360236  ],\n",
       "       [2.8618538 ],\n",
       "       [1.2789654 ],\n",
       "       [1.7179064 ],\n",
       "       [1.2782773 ],\n",
       "       [0.70020765],\n",
       "       [2.1520514 ],\n",
       "       [1.7942437 ],\n",
       "       [1.6705223 ],\n",
       "       [1.6427923 ],\n",
       "       [0.8875463 ],\n",
       "       [0.67858815],\n",
       "       [1.3944825 ],\n",
       "       [0.6064269 ],\n",
       "       [0.5895355 ],\n",
       "       [1.0802151 ],\n",
       "       [0.6019761 ],\n",
       "       [0.9228048 ],\n",
       "       [1.7099946 ],\n",
       "       [2.8675826 ],\n",
       "       [0.8856703 ],\n",
       "       [1.1362202 ],\n",
       "       [2.9510045 ],\n",
       "       [0.92848945],\n",
       "       [1.3377532 ],\n",
       "       [1.279698  ],\n",
       "       [1.47576   ],\n",
       "       [1.4716991 ],\n",
       "       [2.7501643 ],\n",
       "       [0.41525424],\n",
       "       [1.046091  ],\n",
       "       [2.2736843 ],\n",
       "       [1.745432  ],\n",
       "       [1.2082125 ],\n",
       "       [0.44154984],\n",
       "       [0.32561365],\n",
       "       [0.7897545 ],\n",
       "       [1.2591758 ],\n",
       "       [0.461124  ],\n",
       "       [1.5509039 ],\n",
       "       [2.4006102 ],\n",
       "       [3.0005019 ],\n",
       "       [2.804744  ],\n",
       "       [0.55541444],\n",
       "       [2.6134171 ],\n",
       "       [1.6188337 ],\n",
       "       [1.3189828 ],\n",
       "       [3.2626417 ],\n",
       "       [2.9181597 ],\n",
       "       [2.6034324 ],\n",
       "       [2.7112913 ],\n",
       "       [5.1705728 ],\n",
       "       [0.6299554 ],\n",
       "       [2.2804534 ],\n",
       "       [2.1150932 ],\n",
       "       [3.8293376 ],\n",
       "       [1.7782308 ],\n",
       "       [3.3210711 ],\n",
       "       [1.747041  ],\n",
       "       [3.5488317 ],\n",
       "       [0.6905874 ],\n",
       "       [1.8571944 ],\n",
       "       [2.7408242 ],\n",
       "       [1.0870718 ],\n",
       "       [5.0358105 ],\n",
       "       [0.5221163 ],\n",
       "       [1.2901797 ],\n",
       "       [4.119526  ],\n",
       "       [2.3382313 ],\n",
       "       [1.2825097 ],\n",
       "       [4.1717215 ],\n",
       "       [0.48275244],\n",
       "       [2.9913278 ],\n",
       "       [0.4215025 ],\n",
       "       [0.59147805],\n",
       "       [1.2255032 ],\n",
       "       [1.210711  ],\n",
       "       [3.6116514 ],\n",
       "       [2.5679765 ],\n",
       "       [1.3743329 ],\n",
       "       [2.977998  ],\n",
       "       [2.519871  ],\n",
       "       [2.2120588 ],\n",
       "       [1.062175  ],\n",
       "       [3.5077472 ],\n",
       "       [0.843993  ],\n",
       "       [2.152016  ],\n",
       "       [1.9181165 ],\n",
       "       [1.770483  ],\n",
       "       [0.62922144],\n",
       "       [2.8325672 ],\n",
       "       [2.5140762 ],\n",
       "       [1.4194323 ],\n",
       "       [2.1925259 ],\n",
       "       [3.2622557 ],\n",
       "       [0.67745996],\n",
       "       [0.26947165],\n",
       "       [2.5135396 ],\n",
       "       [1.1356207 ],\n",
       "       [0.76996964],\n",
       "       [3.3498578 ],\n",
       "       [1.5268803 ],\n",
       "       [1.5297406 ],\n",
       "       [2.837576  ],\n",
       "       [2.203792  ],\n",
       "       [0.9907005 ],\n",
       "       [1.42047   ],\n",
       "       [2.5227635 ],\n",
       "       [2.5911264 ],\n",
       "       [0.51683915],\n",
       "       [2.714638  ],\n",
       "       [2.1682436 ],\n",
       "       [2.505404  ],\n",
       "       [1.4626298 ],\n",
       "       [3.0001912 ],\n",
       "       [1.1379308 ],\n",
       "       [1.3938426 ],\n",
       "       [0.64403063],\n",
       "       [1.1230243 ],\n",
       "       [3.7458625 ],\n",
       "       [2.566746  ],\n",
       "       [3.0369604 ],\n",
       "       [0.7577423 ],\n",
       "       [3.0551283 ],\n",
       "       [0.8993492 ],\n",
       "       [4.235439  ],\n",
       "       [3.4515922 ],\n",
       "       [0.25292486],\n",
       "       [0.89025426],\n",
       "       [1.4776934 ],\n",
       "       [0.76244336],\n",
       "       [3.5467472 ],\n",
       "       [3.4272017 ],\n",
       "       [2.9911819 ],\n",
       "       [1.2332686 ],\n",
       "       [0.5303613 ],\n",
       "       [1.8373765 ],\n",
       "       [1.0197085 ],\n",
       "       [3.249829  ],\n",
       "       [0.77830136],\n",
       "       [1.3291544 ],\n",
       "       [3.0893042 ],\n",
       "       [1.7283992 ],\n",
       "       [4.0476995 ],\n",
       "       [3.1896641 ],\n",
       "       [0.6979589 ],\n",
       "       [1.2853491 ],\n",
       "       [0.9049519 ],\n",
       "       [1.645094  ],\n",
       "       [0.6826602 ],\n",
       "       [3.4723191 ],\n",
       "       [2.327074  ],\n",
       "       [2.290228  ],\n",
       "       [3.0298748 ],\n",
       "       [0.662073  ],\n",
       "       [1.645708  ],\n",
       "       [1.8199065 ],\n",
       "       [1.517086  ],\n",
       "       [0.8725727 ],\n",
       "       [3.0265732 ],\n",
       "       [1.0147406 ],\n",
       "       [1.2415515 ],\n",
       "       [1.3132782 ],\n",
       "       [1.5268233 ],\n",
       "       [2.7379704 ],\n",
       "       [2.7585733 ],\n",
       "       [1.321691  ],\n",
       "       [1.2472818 ],\n",
       "       [1.4718665 ],\n",
       "       [0.8107    ],\n",
       "       [1.0503591 ],\n",
       "       [0.16294852],\n",
       "       [1.5945002 ],\n",
       "       [0.88911265],\n",
       "       [3.5097983 ],\n",
       "       [2.653588  ],\n",
       "       [1.2379578 ],\n",
       "       [2.0025802 ],\n",
       "       [0.8217937 ],\n",
       "       [2.5572927 ],\n",
       "       [2.0941544 ],\n",
       "       [2.100653  ],\n",
       "       [3.4747593 ],\n",
       "       [0.66863495],\n",
       "       [1.0532794 ],\n",
       "       [2.5674396 ],\n",
       "       [0.86706364],\n",
       "       [1.0050933 ],\n",
       "       [1.6543967 ],\n",
       "       [0.99427396],\n",
       "       [0.7389771 ],\n",
       "       [1.1647086 ],\n",
       "       [1.0079665 ],\n",
       "       [1.4161835 ],\n",
       "       [0.88662636],\n",
       "       [1.2835974 ],\n",
       "       [0.3442107 ],\n",
       "       [2.0839803 ],\n",
       "       [1.2243141 ],\n",
       "       [1.1269807 ],\n",
       "       [0.8570154 ],\n",
       "       [2.6304016 ],\n",
       "       [2.7938864 ],\n",
       "       [2.8192246 ],\n",
       "       [2.0164447 ],\n",
       "       [0.80748826],\n",
       "       [2.2467315 ],\n",
       "       [2.4004266 ],\n",
       "       [1.1917921 ],\n",
       "       [2.509759  ],\n",
       "       [2.0266461 ],\n",
       "       [2.3220246 ],\n",
       "       [2.941558  ],\n",
       "       [1.6553522 ],\n",
       "       [1.3530679 ],\n",
       "       [2.204949  ],\n",
       "       [3.9880981 ],\n",
       "       [2.2649534 ],\n",
       "       [1.6318163 ],\n",
       "       [1.710819  ],\n",
       "       [2.4065704 ],\n",
       "       [2.3349664 ],\n",
       "       [1.4940306 ],\n",
       "       [0.6803595 ],\n",
       "       [1.0295612 ],\n",
       "       [1.1711817 ],\n",
       "       [1.6135918 ],\n",
       "       [3.0324228 ],\n",
       "       [2.63945   ],\n",
       "       [3.5511518 ],\n",
       "       [1.9220587 ]], dtype=float32)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ac155787",
   "metadata": {
    "papermill": {
     "duration": 0.021899,
     "end_time": "2024-11-23T00:05:35.946468",
     "exception": false,
     "start_time": "2024-11-23T00:05:35.924569",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6b1d8350",
   "metadata": {
    "papermill": {
     "duration": 0.021991,
     "end_time": "2024-11-23T00:05:35.990866",
     "exception": false,
     "start_time": "2024-11-23T00:05:35.968875",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5995087,
     "sourceId": 9784968,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30786,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 32.484941,
   "end_time": "2024-11-23T00:05:38.366642",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-11-23T00:05:05.881701",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
